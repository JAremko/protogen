// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: simple.proto

package test

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SimpleMessage_Status int32

const (
	SimpleMessage_UNKNOWN  SimpleMessage_Status = 0
	SimpleMessage_ACTIVE   SimpleMessage_Status = 1
	SimpleMessage_INACTIVE SimpleMessage_Status = 2
)

// Enum value maps for SimpleMessage_Status.
var (
	SimpleMessage_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "ACTIVE",
		2: "INACTIVE",
	}
	SimpleMessage_Status_value = map[string]int32{
		"UNKNOWN":  0,
		"ACTIVE":   1,
		"INACTIVE": 2,
	}
)

func (x SimpleMessage_Status) Enum() *SimpleMessage_Status {
	p := new(SimpleMessage_Status)
	*p = x
	return p
}

func (x SimpleMessage_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SimpleMessage_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_simple_proto_enumTypes[0].Descriptor()
}

func (SimpleMessage_Status) Type() protoreflect.EnumType {
	return &file_simple_proto_enumTypes[0]
}

func (x SimpleMessage_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SimpleMessage_Status.Descriptor instead.
func (SimpleMessage_Status) EnumDescriptor() ([]byte, []int) {
	return file_simple_proto_rawDescGZIP(), []int{0, 0}
}

type SimpleMessage struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Id       string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Value    int32                  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	Tags     []string               `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	Status   SimpleMessage_Status   `protobuf:"varint,4,opt,name=status,proto3,enum=test.SimpleMessage_Status" json:"status,omitempty"`
	Metadata map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Types that are valid to be assigned to Data:
	//
	//	*SimpleMessage_TextData
	//	*SimpleMessage_BinaryData
	Data          isSimpleMessage_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimpleMessage) Reset() {
	*x = SimpleMessage{}
	mi := &file_simple_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimpleMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleMessage) ProtoMessage() {}

func (x *SimpleMessage) ProtoReflect() protoreflect.Message {
	mi := &file_simple_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleMessage.ProtoReflect.Descriptor instead.
func (*SimpleMessage) Descriptor() ([]byte, []int) {
	return file_simple_proto_rawDescGZIP(), []int{0}
}

func (x *SimpleMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SimpleMessage) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *SimpleMessage) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *SimpleMessage) GetStatus() SimpleMessage_Status {
	if x != nil {
		return x.Status
	}
	return SimpleMessage_UNKNOWN
}

func (x *SimpleMessage) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *SimpleMessage) GetData() isSimpleMessage_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SimpleMessage) GetTextData() string {
	if x != nil {
		if x, ok := x.Data.(*SimpleMessage_TextData); ok {
			return x.TextData
		}
	}
	return ""
}

func (x *SimpleMessage) GetBinaryData() []byte {
	if x != nil {
		if x, ok := x.Data.(*SimpleMessage_BinaryData); ok {
			return x.BinaryData
		}
	}
	return nil
}

type isSimpleMessage_Data interface {
	isSimpleMessage_Data()
}

type SimpleMessage_TextData struct {
	TextData string `protobuf:"bytes,6,opt,name=text_data,json=textData,proto3,oneof"`
}

type SimpleMessage_BinaryData struct {
	BinaryData []byte `protobuf:"bytes,7,opt,name=binary_data,json=binaryData,proto3,oneof"`
}

func (*SimpleMessage_TextData) isSimpleMessage_Data() {}

func (*SimpleMessage_BinaryData) isSimpleMessage_Data() {}

type SimpleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimpleRequest) Reset() {
	*x = SimpleRequest{}
	mi := &file_simple_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimpleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleRequest) ProtoMessage() {}

func (x *SimpleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_simple_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleRequest.ProtoReflect.Descriptor instead.
func (*SimpleRequest) Descriptor() ([]byte, []int) {
	return file_simple_proto_rawDescGZIP(), []int{1}
}

func (x *SimpleRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SimpleRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SimpleRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type SimpleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*SimpleMessage       `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	NextPageToken string                 `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimpleResponse) Reset() {
	*x = SimpleResponse{}
	mi := &file_simple_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimpleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleResponse) ProtoMessage() {}

func (x *SimpleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_simple_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleResponse.ProtoReflect.Descriptor instead.
func (*SimpleResponse) Descriptor() ([]byte, []int) {
	return file_simple_proto_rawDescGZIP(), []int{2}
}

func (x *SimpleResponse) GetResults() []*SimpleMessage {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *SimpleResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *SimpleResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

var File_simple_proto protoreflect.FileDescriptor

const file_simple_proto_rawDesc = "" +
	"\n" +
	"\fsimple.proto\x12\x04test\"\xf4\x02\n" +
	"\rSimpleMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value\x12\x12\n" +
	"\x04tags\x18\x03 \x03(\tR\x04tags\x122\n" +
	"\x06status\x18\x04 \x01(\x0e2\x1a.test.SimpleMessage.StatusR\x06status\x12=\n" +
	"\bmetadata\x18\x05 \x03(\v2!.test.SimpleMessage.MetadataEntryR\bmetadata\x12\x1d\n" +
	"\ttext_data\x18\x06 \x01(\tH\x00R\btextData\x12!\n" +
	"\vbinary_data\x18\a \x01(\fH\x00R\n" +
	"binaryData\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"/\n" +
	"\x06Status\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\n" +
	"\n" +
	"\x06ACTIVE\x10\x01\x12\f\n" +
	"\bINACTIVE\x10\x02B\x06\n" +
	"\x04data\"V\n" +
	"\rSimpleRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\"\x88\x01\n" +
	"\x0eSimpleResponse\x12-\n" +
	"\aresults\x18\x01 \x03(\v2\x13.test.SimpleMessageR\aresults\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12&\n" +
	"\x0fnext_page_token\x18\x03 \x01(\tR\rnextPageToken2\x81\x01\n" +
	"\rSimpleService\x126\n" +
	"\tGetSimple\x12\x13.test.SimpleRequest\x1a\x14.test.SimpleResponse\x128\n" +
	"\fCreateSimple\x12\x13.test.SimpleMessage\x1a\x13.test.SimpleMessageB:\n" +
	"\x11com.jettison.testB\vSimpleProtoZ\x18github.com/jettison/testb\x06proto3"

var (
	file_simple_proto_rawDescOnce sync.Once
	file_simple_proto_rawDescData []byte
)

func file_simple_proto_rawDescGZIP() []byte {
	file_simple_proto_rawDescOnce.Do(func() {
		file_simple_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_simple_proto_rawDesc), len(file_simple_proto_rawDesc)))
	})
	return file_simple_proto_rawDescData
}

var file_simple_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_simple_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_simple_proto_goTypes = []any{
	(SimpleMessage_Status)(0), // 0: test.SimpleMessage.Status
	(*SimpleMessage)(nil),     // 1: test.SimpleMessage
	(*SimpleRequest)(nil),     // 2: test.SimpleRequest
	(*SimpleResponse)(nil),    // 3: test.SimpleResponse
	nil,                       // 4: test.SimpleMessage.MetadataEntry
}
var file_simple_proto_depIdxs = []int32{
	0, // 0: test.SimpleMessage.status:type_name -> test.SimpleMessage.Status
	4, // 1: test.SimpleMessage.metadata:type_name -> test.SimpleMessage.MetadataEntry
	1, // 2: test.SimpleResponse.results:type_name -> test.SimpleMessage
	2, // 3: test.SimpleService.GetSimple:input_type -> test.SimpleRequest
	1, // 4: test.SimpleService.CreateSimple:input_type -> test.SimpleMessage
	3, // 5: test.SimpleService.GetSimple:output_type -> test.SimpleResponse
	1, // 6: test.SimpleService.CreateSimple:output_type -> test.SimpleMessage
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_simple_proto_init() }
func file_simple_proto_init() {
	if File_simple_proto != nil {
		return
	}
	file_simple_proto_msgTypes[0].OneofWrappers = []any{
		(*SimpleMessage_TextData)(nil),
		(*SimpleMessage_BinaryData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_simple_proto_rawDesc), len(file_simple_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_simple_proto_goTypes,
		DependencyIndexes: file_simple_proto_depIdxs,
		EnumInfos:         file_simple_proto_enumTypes,
		MessageInfos:      file_simple_proto_msgTypes,
	}.Build()
	File_simple_proto = out.File
	file_simple_proto_goTypes = nil
	file_simple_proto_depIdxs = nil
}
