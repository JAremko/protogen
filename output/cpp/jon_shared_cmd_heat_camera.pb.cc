// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jon_shared_cmd_heat_camera.proto

#include "jon_shared_cmd_heat_camera.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cmd {
namespace HeatCamera {
      template <typename>
PROTOBUF_CONSTEXPR ZoomStop::ZoomStop(::_pbi::ConstantInitialized) {}
struct ZoomStopDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ZoomStopDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ZoomStopDefaultTypeInternal() {}
  union {
    ZoomStop _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ZoomStopDefaultTypeInternal _ZoomStop_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ZoomOut::ZoomOut(::_pbi::ConstantInitialized) {}
struct ZoomOutDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ZoomOutDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ZoomOutDefaultTypeInternal() {}
  union {
    ZoomOut _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ZoomOutDefaultTypeInternal _ZoomOut_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ZoomIn::ZoomIn(::_pbi::ConstantInitialized) {}
struct ZoomInDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ZoomInDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ZoomInDefaultTypeInternal() {}
  union {
    ZoomIn _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ZoomInDefaultTypeInternal _ZoomIn_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR Stop::Stop(::_pbi::ConstantInitialized) {}
struct StopDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopDefaultTypeInternal() {}
  union {
    Stop _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopDefaultTypeInternal _Stop_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR Start::Start(::_pbi::ConstantInitialized) {}
struct StartDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartDefaultTypeInternal() {}
  union {
    Start _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartDefaultTypeInternal _Start_default_instance_;

inline constexpr ShiftDDE::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ShiftDDE::ShiftDDE(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ShiftDDEDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShiftDDEDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShiftDDEDefaultTypeInternal() {}
  union {
    ShiftDDE _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShiftDDEDefaultTypeInternal _ShiftDDE_default_instance_;

inline constexpr ShiftClaheLevel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ShiftClaheLevel::ShiftClaheLevel(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ShiftClaheLevelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShiftClaheLevelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShiftClaheLevelDefaultTypeInternal() {}
  union {
    ShiftClaheLevel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShiftClaheLevelDefaultTypeInternal _ShiftClaheLevel_default_instance_;

inline constexpr SetZoomTableValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetZoomTableValue::SetZoomTableValue(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetZoomTableValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetZoomTableValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetZoomTableValueDefaultTypeInternal() {}
  union {
    SetZoomTableValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetZoomTableValueDefaultTypeInternal _SetZoomTableValue_default_instance_;

inline constexpr SetValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetValue::SetValue(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetValueDefaultTypeInternal() {}
  union {
    SetValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetValueDefaultTypeInternal _SetValue_default_instance_;

inline constexpr SetFxMode::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : mode_{static_cast< ::ser::JonGuiDataFxModeHeat >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetFxMode::SetFxMode(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetFxModeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetFxModeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetFxModeDefaultTypeInternal() {}
  union {
    SetFxMode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetFxModeDefaultTypeInternal _SetFxMode_default_instance_;

inline constexpr SetFilters::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{static_cast< ::ser::JonGuiDataVideoChannelHeatFilters >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetFilters::SetFilters(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetFiltersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetFiltersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetFiltersDefaultTypeInternal() {}
  union {
    SetFilters _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetFiltersDefaultTypeInternal _SetFilters_default_instance_;

inline constexpr SetDigitalZoomLevel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetDigitalZoomLevel::SetDigitalZoomLevel(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetDigitalZoomLevelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetDigitalZoomLevelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetDigitalZoomLevelDefaultTypeInternal() {}
  union {
    SetDigitalZoomLevel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetDigitalZoomLevelDefaultTypeInternal _SetDigitalZoomLevel_default_instance_;

inline constexpr SetDDELevel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetDDELevel::SetDDELevel(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetDDELevelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetDDELevelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetDDELevelDefaultTypeInternal() {}
  union {
    SetDDELevel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetDDELevelDefaultTypeInternal _SetDDELevel_default_instance_;

inline constexpr SetClaheLevel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetClaheLevel::SetClaheLevel(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetClaheLevelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetClaheLevelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetClaheLevelDefaultTypeInternal() {}
  union {
    SetClaheLevel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetClaheLevelDefaultTypeInternal _SetClaheLevel_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SetCalibMode::SetCalibMode(::_pbi::ConstantInitialized) {}
struct SetCalibModeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetCalibModeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetCalibModeDefaultTypeInternal() {}
  union {
    SetCalibMode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetCalibModeDefaultTypeInternal _SetCalibMode_default_instance_;

inline constexpr SetAutoFocus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetAutoFocus::SetAutoFocus(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetAutoFocusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetAutoFocusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetAutoFocusDefaultTypeInternal() {}
  union {
    SetAutoFocus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetAutoFocusDefaultTypeInternal _SetAutoFocus_default_instance_;

inline constexpr SetAGC::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{static_cast< ::ser::JonGuiDataVideoChannelHeatAGCModes >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetAGC::SetAGC(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetAGCDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetAGCDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetAGCDefaultTypeInternal() {}
  union {
    SetAGC _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetAGCDefaultTypeInternal _SetAGC_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SaveToTable::SaveToTable(::_pbi::ConstantInitialized) {}
struct SaveToTableDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SaveToTableDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SaveToTableDefaultTypeInternal() {}
  union {
    SaveToTable _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SaveToTableDefaultTypeInternal _SaveToTable_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ResetZoom::ResetZoom(::_pbi::ConstantInitialized) {}
struct ResetZoomDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResetZoomDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResetZoomDefaultTypeInternal() {}
  union {
    ResetZoom _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResetZoomDefaultTypeInternal _ResetZoom_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR RefreshFxMode::RefreshFxMode(::_pbi::ConstantInitialized) {}
struct RefreshFxModeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshFxModeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshFxModeDefaultTypeInternal() {}
  union {
    RefreshFxMode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshFxModeDefaultTypeInternal _RefreshFxMode_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR PrevZoomTablePos::PrevZoomTablePos(::_pbi::ConstantInitialized) {}
struct PrevZoomTablePosDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PrevZoomTablePosDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PrevZoomTablePosDefaultTypeInternal() {}
  union {
    PrevZoomTablePos _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PrevZoomTablePosDefaultTypeInternal _PrevZoomTablePos_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR PrevFxMode::PrevFxMode(::_pbi::ConstantInitialized) {}
struct PrevFxModeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PrevFxModeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PrevFxModeDefaultTypeInternal() {}
  union {
    PrevFxMode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PrevFxModeDefaultTypeInternal _PrevFxMode_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR Photo::Photo(::_pbi::ConstantInitialized) {}
struct PhotoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PhotoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PhotoDefaultTypeInternal() {}
  union {
    Photo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PhotoDefaultTypeInternal _Photo_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR NextZoomTablePos::NextZoomTablePos(::_pbi::ConstantInitialized) {}
struct NextZoomTablePosDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NextZoomTablePosDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NextZoomTablePosDefaultTypeInternal() {}
  union {
    NextZoomTablePos _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NextZoomTablePosDefaultTypeInternal _NextZoomTablePos_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR NextFxMode::NextFxMode(::_pbi::ConstantInitialized) {}
struct NextFxModeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NextFxModeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NextFxModeDefaultTypeInternal() {}
  union {
    NextFxMode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NextFxModeDefaultTypeInternal _NextFxMode_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR Halt::Halt(::_pbi::ConstantInitialized) {}
struct HaltDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HaltDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HaltDefaultTypeInternal() {}
  union {
    Halt _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HaltDefaultTypeInternal _Halt_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR GetMeteo::GetMeteo(::_pbi::ConstantInitialized) {}
struct GetMeteoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetMeteoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetMeteoDefaultTypeInternal() {}
  union {
    GetMeteo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetMeteoDefaultTypeInternal _GetMeteo_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR FocusStop::FocusStop(::_pbi::ConstantInitialized) {}
struct FocusStopDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FocusStopDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FocusStopDefaultTypeInternal() {}
  union {
    FocusStop _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FocusStopDefaultTypeInternal _FocusStop_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR FocusStepPlus::FocusStepPlus(::_pbi::ConstantInitialized) {}
struct FocusStepPlusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FocusStepPlusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FocusStepPlusDefaultTypeInternal() {}
  union {
    FocusStepPlus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FocusStepPlusDefaultTypeInternal _FocusStepPlus_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR FocusStepMinus::FocusStepMinus(::_pbi::ConstantInitialized) {}
struct FocusStepMinusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FocusStepMinusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FocusStepMinusDefaultTypeInternal() {}
  union {
    FocusStepMinus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FocusStepMinusDefaultTypeInternal _FocusStepMinus_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR FocusOut::FocusOut(::_pbi::ConstantInitialized) {}
struct FocusOutDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FocusOutDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FocusOutDefaultTypeInternal() {}
  union {
    FocusOut _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FocusOutDefaultTypeInternal _FocusOut_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR FocusIn::FocusIn(::_pbi::ConstantInitialized) {}
struct FocusInDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FocusInDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FocusInDefaultTypeInternal() {}
  union {
    FocusIn _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FocusInDefaultTypeInternal _FocusIn_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR EnableDDE::EnableDDE(::_pbi::ConstantInitialized) {}
struct EnableDDEDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnableDDEDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnableDDEDefaultTypeInternal() {}
  union {
    EnableDDE _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnableDDEDefaultTypeInternal _EnableDDE_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR DisableDDE::DisableDDE(::_pbi::ConstantInitialized) {}
struct DisableDDEDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DisableDDEDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DisableDDEDefaultTypeInternal() {}
  union {
    DisableDDE _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DisableDDEDefaultTypeInternal _DisableDDE_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR Calibrate::Calibrate(::_pbi::ConstantInitialized) {}
struct CalibrateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalibrateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalibrateDefaultTypeInternal() {}
  union {
    Calibrate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalibrateDefaultTypeInternal _Calibrate_default_instance_;

inline constexpr Zoom::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Zoom::Zoom(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ZoomDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ZoomDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ZoomDefaultTypeInternal() {}
  union {
    Zoom _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ZoomDefaultTypeInternal _Zoom_default_instance_;

inline constexpr Root::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Root::Root(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RootDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RootDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RootDefaultTypeInternal() {}
  union {
    Root _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RootDefaultTypeInternal _Root_default_instance_;
}  // namespace HeatCamera
}  // namespace cmd
static ::_pb::Metadata file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[37];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto = nullptr;
const ::uint32_t TableStruct_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::Root, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::Root, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::Root, _impl_.cmd_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::SetFxMode, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::SetFxMode, _impl_.mode_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::SetClaheLevel, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::SetClaheLevel, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::ShiftClaheLevel, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::ShiftClaheLevel, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::NextFxMode, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::PrevFxMode, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::RefreshFxMode, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::EnableDDE, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::DisableDDE, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::SetValue, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::SetValue, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::SetDDELevel, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::SetDDELevel, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::SetDigitalZoomLevel, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::SetDigitalZoomLevel, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::ShiftDDE, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::ShiftDDE, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::ZoomIn, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::ZoomOut, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::ZoomStop, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::FocusIn, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::FocusOut, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::FocusStop, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::FocusStepPlus, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::FocusStepMinus, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::Calibrate, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::Zoom, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::Zoom, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::Zoom, _impl_.cmd_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::NextZoomTablePos, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::PrevZoomTablePos, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::SetCalibMode, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::SetZoomTableValue, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::SetZoomTableValue, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::SetAGC, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::SetAGC, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::SetFilters, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::SetFilters, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::Start, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::Stop, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::Halt, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::Photo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::GetMeteo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::SetAutoFocus, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::SetAutoFocus, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::ResetZoom, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::SaveToTable, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::cmd::HeatCamera::Root)},
        {40, -1, -1, sizeof(::cmd::HeatCamera::SetFxMode)},
        {49, -1, -1, sizeof(::cmd::HeatCamera::SetClaheLevel)},
        {58, -1, -1, sizeof(::cmd::HeatCamera::ShiftClaheLevel)},
        {67, -1, -1, sizeof(::cmd::HeatCamera::NextFxMode)},
        {75, -1, -1, sizeof(::cmd::HeatCamera::PrevFxMode)},
        {83, -1, -1, sizeof(::cmd::HeatCamera::RefreshFxMode)},
        {91, -1, -1, sizeof(::cmd::HeatCamera::EnableDDE)},
        {99, -1, -1, sizeof(::cmd::HeatCamera::DisableDDE)},
        {107, -1, -1, sizeof(::cmd::HeatCamera::SetValue)},
        {116, -1, -1, sizeof(::cmd::HeatCamera::SetDDELevel)},
        {125, -1, -1, sizeof(::cmd::HeatCamera::SetDigitalZoomLevel)},
        {134, -1, -1, sizeof(::cmd::HeatCamera::ShiftDDE)},
        {143, -1, -1, sizeof(::cmd::HeatCamera::ZoomIn)},
        {151, -1, -1, sizeof(::cmd::HeatCamera::ZoomOut)},
        {159, -1, -1, sizeof(::cmd::HeatCamera::ZoomStop)},
        {167, -1, -1, sizeof(::cmd::HeatCamera::FocusIn)},
        {175, -1, -1, sizeof(::cmd::HeatCamera::FocusOut)},
        {183, -1, -1, sizeof(::cmd::HeatCamera::FocusStop)},
        {191, -1, -1, sizeof(::cmd::HeatCamera::FocusStepPlus)},
        {199, -1, -1, sizeof(::cmd::HeatCamera::FocusStepMinus)},
        {207, -1, -1, sizeof(::cmd::HeatCamera::Calibrate)},
        {215, -1, -1, sizeof(::cmd::HeatCamera::Zoom)},
        {227, -1, -1, sizeof(::cmd::HeatCamera::NextZoomTablePos)},
        {235, -1, -1, sizeof(::cmd::HeatCamera::PrevZoomTablePos)},
        {243, -1, -1, sizeof(::cmd::HeatCamera::SetCalibMode)},
        {251, -1, -1, sizeof(::cmd::HeatCamera::SetZoomTableValue)},
        {260, -1, -1, sizeof(::cmd::HeatCamera::SetAGC)},
        {269, -1, -1, sizeof(::cmd::HeatCamera::SetFilters)},
        {278, -1, -1, sizeof(::cmd::HeatCamera::Start)},
        {286, -1, -1, sizeof(::cmd::HeatCamera::Stop)},
        {294, -1, -1, sizeof(::cmd::HeatCamera::Halt)},
        {302, -1, -1, sizeof(::cmd::HeatCamera::Photo)},
        {310, -1, -1, sizeof(::cmd::HeatCamera::GetMeteo)},
        {318, -1, -1, sizeof(::cmd::HeatCamera::SetAutoFocus)},
        {327, -1, -1, sizeof(::cmd::HeatCamera::ResetZoom)},
        {335, -1, -1, sizeof(::cmd::HeatCamera::SaveToTable)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::cmd::HeatCamera::_Root_default_instance_._instance,
    &::cmd::HeatCamera::_SetFxMode_default_instance_._instance,
    &::cmd::HeatCamera::_SetClaheLevel_default_instance_._instance,
    &::cmd::HeatCamera::_ShiftClaheLevel_default_instance_._instance,
    &::cmd::HeatCamera::_NextFxMode_default_instance_._instance,
    &::cmd::HeatCamera::_PrevFxMode_default_instance_._instance,
    &::cmd::HeatCamera::_RefreshFxMode_default_instance_._instance,
    &::cmd::HeatCamera::_EnableDDE_default_instance_._instance,
    &::cmd::HeatCamera::_DisableDDE_default_instance_._instance,
    &::cmd::HeatCamera::_SetValue_default_instance_._instance,
    &::cmd::HeatCamera::_SetDDELevel_default_instance_._instance,
    &::cmd::HeatCamera::_SetDigitalZoomLevel_default_instance_._instance,
    &::cmd::HeatCamera::_ShiftDDE_default_instance_._instance,
    &::cmd::HeatCamera::_ZoomIn_default_instance_._instance,
    &::cmd::HeatCamera::_ZoomOut_default_instance_._instance,
    &::cmd::HeatCamera::_ZoomStop_default_instance_._instance,
    &::cmd::HeatCamera::_FocusIn_default_instance_._instance,
    &::cmd::HeatCamera::_FocusOut_default_instance_._instance,
    &::cmd::HeatCamera::_FocusStop_default_instance_._instance,
    &::cmd::HeatCamera::_FocusStepPlus_default_instance_._instance,
    &::cmd::HeatCamera::_FocusStepMinus_default_instance_._instance,
    &::cmd::HeatCamera::_Calibrate_default_instance_._instance,
    &::cmd::HeatCamera::_Zoom_default_instance_._instance,
    &::cmd::HeatCamera::_NextZoomTablePos_default_instance_._instance,
    &::cmd::HeatCamera::_PrevZoomTablePos_default_instance_._instance,
    &::cmd::HeatCamera::_SetCalibMode_default_instance_._instance,
    &::cmd::HeatCamera::_SetZoomTableValue_default_instance_._instance,
    &::cmd::HeatCamera::_SetAGC_default_instance_._instance,
    &::cmd::HeatCamera::_SetFilters_default_instance_._instance,
    &::cmd::HeatCamera::_Start_default_instance_._instance,
    &::cmd::HeatCamera::_Stop_default_instance_._instance,
    &::cmd::HeatCamera::_Halt_default_instance_._instance,
    &::cmd::HeatCamera::_Photo_default_instance_._instance,
    &::cmd::HeatCamera::_GetMeteo_default_instance_._instance,
    &::cmd::HeatCamera::_SetAutoFocus_default_instance_._instance,
    &::cmd::HeatCamera::_ResetZoom_default_instance_._instance,
    &::cmd::HeatCamera::_SaveToTable_default_instance_._instance,
};
const char descriptor_table_protodef_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n jon_shared_cmd_heat_camera.proto\022\016cmd."
    "HeatCamera\032\033jon_shared_data_types.proto\""
    "\242\014\n\004Root\022$\n\004zoom\030\001 \001(\0132\024.cmd.HeatCamera."
    "ZoomH\000\022)\n\007set_agc\030\002 \001(\0132\026.cmd.HeatCamera"
    ".SetAGCH\000\0220\n\nset_filter\030\003 \001(\0132\032.cmd.Heat"
    "Camera.SetFiltersH\000\022&\n\005start\030\004 \001(\0132\025.cmd"
    ".HeatCamera.StartH\000\022$\n\004stop\030\005 \001(\0132\024.cmd."
    "HeatCamera.StopH\000\022&\n\005photo\030\006 \001(\0132\025.cmd.H"
    "eatCamera.PhotoH\000\022)\n\007zoom_in\030\n \001(\0132\026.cmd"
    ".HeatCamera.ZoomInH\000\022+\n\010zoom_out\030\013 \001(\0132\027"
    ".cmd.HeatCamera.ZoomOutH\000\022-\n\tzoom_stop\030\014"
    " \001(\0132\030.cmd.HeatCamera.ZoomStopH\000\022+\n\010focu"
    "s_in\030\r \001(\0132\027.cmd.HeatCamera.FocusInH\000\022-\n"
    "\tfocus_out\030\016 \001(\0132\030.cmd.HeatCamera.FocusO"
    "utH\000\022/\n\nfocus_stop\030\017 \001(\0132\031.cmd.HeatCamer"
    "a.FocusStopH\000\022.\n\tcalibrate\030\020 \001(\0132\031.cmd.H"
    "eatCamera.CalibrateH\000\0224\n\rset_dde_level\030\021"
    " \001(\0132\033.cmd.HeatCamera.SetDDELevelH\000\022/\n\ne"
    "nable_dde\030\022 \001(\0132\031.cmd.HeatCamera.EnableD"
    "DEH\000\0221\n\013disable_dde\030\023 \001(\0132\032.cmd.HeatCame"
    "ra.DisableDDEH\000\0226\n\016set_auto_focus\030\024 \001(\0132"
    "\034.cmd.HeatCamera.SetAutoFocusH\000\0228\n\017focus"
    "_step_plus\030\025 \001(\0132\035.cmd.HeatCamera.FocusS"
    "tepPlusH\000\022:\n\020focus_step_minus\030\026 \001(\0132\036.cm"
    "d.HeatCamera.FocusStepMinusH\000\0220\n\013set_fx_"
    "mode\030\027 \001(\0132\031.cmd.HeatCamera.SetFxModeH\000\022"
    "2\n\014next_fx_mode\030\030 \001(\0132\032.cmd.HeatCamera.N"
    "extFxModeH\000\0222\n\014prev_fx_mode\030\031 \001(\0132\032.cmd."
    "HeatCamera.PrevFxModeH\000\022-\n\tget_meteo\030\032 \001"
    "(\0132\030.cmd.HeatCamera.GetMeteoH\000\022-\n\tshift_"
    "dde\030\033 \001(\0132\030.cmd.HeatCamera.ShiftDDEH\000\0228\n"
    "\017refresh_fx_mode\030\034 \001(\0132\035.cmd.HeatCamera."
    "RefreshFxModeH\000\022/\n\nreset_zoom\030\035 \001(\0132\031.cm"
    "d.HeatCamera.ResetZoomH\000\0224\n\rsave_to_tabl"
    "e\030\036 \001(\0132\033.cmd.HeatCamera.SaveToTableH\000\0226"
    "\n\016set_calib_mode\030\037 \001(\0132\034.cmd.HeatCamera."
    "SetCalibModeH\000\022E\n\026set_digital_zoom_level"
    "\030  \001(\0132#.cmd.HeatCamera.SetDigitalZoomLe"
    "velH\000\0228\n\017set_clahe_level\030! \001(\0132\035.cmd.Hea"
    "tCamera.SetClaheLevelH\000\022<\n\021shift_clahe_l"
    "evel\030\" \001(\0132\037.cmd.HeatCamera.ShiftClaheLe"
    "velH\000B\005\n\003cmd\"4\n\tSetFxMode\022\'\n\004mode\030\001 \001(\0162"
    "\031.ser.JonGuiDataFxModeHeat\"\036\n\rSetClaheLe"
    "vel\022\r\n\005value\030\001 \001(\002\" \n\017ShiftClaheLevel\022\r\n"
    "\005value\030\001 \001(\002\"\014\n\nNextFxMode\"\014\n\nPrevFxMode"
    "\"\017\n\rRefreshFxMode\"\013\n\tEnableDDE\"\014\n\nDisabl"
    "eDDE\"\031\n\010SetValue\022\r\n\005value\030\001 \001(\002\"\034\n\013SetDD"
    "ELevel\022\r\n\005value\030\001 \001(\005\"$\n\023SetDigitalZoomL"
    "evel\022\r\n\005value\030\001 \001(\002\"\031\n\010ShiftDDE\022\r\n\005value"
    "\030\001 \001(\005\"\010\n\006ZoomIn\"\t\n\007ZoomOut\"\n\n\010ZoomStop\""
    "\t\n\007FocusIn\"\n\n\010FocusOut\"\013\n\tFocusStop\"\017\n\rF"
    "ocusStepPlus\"\020\n\016FocusStepMinus\"\013\n\tCalibr"
    "ate\"\322\001\n\004Zoom\022A\n\024set_zoom_table_value\030\001 \001"
    "(\0132!.cmd.HeatCamera.SetZoomTableValueH\000\022"
    "\?\n\023next_zoom_table_pos\030\002 \001(\0132 .cmd.HeatC"
    "amera.NextZoomTablePosH\000\022\?\n\023prev_zoom_ta"
    "ble_pos\030\003 \001(\0132 .cmd.HeatCamera.PrevZoomT"
    "ablePosH\000B\005\n\003cmd\"\022\n\020NextZoomTablePos\"\022\n\020"
    "PrevZoomTablePos\"\016\n\014SetCalibMode\"\"\n\021SetZ"
    "oomTableValue\022\r\n\005value\030\001 \001(\005\"@\n\006SetAGC\0226"
    "\n\005value\030\001 \001(\0162\'.ser.JonGuiDataVideoChann"
    "elHeatAGCModes\"C\n\nSetFilters\0225\n\005value\030\001 "
    "\001(\0162&.ser.JonGuiDataVideoChannelHeatFilt"
    "ers\"\007\n\005Start\"\006\n\004Stop\"\006\n\004Halt\"\007\n\005Photo\"\n\n"
    "\010GetMeteo\"\035\n\014SetAutoFocus\022\r\n\005value\030\001 \001(\010"
    "\"\013\n\tResetZoom\"\r\n\013SaveToTableBRZPgit-code"
    "commit.eu-central-1.amazonaws.com/v1/rep"
    "os/jettison/jonp/cmd/heat_camerab\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_deps[1] =
    {
        &::descriptor_table_jon_5fshared_5fdata_5ftypes_2eproto,
};
static ::absl::once_flag descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto = {
    false,
    false,
    2720,
    descriptor_table_protodef_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto,
    "jon_shared_cmd_heat_camera.proto",
    &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
    descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_deps,
    1,
    37,
    schemas,
    file_default_instances,
    TableStruct_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto::offsets,
    file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto,
    file_level_enum_descriptors_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto,
    file_level_service_descriptors_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter() {
  return &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto(&descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto);
namespace cmd {
namespace HeatCamera {
// ===================================================================

class Root::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::Root, _impl_._oneof_case_);
  static const ::cmd::HeatCamera::Zoom& zoom(const Root* msg);
  static const ::cmd::HeatCamera::SetAGC& set_agc(const Root* msg);
  static const ::cmd::HeatCamera::SetFilters& set_filter(const Root* msg);
  static const ::cmd::HeatCamera::Start& start(const Root* msg);
  static const ::cmd::HeatCamera::Stop& stop(const Root* msg);
  static const ::cmd::HeatCamera::Photo& photo(const Root* msg);
  static const ::cmd::HeatCamera::ZoomIn& zoom_in(const Root* msg);
  static const ::cmd::HeatCamera::ZoomOut& zoom_out(const Root* msg);
  static const ::cmd::HeatCamera::ZoomStop& zoom_stop(const Root* msg);
  static const ::cmd::HeatCamera::FocusIn& focus_in(const Root* msg);
  static const ::cmd::HeatCamera::FocusOut& focus_out(const Root* msg);
  static const ::cmd::HeatCamera::FocusStop& focus_stop(const Root* msg);
  static const ::cmd::HeatCamera::Calibrate& calibrate(const Root* msg);
  static const ::cmd::HeatCamera::SetDDELevel& set_dde_level(const Root* msg);
  static const ::cmd::HeatCamera::EnableDDE& enable_dde(const Root* msg);
  static const ::cmd::HeatCamera::DisableDDE& disable_dde(const Root* msg);
  static const ::cmd::HeatCamera::SetAutoFocus& set_auto_focus(const Root* msg);
  static const ::cmd::HeatCamera::FocusStepPlus& focus_step_plus(const Root* msg);
  static const ::cmd::HeatCamera::FocusStepMinus& focus_step_minus(const Root* msg);
  static const ::cmd::HeatCamera::SetFxMode& set_fx_mode(const Root* msg);
  static const ::cmd::HeatCamera::NextFxMode& next_fx_mode(const Root* msg);
  static const ::cmd::HeatCamera::PrevFxMode& prev_fx_mode(const Root* msg);
  static const ::cmd::HeatCamera::GetMeteo& get_meteo(const Root* msg);
  static const ::cmd::HeatCamera::ShiftDDE& shift_dde(const Root* msg);
  static const ::cmd::HeatCamera::RefreshFxMode& refresh_fx_mode(const Root* msg);
  static const ::cmd::HeatCamera::ResetZoom& reset_zoom(const Root* msg);
  static const ::cmd::HeatCamera::SaveToTable& save_to_table(const Root* msg);
  static const ::cmd::HeatCamera::SetCalibMode& set_calib_mode(const Root* msg);
  static const ::cmd::HeatCamera::SetDigitalZoomLevel& set_digital_zoom_level(const Root* msg);
  static const ::cmd::HeatCamera::SetClaheLevel& set_clahe_level(const Root* msg);
  static const ::cmd::HeatCamera::ShiftClaheLevel& shift_clahe_level(const Root* msg);
};

const ::cmd::HeatCamera::Zoom& Root::_Internal::zoom(const Root* msg) {
  return *msg->_impl_.cmd_.zoom_;
}
const ::cmd::HeatCamera::SetAGC& Root::_Internal::set_agc(const Root* msg) {
  return *msg->_impl_.cmd_.set_agc_;
}
const ::cmd::HeatCamera::SetFilters& Root::_Internal::set_filter(const Root* msg) {
  return *msg->_impl_.cmd_.set_filter_;
}
const ::cmd::HeatCamera::Start& Root::_Internal::start(const Root* msg) {
  return *msg->_impl_.cmd_.start_;
}
const ::cmd::HeatCamera::Stop& Root::_Internal::stop(const Root* msg) {
  return *msg->_impl_.cmd_.stop_;
}
const ::cmd::HeatCamera::Photo& Root::_Internal::photo(const Root* msg) {
  return *msg->_impl_.cmd_.photo_;
}
const ::cmd::HeatCamera::ZoomIn& Root::_Internal::zoom_in(const Root* msg) {
  return *msg->_impl_.cmd_.zoom_in_;
}
const ::cmd::HeatCamera::ZoomOut& Root::_Internal::zoom_out(const Root* msg) {
  return *msg->_impl_.cmd_.zoom_out_;
}
const ::cmd::HeatCamera::ZoomStop& Root::_Internal::zoom_stop(const Root* msg) {
  return *msg->_impl_.cmd_.zoom_stop_;
}
const ::cmd::HeatCamera::FocusIn& Root::_Internal::focus_in(const Root* msg) {
  return *msg->_impl_.cmd_.focus_in_;
}
const ::cmd::HeatCamera::FocusOut& Root::_Internal::focus_out(const Root* msg) {
  return *msg->_impl_.cmd_.focus_out_;
}
const ::cmd::HeatCamera::FocusStop& Root::_Internal::focus_stop(const Root* msg) {
  return *msg->_impl_.cmd_.focus_stop_;
}
const ::cmd::HeatCamera::Calibrate& Root::_Internal::calibrate(const Root* msg) {
  return *msg->_impl_.cmd_.calibrate_;
}
const ::cmd::HeatCamera::SetDDELevel& Root::_Internal::set_dde_level(const Root* msg) {
  return *msg->_impl_.cmd_.set_dde_level_;
}
const ::cmd::HeatCamera::EnableDDE& Root::_Internal::enable_dde(const Root* msg) {
  return *msg->_impl_.cmd_.enable_dde_;
}
const ::cmd::HeatCamera::DisableDDE& Root::_Internal::disable_dde(const Root* msg) {
  return *msg->_impl_.cmd_.disable_dde_;
}
const ::cmd::HeatCamera::SetAutoFocus& Root::_Internal::set_auto_focus(const Root* msg) {
  return *msg->_impl_.cmd_.set_auto_focus_;
}
const ::cmd::HeatCamera::FocusStepPlus& Root::_Internal::focus_step_plus(const Root* msg) {
  return *msg->_impl_.cmd_.focus_step_plus_;
}
const ::cmd::HeatCamera::FocusStepMinus& Root::_Internal::focus_step_minus(const Root* msg) {
  return *msg->_impl_.cmd_.focus_step_minus_;
}
const ::cmd::HeatCamera::SetFxMode& Root::_Internal::set_fx_mode(const Root* msg) {
  return *msg->_impl_.cmd_.set_fx_mode_;
}
const ::cmd::HeatCamera::NextFxMode& Root::_Internal::next_fx_mode(const Root* msg) {
  return *msg->_impl_.cmd_.next_fx_mode_;
}
const ::cmd::HeatCamera::PrevFxMode& Root::_Internal::prev_fx_mode(const Root* msg) {
  return *msg->_impl_.cmd_.prev_fx_mode_;
}
const ::cmd::HeatCamera::GetMeteo& Root::_Internal::get_meteo(const Root* msg) {
  return *msg->_impl_.cmd_.get_meteo_;
}
const ::cmd::HeatCamera::ShiftDDE& Root::_Internal::shift_dde(const Root* msg) {
  return *msg->_impl_.cmd_.shift_dde_;
}
const ::cmd::HeatCamera::RefreshFxMode& Root::_Internal::refresh_fx_mode(const Root* msg) {
  return *msg->_impl_.cmd_.refresh_fx_mode_;
}
const ::cmd::HeatCamera::ResetZoom& Root::_Internal::reset_zoom(const Root* msg) {
  return *msg->_impl_.cmd_.reset_zoom_;
}
const ::cmd::HeatCamera::SaveToTable& Root::_Internal::save_to_table(const Root* msg) {
  return *msg->_impl_.cmd_.save_to_table_;
}
const ::cmd::HeatCamera::SetCalibMode& Root::_Internal::set_calib_mode(const Root* msg) {
  return *msg->_impl_.cmd_.set_calib_mode_;
}
const ::cmd::HeatCamera::SetDigitalZoomLevel& Root::_Internal::set_digital_zoom_level(const Root* msg) {
  return *msg->_impl_.cmd_.set_digital_zoom_level_;
}
const ::cmd::HeatCamera::SetClaheLevel& Root::_Internal::set_clahe_level(const Root* msg) {
  return *msg->_impl_.cmd_.set_clahe_level_;
}
const ::cmd::HeatCamera::ShiftClaheLevel& Root::_Internal::shift_clahe_level(const Root* msg) {
  return *msg->_impl_.cmd_.shift_clahe_level_;
}
void Root::set_allocated_zoom(::cmd::HeatCamera::Zoom* zoom) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (zoom) {
    ::google::protobuf::Arena* submessage_arena = zoom->GetArena();
    if (message_arena != submessage_arena) {
      zoom = ::google::protobuf::internal::GetOwnedMessage(message_arena, zoom, submessage_arena);
    }
    set_has_zoom();
    _impl_.cmd_.zoom_ = zoom;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Root.zoom)
}
void Root::set_allocated_set_agc(::cmd::HeatCamera::SetAGC* set_agc) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (set_agc) {
    ::google::protobuf::Arena* submessage_arena = set_agc->GetArena();
    if (message_arena != submessage_arena) {
      set_agc = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_agc, submessage_arena);
    }
    set_has_set_agc();
    _impl_.cmd_.set_agc_ = set_agc;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Root.set_agc)
}
void Root::set_allocated_set_filter(::cmd::HeatCamera::SetFilters* set_filter) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (set_filter) {
    ::google::protobuf::Arena* submessage_arena = set_filter->GetArena();
    if (message_arena != submessage_arena) {
      set_filter = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_filter, submessage_arena);
    }
    set_has_set_filter();
    _impl_.cmd_.set_filter_ = set_filter;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Root.set_filter)
}
void Root::set_allocated_start(::cmd::HeatCamera::Start* start) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (start) {
    ::google::protobuf::Arena* submessage_arena = start->GetArena();
    if (message_arena != submessage_arena) {
      start = ::google::protobuf::internal::GetOwnedMessage(message_arena, start, submessage_arena);
    }
    set_has_start();
    _impl_.cmd_.start_ = start;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Root.start)
}
void Root::set_allocated_stop(::cmd::HeatCamera::Stop* stop) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (stop) {
    ::google::protobuf::Arena* submessage_arena = stop->GetArena();
    if (message_arena != submessage_arena) {
      stop = ::google::protobuf::internal::GetOwnedMessage(message_arena, stop, submessage_arena);
    }
    set_has_stop();
    _impl_.cmd_.stop_ = stop;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Root.stop)
}
void Root::set_allocated_photo(::cmd::HeatCamera::Photo* photo) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (photo) {
    ::google::protobuf::Arena* submessage_arena = photo->GetArena();
    if (message_arena != submessage_arena) {
      photo = ::google::protobuf::internal::GetOwnedMessage(message_arena, photo, submessage_arena);
    }
    set_has_photo();
    _impl_.cmd_.photo_ = photo;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Root.photo)
}
void Root::set_allocated_zoom_in(::cmd::HeatCamera::ZoomIn* zoom_in) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (zoom_in) {
    ::google::protobuf::Arena* submessage_arena = zoom_in->GetArena();
    if (message_arena != submessage_arena) {
      zoom_in = ::google::protobuf::internal::GetOwnedMessage(message_arena, zoom_in, submessage_arena);
    }
    set_has_zoom_in();
    _impl_.cmd_.zoom_in_ = zoom_in;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Root.zoom_in)
}
void Root::set_allocated_zoom_out(::cmd::HeatCamera::ZoomOut* zoom_out) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (zoom_out) {
    ::google::protobuf::Arena* submessage_arena = zoom_out->GetArena();
    if (message_arena != submessage_arena) {
      zoom_out = ::google::protobuf::internal::GetOwnedMessage(message_arena, zoom_out, submessage_arena);
    }
    set_has_zoom_out();
    _impl_.cmd_.zoom_out_ = zoom_out;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Root.zoom_out)
}
void Root::set_allocated_zoom_stop(::cmd::HeatCamera::ZoomStop* zoom_stop) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (zoom_stop) {
    ::google::protobuf::Arena* submessage_arena = zoom_stop->GetArena();
    if (message_arena != submessage_arena) {
      zoom_stop = ::google::protobuf::internal::GetOwnedMessage(message_arena, zoom_stop, submessage_arena);
    }
    set_has_zoom_stop();
    _impl_.cmd_.zoom_stop_ = zoom_stop;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Root.zoom_stop)
}
void Root::set_allocated_focus_in(::cmd::HeatCamera::FocusIn* focus_in) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (focus_in) {
    ::google::protobuf::Arena* submessage_arena = focus_in->GetArena();
    if (message_arena != submessage_arena) {
      focus_in = ::google::protobuf::internal::GetOwnedMessage(message_arena, focus_in, submessage_arena);
    }
    set_has_focus_in();
    _impl_.cmd_.focus_in_ = focus_in;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Root.focus_in)
}
void Root::set_allocated_focus_out(::cmd::HeatCamera::FocusOut* focus_out) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (focus_out) {
    ::google::protobuf::Arena* submessage_arena = focus_out->GetArena();
    if (message_arena != submessage_arena) {
      focus_out = ::google::protobuf::internal::GetOwnedMessage(message_arena, focus_out, submessage_arena);
    }
    set_has_focus_out();
    _impl_.cmd_.focus_out_ = focus_out;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Root.focus_out)
}
void Root::set_allocated_focus_stop(::cmd::HeatCamera::FocusStop* focus_stop) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (focus_stop) {
    ::google::protobuf::Arena* submessage_arena = focus_stop->GetArena();
    if (message_arena != submessage_arena) {
      focus_stop = ::google::protobuf::internal::GetOwnedMessage(message_arena, focus_stop, submessage_arena);
    }
    set_has_focus_stop();
    _impl_.cmd_.focus_stop_ = focus_stop;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Root.focus_stop)
}
void Root::set_allocated_calibrate(::cmd::HeatCamera::Calibrate* calibrate) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (calibrate) {
    ::google::protobuf::Arena* submessage_arena = calibrate->GetArena();
    if (message_arena != submessage_arena) {
      calibrate = ::google::protobuf::internal::GetOwnedMessage(message_arena, calibrate, submessage_arena);
    }
    set_has_calibrate();
    _impl_.cmd_.calibrate_ = calibrate;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Root.calibrate)
}
void Root::set_allocated_set_dde_level(::cmd::HeatCamera::SetDDELevel* set_dde_level) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (set_dde_level) {
    ::google::protobuf::Arena* submessage_arena = set_dde_level->GetArena();
    if (message_arena != submessage_arena) {
      set_dde_level = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_dde_level, submessage_arena);
    }
    set_has_set_dde_level();
    _impl_.cmd_.set_dde_level_ = set_dde_level;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Root.set_dde_level)
}
void Root::set_allocated_enable_dde(::cmd::HeatCamera::EnableDDE* enable_dde) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (enable_dde) {
    ::google::protobuf::Arena* submessage_arena = enable_dde->GetArena();
    if (message_arena != submessage_arena) {
      enable_dde = ::google::protobuf::internal::GetOwnedMessage(message_arena, enable_dde, submessage_arena);
    }
    set_has_enable_dde();
    _impl_.cmd_.enable_dde_ = enable_dde;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Root.enable_dde)
}
void Root::set_allocated_disable_dde(::cmd::HeatCamera::DisableDDE* disable_dde) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (disable_dde) {
    ::google::protobuf::Arena* submessage_arena = disable_dde->GetArena();
    if (message_arena != submessage_arena) {
      disable_dde = ::google::protobuf::internal::GetOwnedMessage(message_arena, disable_dde, submessage_arena);
    }
    set_has_disable_dde();
    _impl_.cmd_.disable_dde_ = disable_dde;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Root.disable_dde)
}
void Root::set_allocated_set_auto_focus(::cmd::HeatCamera::SetAutoFocus* set_auto_focus) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (set_auto_focus) {
    ::google::protobuf::Arena* submessage_arena = set_auto_focus->GetArena();
    if (message_arena != submessage_arena) {
      set_auto_focus = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_auto_focus, submessage_arena);
    }
    set_has_set_auto_focus();
    _impl_.cmd_.set_auto_focus_ = set_auto_focus;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Root.set_auto_focus)
}
void Root::set_allocated_focus_step_plus(::cmd::HeatCamera::FocusStepPlus* focus_step_plus) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (focus_step_plus) {
    ::google::protobuf::Arena* submessage_arena = focus_step_plus->GetArena();
    if (message_arena != submessage_arena) {
      focus_step_plus = ::google::protobuf::internal::GetOwnedMessage(message_arena, focus_step_plus, submessage_arena);
    }
    set_has_focus_step_plus();
    _impl_.cmd_.focus_step_plus_ = focus_step_plus;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Root.focus_step_plus)
}
void Root::set_allocated_focus_step_minus(::cmd::HeatCamera::FocusStepMinus* focus_step_minus) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (focus_step_minus) {
    ::google::protobuf::Arena* submessage_arena = focus_step_minus->GetArena();
    if (message_arena != submessage_arena) {
      focus_step_minus = ::google::protobuf::internal::GetOwnedMessage(message_arena, focus_step_minus, submessage_arena);
    }
    set_has_focus_step_minus();
    _impl_.cmd_.focus_step_minus_ = focus_step_minus;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Root.focus_step_minus)
}
void Root::set_allocated_set_fx_mode(::cmd::HeatCamera::SetFxMode* set_fx_mode) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (set_fx_mode) {
    ::google::protobuf::Arena* submessage_arena = set_fx_mode->GetArena();
    if (message_arena != submessage_arena) {
      set_fx_mode = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_fx_mode, submessage_arena);
    }
    set_has_set_fx_mode();
    _impl_.cmd_.set_fx_mode_ = set_fx_mode;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Root.set_fx_mode)
}
void Root::set_allocated_next_fx_mode(::cmd::HeatCamera::NextFxMode* next_fx_mode) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (next_fx_mode) {
    ::google::protobuf::Arena* submessage_arena = next_fx_mode->GetArena();
    if (message_arena != submessage_arena) {
      next_fx_mode = ::google::protobuf::internal::GetOwnedMessage(message_arena, next_fx_mode, submessage_arena);
    }
    set_has_next_fx_mode();
    _impl_.cmd_.next_fx_mode_ = next_fx_mode;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Root.next_fx_mode)
}
void Root::set_allocated_prev_fx_mode(::cmd::HeatCamera::PrevFxMode* prev_fx_mode) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (prev_fx_mode) {
    ::google::protobuf::Arena* submessage_arena = prev_fx_mode->GetArena();
    if (message_arena != submessage_arena) {
      prev_fx_mode = ::google::protobuf::internal::GetOwnedMessage(message_arena, prev_fx_mode, submessage_arena);
    }
    set_has_prev_fx_mode();
    _impl_.cmd_.prev_fx_mode_ = prev_fx_mode;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Root.prev_fx_mode)
}
void Root::set_allocated_get_meteo(::cmd::HeatCamera::GetMeteo* get_meteo) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (get_meteo) {
    ::google::protobuf::Arena* submessage_arena = get_meteo->GetArena();
    if (message_arena != submessage_arena) {
      get_meteo = ::google::protobuf::internal::GetOwnedMessage(message_arena, get_meteo, submessage_arena);
    }
    set_has_get_meteo();
    _impl_.cmd_.get_meteo_ = get_meteo;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Root.get_meteo)
}
void Root::set_allocated_shift_dde(::cmd::HeatCamera::ShiftDDE* shift_dde) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (shift_dde) {
    ::google::protobuf::Arena* submessage_arena = shift_dde->GetArena();
    if (message_arena != submessage_arena) {
      shift_dde = ::google::protobuf::internal::GetOwnedMessage(message_arena, shift_dde, submessage_arena);
    }
    set_has_shift_dde();
    _impl_.cmd_.shift_dde_ = shift_dde;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Root.shift_dde)
}
void Root::set_allocated_refresh_fx_mode(::cmd::HeatCamera::RefreshFxMode* refresh_fx_mode) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (refresh_fx_mode) {
    ::google::protobuf::Arena* submessage_arena = refresh_fx_mode->GetArena();
    if (message_arena != submessage_arena) {
      refresh_fx_mode = ::google::protobuf::internal::GetOwnedMessage(message_arena, refresh_fx_mode, submessage_arena);
    }
    set_has_refresh_fx_mode();
    _impl_.cmd_.refresh_fx_mode_ = refresh_fx_mode;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Root.refresh_fx_mode)
}
void Root::set_allocated_reset_zoom(::cmd::HeatCamera::ResetZoom* reset_zoom) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (reset_zoom) {
    ::google::protobuf::Arena* submessage_arena = reset_zoom->GetArena();
    if (message_arena != submessage_arena) {
      reset_zoom = ::google::protobuf::internal::GetOwnedMessage(message_arena, reset_zoom, submessage_arena);
    }
    set_has_reset_zoom();
    _impl_.cmd_.reset_zoom_ = reset_zoom;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Root.reset_zoom)
}
void Root::set_allocated_save_to_table(::cmd::HeatCamera::SaveToTable* save_to_table) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (save_to_table) {
    ::google::protobuf::Arena* submessage_arena = save_to_table->GetArena();
    if (message_arena != submessage_arena) {
      save_to_table = ::google::protobuf::internal::GetOwnedMessage(message_arena, save_to_table, submessage_arena);
    }
    set_has_save_to_table();
    _impl_.cmd_.save_to_table_ = save_to_table;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Root.save_to_table)
}
void Root::set_allocated_set_calib_mode(::cmd::HeatCamera::SetCalibMode* set_calib_mode) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (set_calib_mode) {
    ::google::protobuf::Arena* submessage_arena = set_calib_mode->GetArena();
    if (message_arena != submessage_arena) {
      set_calib_mode = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_calib_mode, submessage_arena);
    }
    set_has_set_calib_mode();
    _impl_.cmd_.set_calib_mode_ = set_calib_mode;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Root.set_calib_mode)
}
void Root::set_allocated_set_digital_zoom_level(::cmd::HeatCamera::SetDigitalZoomLevel* set_digital_zoom_level) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (set_digital_zoom_level) {
    ::google::protobuf::Arena* submessage_arena = set_digital_zoom_level->GetArena();
    if (message_arena != submessage_arena) {
      set_digital_zoom_level = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_digital_zoom_level, submessage_arena);
    }
    set_has_set_digital_zoom_level();
    _impl_.cmd_.set_digital_zoom_level_ = set_digital_zoom_level;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Root.set_digital_zoom_level)
}
void Root::set_allocated_set_clahe_level(::cmd::HeatCamera::SetClaheLevel* set_clahe_level) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (set_clahe_level) {
    ::google::protobuf::Arena* submessage_arena = set_clahe_level->GetArena();
    if (message_arena != submessage_arena) {
      set_clahe_level = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_clahe_level, submessage_arena);
    }
    set_has_set_clahe_level();
    _impl_.cmd_.set_clahe_level_ = set_clahe_level;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Root.set_clahe_level)
}
void Root::set_allocated_shift_clahe_level(::cmd::HeatCamera::ShiftClaheLevel* shift_clahe_level) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (shift_clahe_level) {
    ::google::protobuf::Arena* submessage_arena = shift_clahe_level->GetArena();
    if (message_arena != submessage_arena) {
      shift_clahe_level = ::google::protobuf::internal::GetOwnedMessage(message_arena, shift_clahe_level, submessage_arena);
    }
    set_has_shift_clahe_level();
    _impl_.cmd_.shift_clahe_level_ = shift_clahe_level;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Root.shift_clahe_level)
}
Root::Root(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.Root)
}
inline PROTOBUF_NDEBUG_INLINE Root::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Root::Root(
    ::google::protobuf::Arena* arena,
    const Root& from)
    : ::google::protobuf::Message(arena) {
  Root* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (cmd_case()) {
    case CMD_NOT_SET:
      break;
      case kZoom:
        _impl_.cmd_.zoom_ = CreateMaybeMessage<::cmd::HeatCamera::Zoom>(arena, *from._impl_.cmd_.zoom_);
        break;
      case kSetAgc:
        _impl_.cmd_.set_agc_ = CreateMaybeMessage<::cmd::HeatCamera::SetAGC>(arena, *from._impl_.cmd_.set_agc_);
        break;
      case kSetFilter:
        _impl_.cmd_.set_filter_ = CreateMaybeMessage<::cmd::HeatCamera::SetFilters>(arena, *from._impl_.cmd_.set_filter_);
        break;
      case kStart:
        _impl_.cmd_.start_ = CreateMaybeMessage<::cmd::HeatCamera::Start>(arena, *from._impl_.cmd_.start_);
        break;
      case kStop:
        _impl_.cmd_.stop_ = CreateMaybeMessage<::cmd::HeatCamera::Stop>(arena, *from._impl_.cmd_.stop_);
        break;
      case kPhoto:
        _impl_.cmd_.photo_ = CreateMaybeMessage<::cmd::HeatCamera::Photo>(arena, *from._impl_.cmd_.photo_);
        break;
      case kZoomIn:
        _impl_.cmd_.zoom_in_ = CreateMaybeMessage<::cmd::HeatCamera::ZoomIn>(arena, *from._impl_.cmd_.zoom_in_);
        break;
      case kZoomOut:
        _impl_.cmd_.zoom_out_ = CreateMaybeMessage<::cmd::HeatCamera::ZoomOut>(arena, *from._impl_.cmd_.zoom_out_);
        break;
      case kZoomStop:
        _impl_.cmd_.zoom_stop_ = CreateMaybeMessage<::cmd::HeatCamera::ZoomStop>(arena, *from._impl_.cmd_.zoom_stop_);
        break;
      case kFocusIn:
        _impl_.cmd_.focus_in_ = CreateMaybeMessage<::cmd::HeatCamera::FocusIn>(arena, *from._impl_.cmd_.focus_in_);
        break;
      case kFocusOut:
        _impl_.cmd_.focus_out_ = CreateMaybeMessage<::cmd::HeatCamera::FocusOut>(arena, *from._impl_.cmd_.focus_out_);
        break;
      case kFocusStop:
        _impl_.cmd_.focus_stop_ = CreateMaybeMessage<::cmd::HeatCamera::FocusStop>(arena, *from._impl_.cmd_.focus_stop_);
        break;
      case kCalibrate:
        _impl_.cmd_.calibrate_ = CreateMaybeMessage<::cmd::HeatCamera::Calibrate>(arena, *from._impl_.cmd_.calibrate_);
        break;
      case kSetDdeLevel:
        _impl_.cmd_.set_dde_level_ = CreateMaybeMessage<::cmd::HeatCamera::SetDDELevel>(arena, *from._impl_.cmd_.set_dde_level_);
        break;
      case kEnableDde:
        _impl_.cmd_.enable_dde_ = CreateMaybeMessage<::cmd::HeatCamera::EnableDDE>(arena, *from._impl_.cmd_.enable_dde_);
        break;
      case kDisableDde:
        _impl_.cmd_.disable_dde_ = CreateMaybeMessage<::cmd::HeatCamera::DisableDDE>(arena, *from._impl_.cmd_.disable_dde_);
        break;
      case kSetAutoFocus:
        _impl_.cmd_.set_auto_focus_ = CreateMaybeMessage<::cmd::HeatCamera::SetAutoFocus>(arena, *from._impl_.cmd_.set_auto_focus_);
        break;
      case kFocusStepPlus:
        _impl_.cmd_.focus_step_plus_ = CreateMaybeMessage<::cmd::HeatCamera::FocusStepPlus>(arena, *from._impl_.cmd_.focus_step_plus_);
        break;
      case kFocusStepMinus:
        _impl_.cmd_.focus_step_minus_ = CreateMaybeMessage<::cmd::HeatCamera::FocusStepMinus>(arena, *from._impl_.cmd_.focus_step_minus_);
        break;
      case kSetFxMode:
        _impl_.cmd_.set_fx_mode_ = CreateMaybeMessage<::cmd::HeatCamera::SetFxMode>(arena, *from._impl_.cmd_.set_fx_mode_);
        break;
      case kNextFxMode:
        _impl_.cmd_.next_fx_mode_ = CreateMaybeMessage<::cmd::HeatCamera::NextFxMode>(arena, *from._impl_.cmd_.next_fx_mode_);
        break;
      case kPrevFxMode:
        _impl_.cmd_.prev_fx_mode_ = CreateMaybeMessage<::cmd::HeatCamera::PrevFxMode>(arena, *from._impl_.cmd_.prev_fx_mode_);
        break;
      case kGetMeteo:
        _impl_.cmd_.get_meteo_ = CreateMaybeMessage<::cmd::HeatCamera::GetMeteo>(arena, *from._impl_.cmd_.get_meteo_);
        break;
      case kShiftDde:
        _impl_.cmd_.shift_dde_ = CreateMaybeMessage<::cmd::HeatCamera::ShiftDDE>(arena, *from._impl_.cmd_.shift_dde_);
        break;
      case kRefreshFxMode:
        _impl_.cmd_.refresh_fx_mode_ = CreateMaybeMessage<::cmd::HeatCamera::RefreshFxMode>(arena, *from._impl_.cmd_.refresh_fx_mode_);
        break;
      case kResetZoom:
        _impl_.cmd_.reset_zoom_ = CreateMaybeMessage<::cmd::HeatCamera::ResetZoom>(arena, *from._impl_.cmd_.reset_zoom_);
        break;
      case kSaveToTable:
        _impl_.cmd_.save_to_table_ = CreateMaybeMessage<::cmd::HeatCamera::SaveToTable>(arena, *from._impl_.cmd_.save_to_table_);
        break;
      case kSetCalibMode:
        _impl_.cmd_.set_calib_mode_ = CreateMaybeMessage<::cmd::HeatCamera::SetCalibMode>(arena, *from._impl_.cmd_.set_calib_mode_);
        break;
      case kSetDigitalZoomLevel:
        _impl_.cmd_.set_digital_zoom_level_ = CreateMaybeMessage<::cmd::HeatCamera::SetDigitalZoomLevel>(arena, *from._impl_.cmd_.set_digital_zoom_level_);
        break;
      case kSetClaheLevel:
        _impl_.cmd_.set_clahe_level_ = CreateMaybeMessage<::cmd::HeatCamera::SetClaheLevel>(arena, *from._impl_.cmd_.set_clahe_level_);
        break;
      case kShiftClaheLevel:
        _impl_.cmd_.shift_clahe_level_ = CreateMaybeMessage<::cmd::HeatCamera::ShiftClaheLevel>(arena, *from._impl_.cmd_.shift_clahe_level_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:cmd.HeatCamera.Root)
}
inline PROTOBUF_NDEBUG_INLINE Root::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Root::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Root::~Root() {
  // @@protoc_insertion_point(destructor:cmd.HeatCamera.Root)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Root::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_cmd()) {
    clear_cmd();
  }
  _impl_.~Impl_();
}

void Root::clear_cmd() {
// @@protoc_insertion_point(one_of_clear_start:cmd.HeatCamera.Root)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (cmd_case()) {
    case kZoom: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.zoom_;
      }
      break;
    }
    case kSetAgc: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.set_agc_;
      }
      break;
    }
    case kSetFilter: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.set_filter_;
      }
      break;
    }
    case kStart: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.start_;
      }
      break;
    }
    case kStop: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.stop_;
      }
      break;
    }
    case kPhoto: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.photo_;
      }
      break;
    }
    case kZoomIn: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.zoom_in_;
      }
      break;
    }
    case kZoomOut: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.zoom_out_;
      }
      break;
    }
    case kZoomStop: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.zoom_stop_;
      }
      break;
    }
    case kFocusIn: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.focus_in_;
      }
      break;
    }
    case kFocusOut: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.focus_out_;
      }
      break;
    }
    case kFocusStop: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.focus_stop_;
      }
      break;
    }
    case kCalibrate: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.calibrate_;
      }
      break;
    }
    case kSetDdeLevel: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.set_dde_level_;
      }
      break;
    }
    case kEnableDde: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.enable_dde_;
      }
      break;
    }
    case kDisableDde: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.disable_dde_;
      }
      break;
    }
    case kSetAutoFocus: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.set_auto_focus_;
      }
      break;
    }
    case kFocusStepPlus: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.focus_step_plus_;
      }
      break;
    }
    case kFocusStepMinus: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.focus_step_minus_;
      }
      break;
    }
    case kSetFxMode: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.set_fx_mode_;
      }
      break;
    }
    case kNextFxMode: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.next_fx_mode_;
      }
      break;
    }
    case kPrevFxMode: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.prev_fx_mode_;
      }
      break;
    }
    case kGetMeteo: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.get_meteo_;
      }
      break;
    }
    case kShiftDde: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.shift_dde_;
      }
      break;
    }
    case kRefreshFxMode: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.refresh_fx_mode_;
      }
      break;
    }
    case kResetZoom: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.reset_zoom_;
      }
      break;
    }
    case kSaveToTable: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.save_to_table_;
      }
      break;
    }
    case kSetCalibMode: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.set_calib_mode_;
      }
      break;
    }
    case kSetDigitalZoomLevel: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.set_digital_zoom_level_;
      }
      break;
    }
    case kSetClaheLevel: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.set_clahe_level_;
      }
      break;
    }
    case kShiftClaheLevel: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.shift_clahe_level_;
      }
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CMD_NOT_SET;
}


PROTOBUF_NOINLINE void Root::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.HeatCamera.Root)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_cmd();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Root::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 31, 31, 0, 7> Root::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    34, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    448,  // skipmap
    offsetof(decltype(_table_), field_entries),
    31,  // num_field_entries
    31,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Root_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    33, 0, 1,
    65532, 29,
    65535, 65535
  }}, {{
    // .cmd.HeatCamera.Zoom zoom = 1;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.zoom_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.HeatCamera.SetAGC set_agc = 2;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.set_agc_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.HeatCamera.SetFilters set_filter = 3;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.set_filter_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.HeatCamera.Start start = 4;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.start_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.HeatCamera.Stop stop = 5;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.stop_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.HeatCamera.Photo photo = 6;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.photo_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.HeatCamera.ZoomIn zoom_in = 10;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.zoom_in_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.HeatCamera.ZoomOut zoom_out = 11;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.zoom_out_), _Internal::kOneofCaseOffset + 0, 7,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.HeatCamera.ZoomStop zoom_stop = 12;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.zoom_stop_), _Internal::kOneofCaseOffset + 0, 8,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.HeatCamera.FocusIn focus_in = 13;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.focus_in_), _Internal::kOneofCaseOffset + 0, 9,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.HeatCamera.FocusOut focus_out = 14;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.focus_out_), _Internal::kOneofCaseOffset + 0, 10,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.HeatCamera.FocusStop focus_stop = 15;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.focus_stop_), _Internal::kOneofCaseOffset + 0, 11,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.HeatCamera.Calibrate calibrate = 16;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.calibrate_), _Internal::kOneofCaseOffset + 0, 12,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.HeatCamera.SetDDELevel set_dde_level = 17;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.set_dde_level_), _Internal::kOneofCaseOffset + 0, 13,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.HeatCamera.EnableDDE enable_dde = 18;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.enable_dde_), _Internal::kOneofCaseOffset + 0, 14,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.HeatCamera.DisableDDE disable_dde = 19;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.disable_dde_), _Internal::kOneofCaseOffset + 0, 15,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.HeatCamera.SetAutoFocus set_auto_focus = 20;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.set_auto_focus_), _Internal::kOneofCaseOffset + 0, 16,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.HeatCamera.FocusStepPlus focus_step_plus = 21;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.focus_step_plus_), _Internal::kOneofCaseOffset + 0, 17,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.HeatCamera.FocusStepMinus focus_step_minus = 22;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.focus_step_minus_), _Internal::kOneofCaseOffset + 0, 18,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.HeatCamera.SetFxMode set_fx_mode = 23;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.set_fx_mode_), _Internal::kOneofCaseOffset + 0, 19,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.HeatCamera.NextFxMode next_fx_mode = 24;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.next_fx_mode_), _Internal::kOneofCaseOffset + 0, 20,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.HeatCamera.PrevFxMode prev_fx_mode = 25;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.prev_fx_mode_), _Internal::kOneofCaseOffset + 0, 21,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.HeatCamera.GetMeteo get_meteo = 26;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.get_meteo_), _Internal::kOneofCaseOffset + 0, 22,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.HeatCamera.ShiftDDE shift_dde = 27;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.shift_dde_), _Internal::kOneofCaseOffset + 0, 23,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.HeatCamera.RefreshFxMode refresh_fx_mode = 28;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.refresh_fx_mode_), _Internal::kOneofCaseOffset + 0, 24,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.HeatCamera.ResetZoom reset_zoom = 29;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.reset_zoom_), _Internal::kOneofCaseOffset + 0, 25,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.HeatCamera.SaveToTable save_to_table = 30;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.save_to_table_), _Internal::kOneofCaseOffset + 0, 26,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.HeatCamera.SetCalibMode set_calib_mode = 31;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.set_calib_mode_), _Internal::kOneofCaseOffset + 0, 27,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.HeatCamera.SetDigitalZoomLevel set_digital_zoom_level = 32;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.set_digital_zoom_level_), _Internal::kOneofCaseOffset + 0, 28,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.HeatCamera.SetClaheLevel set_clahe_level = 33;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.set_clahe_level_), _Internal::kOneofCaseOffset + 0, 29,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.HeatCamera.ShiftClaheLevel shift_clahe_level = 34;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.shift_clahe_level_), _Internal::kOneofCaseOffset + 0, 30,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cmd::HeatCamera::Zoom>()},
    {::_pbi::TcParser::GetTable<::cmd::HeatCamera::SetAGC>()},
    {::_pbi::TcParser::GetTable<::cmd::HeatCamera::SetFilters>()},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::HeatCamera::_Start_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::HeatCamera::_Stop_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::HeatCamera::_Photo_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::HeatCamera::_ZoomIn_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::HeatCamera::_ZoomOut_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::HeatCamera::_ZoomStop_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::HeatCamera::_FocusIn_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::HeatCamera::_FocusOut_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::HeatCamera::_FocusStop_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::HeatCamera::_Calibrate_default_instance_},
    {::_pbi::TcParser::GetTable<::cmd::HeatCamera::SetDDELevel>()},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::HeatCamera::_EnableDDE_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::HeatCamera::_DisableDDE_default_instance_},
    {::_pbi::TcParser::GetTable<::cmd::HeatCamera::SetAutoFocus>()},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::HeatCamera::_FocusStepPlus_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::HeatCamera::_FocusStepMinus_default_instance_},
    {::_pbi::TcParser::GetTable<::cmd::HeatCamera::SetFxMode>()},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::HeatCamera::_NextFxMode_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::HeatCamera::_PrevFxMode_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::HeatCamera::_GetMeteo_default_instance_},
    {::_pbi::TcParser::GetTable<::cmd::HeatCamera::ShiftDDE>()},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::HeatCamera::_RefreshFxMode_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::HeatCamera::_ResetZoom_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::HeatCamera::_SaveToTable_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::HeatCamera::_SetCalibMode_default_instance_},
    {::_pbi::TcParser::GetTable<::cmd::HeatCamera::SetDigitalZoomLevel>()},
    {::_pbi::TcParser::GetTable<::cmd::HeatCamera::SetClaheLevel>()},
    {::_pbi::TcParser::GetTable<::cmd::HeatCamera::ShiftClaheLevel>()},
  }}, {{
  }},
};

::uint8_t* Root::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.HeatCamera.Root)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (cmd_case()) {
    case kZoom: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::zoom(this),
          _Internal::zoom(this).GetCachedSize(), target, stream);
      break;
    }
    case kSetAgc: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::set_agc(this),
          _Internal::set_agc(this).GetCachedSize(), target, stream);
      break;
    }
    case kSetFilter: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::set_filter(this),
          _Internal::set_filter(this).GetCachedSize(), target, stream);
      break;
    }
    case kStart: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, _Internal::start(this),
          _Internal::start(this).GetCachedSize(), target, stream);
      break;
    }
    case kStop: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, _Internal::stop(this),
          _Internal::stop(this).GetCachedSize(), target, stream);
      break;
    }
    case kPhoto: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, _Internal::photo(this),
          _Internal::photo(this).GetCachedSize(), target, stream);
      break;
    }
    case kZoomIn: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          10, _Internal::zoom_in(this),
          _Internal::zoom_in(this).GetCachedSize(), target, stream);
      break;
    }
    case kZoomOut: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          11, _Internal::zoom_out(this),
          _Internal::zoom_out(this).GetCachedSize(), target, stream);
      break;
    }
    case kZoomStop: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          12, _Internal::zoom_stop(this),
          _Internal::zoom_stop(this).GetCachedSize(), target, stream);
      break;
    }
    case kFocusIn: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          13, _Internal::focus_in(this),
          _Internal::focus_in(this).GetCachedSize(), target, stream);
      break;
    }
    case kFocusOut: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          14, _Internal::focus_out(this),
          _Internal::focus_out(this).GetCachedSize(), target, stream);
      break;
    }
    case kFocusStop: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          15, _Internal::focus_stop(this),
          _Internal::focus_stop(this).GetCachedSize(), target, stream);
      break;
    }
    case kCalibrate: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          16, _Internal::calibrate(this),
          _Internal::calibrate(this).GetCachedSize(), target, stream);
      break;
    }
    case kSetDdeLevel: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          17, _Internal::set_dde_level(this),
          _Internal::set_dde_level(this).GetCachedSize(), target, stream);
      break;
    }
    case kEnableDde: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          18, _Internal::enable_dde(this),
          _Internal::enable_dde(this).GetCachedSize(), target, stream);
      break;
    }
    case kDisableDde: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          19, _Internal::disable_dde(this),
          _Internal::disable_dde(this).GetCachedSize(), target, stream);
      break;
    }
    case kSetAutoFocus: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          20, _Internal::set_auto_focus(this),
          _Internal::set_auto_focus(this).GetCachedSize(), target, stream);
      break;
    }
    case kFocusStepPlus: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          21, _Internal::focus_step_plus(this),
          _Internal::focus_step_plus(this).GetCachedSize(), target, stream);
      break;
    }
    case kFocusStepMinus: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          22, _Internal::focus_step_minus(this),
          _Internal::focus_step_minus(this).GetCachedSize(), target, stream);
      break;
    }
    case kSetFxMode: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          23, _Internal::set_fx_mode(this),
          _Internal::set_fx_mode(this).GetCachedSize(), target, stream);
      break;
    }
    case kNextFxMode: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          24, _Internal::next_fx_mode(this),
          _Internal::next_fx_mode(this).GetCachedSize(), target, stream);
      break;
    }
    case kPrevFxMode: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          25, _Internal::prev_fx_mode(this),
          _Internal::prev_fx_mode(this).GetCachedSize(), target, stream);
      break;
    }
    case kGetMeteo: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          26, _Internal::get_meteo(this),
          _Internal::get_meteo(this).GetCachedSize(), target, stream);
      break;
    }
    case kShiftDde: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          27, _Internal::shift_dde(this),
          _Internal::shift_dde(this).GetCachedSize(), target, stream);
      break;
    }
    case kRefreshFxMode: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          28, _Internal::refresh_fx_mode(this),
          _Internal::refresh_fx_mode(this).GetCachedSize(), target, stream);
      break;
    }
    case kResetZoom: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          29, _Internal::reset_zoom(this),
          _Internal::reset_zoom(this).GetCachedSize(), target, stream);
      break;
    }
    case kSaveToTable: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          30, _Internal::save_to_table(this),
          _Internal::save_to_table(this).GetCachedSize(), target, stream);
      break;
    }
    case kSetCalibMode: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          31, _Internal::set_calib_mode(this),
          _Internal::set_calib_mode(this).GetCachedSize(), target, stream);
      break;
    }
    case kSetDigitalZoomLevel: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          32, _Internal::set_digital_zoom_level(this),
          _Internal::set_digital_zoom_level(this).GetCachedSize(), target, stream);
      break;
    }
    case kSetClaheLevel: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          33, _Internal::set_clahe_level(this),
          _Internal::set_clahe_level(this).GetCachedSize(), target, stream);
      break;
    }
    case kShiftClaheLevel: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          34, _Internal::shift_clahe_level(this),
          _Internal::shift_clahe_level(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.HeatCamera.Root)
  return target;
}

::size_t Root::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.HeatCamera.Root)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (cmd_case()) {
    // .cmd.HeatCamera.Zoom zoom = 1;
    case kZoom: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.zoom_);
      break;
    }
    // .cmd.HeatCamera.SetAGC set_agc = 2;
    case kSetAgc: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.set_agc_);
      break;
    }
    // .cmd.HeatCamera.SetFilters set_filter = 3;
    case kSetFilter: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.set_filter_);
      break;
    }
    // .cmd.HeatCamera.Start start = 4;
    case kStart: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.start_);
      break;
    }
    // .cmd.HeatCamera.Stop stop = 5;
    case kStop: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.stop_);
      break;
    }
    // .cmd.HeatCamera.Photo photo = 6;
    case kPhoto: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.photo_);
      break;
    }
    // .cmd.HeatCamera.ZoomIn zoom_in = 10;
    case kZoomIn: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.zoom_in_);
      break;
    }
    // .cmd.HeatCamera.ZoomOut zoom_out = 11;
    case kZoomOut: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.zoom_out_);
      break;
    }
    // .cmd.HeatCamera.ZoomStop zoom_stop = 12;
    case kZoomStop: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.zoom_stop_);
      break;
    }
    // .cmd.HeatCamera.FocusIn focus_in = 13;
    case kFocusIn: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.focus_in_);
      break;
    }
    // .cmd.HeatCamera.FocusOut focus_out = 14;
    case kFocusOut: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.focus_out_);
      break;
    }
    // .cmd.HeatCamera.FocusStop focus_stop = 15;
    case kFocusStop: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.focus_stop_);
      break;
    }
    // .cmd.HeatCamera.Calibrate calibrate = 16;
    case kCalibrate: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.calibrate_);
      break;
    }
    // .cmd.HeatCamera.SetDDELevel set_dde_level = 17;
    case kSetDdeLevel: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.set_dde_level_);
      break;
    }
    // .cmd.HeatCamera.EnableDDE enable_dde = 18;
    case kEnableDde: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.enable_dde_);
      break;
    }
    // .cmd.HeatCamera.DisableDDE disable_dde = 19;
    case kDisableDde: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.disable_dde_);
      break;
    }
    // .cmd.HeatCamera.SetAutoFocus set_auto_focus = 20;
    case kSetAutoFocus: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.set_auto_focus_);
      break;
    }
    // .cmd.HeatCamera.FocusStepPlus focus_step_plus = 21;
    case kFocusStepPlus: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.focus_step_plus_);
      break;
    }
    // .cmd.HeatCamera.FocusStepMinus focus_step_minus = 22;
    case kFocusStepMinus: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.focus_step_minus_);
      break;
    }
    // .cmd.HeatCamera.SetFxMode set_fx_mode = 23;
    case kSetFxMode: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.set_fx_mode_);
      break;
    }
    // .cmd.HeatCamera.NextFxMode next_fx_mode = 24;
    case kNextFxMode: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.next_fx_mode_);
      break;
    }
    // .cmd.HeatCamera.PrevFxMode prev_fx_mode = 25;
    case kPrevFxMode: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.prev_fx_mode_);
      break;
    }
    // .cmd.HeatCamera.GetMeteo get_meteo = 26;
    case kGetMeteo: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.get_meteo_);
      break;
    }
    // .cmd.HeatCamera.ShiftDDE shift_dde = 27;
    case kShiftDde: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.shift_dde_);
      break;
    }
    // .cmd.HeatCamera.RefreshFxMode refresh_fx_mode = 28;
    case kRefreshFxMode: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.refresh_fx_mode_);
      break;
    }
    // .cmd.HeatCamera.ResetZoom reset_zoom = 29;
    case kResetZoom: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.reset_zoom_);
      break;
    }
    // .cmd.HeatCamera.SaveToTable save_to_table = 30;
    case kSaveToTable: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.save_to_table_);
      break;
    }
    // .cmd.HeatCamera.SetCalibMode set_calib_mode = 31;
    case kSetCalibMode: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.set_calib_mode_);
      break;
    }
    // .cmd.HeatCamera.SetDigitalZoomLevel set_digital_zoom_level = 32;
    case kSetDigitalZoomLevel: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.set_digital_zoom_level_);
      break;
    }
    // .cmd.HeatCamera.SetClaheLevel set_clahe_level = 33;
    case kSetClaheLevel: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.set_clahe_level_);
      break;
    }
    // .cmd.HeatCamera.ShiftClaheLevel shift_clahe_level = 34;
    case kShiftClaheLevel: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.shift_clahe_level_);
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Root::_class_data_ = {
    Root::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Root::GetClassData() const {
  return &_class_data_;
}

void Root::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Root*>(&to_msg);
  auto& from = static_cast<const Root&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.HeatCamera.Root)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.cmd_case()) {
    case kZoom: {
      _this->_internal_mutable_zoom()->::cmd::HeatCamera::Zoom::MergeFrom(
          from._internal_zoom());
      break;
    }
    case kSetAgc: {
      _this->_internal_mutable_set_agc()->::cmd::HeatCamera::SetAGC::MergeFrom(
          from._internal_set_agc());
      break;
    }
    case kSetFilter: {
      _this->_internal_mutable_set_filter()->::cmd::HeatCamera::SetFilters::MergeFrom(
          from._internal_set_filter());
      break;
    }
    case kStart: {
      _this->_internal_mutable_start()->::cmd::HeatCamera::Start::MergeFrom(
          from._internal_start());
      break;
    }
    case kStop: {
      _this->_internal_mutable_stop()->::cmd::HeatCamera::Stop::MergeFrom(
          from._internal_stop());
      break;
    }
    case kPhoto: {
      _this->_internal_mutable_photo()->::cmd::HeatCamera::Photo::MergeFrom(
          from._internal_photo());
      break;
    }
    case kZoomIn: {
      _this->_internal_mutable_zoom_in()->::cmd::HeatCamera::ZoomIn::MergeFrom(
          from._internal_zoom_in());
      break;
    }
    case kZoomOut: {
      _this->_internal_mutable_zoom_out()->::cmd::HeatCamera::ZoomOut::MergeFrom(
          from._internal_zoom_out());
      break;
    }
    case kZoomStop: {
      _this->_internal_mutable_zoom_stop()->::cmd::HeatCamera::ZoomStop::MergeFrom(
          from._internal_zoom_stop());
      break;
    }
    case kFocusIn: {
      _this->_internal_mutable_focus_in()->::cmd::HeatCamera::FocusIn::MergeFrom(
          from._internal_focus_in());
      break;
    }
    case kFocusOut: {
      _this->_internal_mutable_focus_out()->::cmd::HeatCamera::FocusOut::MergeFrom(
          from._internal_focus_out());
      break;
    }
    case kFocusStop: {
      _this->_internal_mutable_focus_stop()->::cmd::HeatCamera::FocusStop::MergeFrom(
          from._internal_focus_stop());
      break;
    }
    case kCalibrate: {
      _this->_internal_mutable_calibrate()->::cmd::HeatCamera::Calibrate::MergeFrom(
          from._internal_calibrate());
      break;
    }
    case kSetDdeLevel: {
      _this->_internal_mutable_set_dde_level()->::cmd::HeatCamera::SetDDELevel::MergeFrom(
          from._internal_set_dde_level());
      break;
    }
    case kEnableDde: {
      _this->_internal_mutable_enable_dde()->::cmd::HeatCamera::EnableDDE::MergeFrom(
          from._internal_enable_dde());
      break;
    }
    case kDisableDde: {
      _this->_internal_mutable_disable_dde()->::cmd::HeatCamera::DisableDDE::MergeFrom(
          from._internal_disable_dde());
      break;
    }
    case kSetAutoFocus: {
      _this->_internal_mutable_set_auto_focus()->::cmd::HeatCamera::SetAutoFocus::MergeFrom(
          from._internal_set_auto_focus());
      break;
    }
    case kFocusStepPlus: {
      _this->_internal_mutable_focus_step_plus()->::cmd::HeatCamera::FocusStepPlus::MergeFrom(
          from._internal_focus_step_plus());
      break;
    }
    case kFocusStepMinus: {
      _this->_internal_mutable_focus_step_minus()->::cmd::HeatCamera::FocusStepMinus::MergeFrom(
          from._internal_focus_step_minus());
      break;
    }
    case kSetFxMode: {
      _this->_internal_mutable_set_fx_mode()->::cmd::HeatCamera::SetFxMode::MergeFrom(
          from._internal_set_fx_mode());
      break;
    }
    case kNextFxMode: {
      _this->_internal_mutable_next_fx_mode()->::cmd::HeatCamera::NextFxMode::MergeFrom(
          from._internal_next_fx_mode());
      break;
    }
    case kPrevFxMode: {
      _this->_internal_mutable_prev_fx_mode()->::cmd::HeatCamera::PrevFxMode::MergeFrom(
          from._internal_prev_fx_mode());
      break;
    }
    case kGetMeteo: {
      _this->_internal_mutable_get_meteo()->::cmd::HeatCamera::GetMeteo::MergeFrom(
          from._internal_get_meteo());
      break;
    }
    case kShiftDde: {
      _this->_internal_mutable_shift_dde()->::cmd::HeatCamera::ShiftDDE::MergeFrom(
          from._internal_shift_dde());
      break;
    }
    case kRefreshFxMode: {
      _this->_internal_mutable_refresh_fx_mode()->::cmd::HeatCamera::RefreshFxMode::MergeFrom(
          from._internal_refresh_fx_mode());
      break;
    }
    case kResetZoom: {
      _this->_internal_mutable_reset_zoom()->::cmd::HeatCamera::ResetZoom::MergeFrom(
          from._internal_reset_zoom());
      break;
    }
    case kSaveToTable: {
      _this->_internal_mutable_save_to_table()->::cmd::HeatCamera::SaveToTable::MergeFrom(
          from._internal_save_to_table());
      break;
    }
    case kSetCalibMode: {
      _this->_internal_mutable_set_calib_mode()->::cmd::HeatCamera::SetCalibMode::MergeFrom(
          from._internal_set_calib_mode());
      break;
    }
    case kSetDigitalZoomLevel: {
      _this->_internal_mutable_set_digital_zoom_level()->::cmd::HeatCamera::SetDigitalZoomLevel::MergeFrom(
          from._internal_set_digital_zoom_level());
      break;
    }
    case kSetClaheLevel: {
      _this->_internal_mutable_set_clahe_level()->::cmd::HeatCamera::SetClaheLevel::MergeFrom(
          from._internal_set_clahe_level());
      break;
    }
    case kShiftClaheLevel: {
      _this->_internal_mutable_shift_clahe_level()->::cmd::HeatCamera::ShiftClaheLevel::MergeFrom(
          from._internal_shift_clahe_level());
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Root::CopyFrom(const Root& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.HeatCamera.Root)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Root::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Root::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Root::InternalSwap(Root* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.cmd_, other->_impl_.cmd_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Root::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[0]);
}
// ===================================================================

class SetFxMode::_Internal {
 public:
};

SetFxMode::SetFxMode(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.SetFxMode)
}
SetFxMode::SetFxMode(
    ::google::protobuf::Arena* arena, const SetFxMode& from)
    : SetFxMode(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetFxMode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetFxMode::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.mode_ = {};
}
SetFxMode::~SetFxMode() {
  // @@protoc_insertion_point(destructor:cmd.HeatCamera.SetFxMode)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetFxMode::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetFxMode::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.HeatCamera.SetFxMode)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mode_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetFxMode::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetFxMode::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetFxMode_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .ser.JonGuiDataFxModeHeat mode = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetFxMode, _impl_.mode_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetFxMode, _impl_.mode_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .ser.JonGuiDataFxModeHeat mode = 1;
    {PROTOBUF_FIELD_OFFSET(SetFxMode, _impl_.mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetFxMode::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.HeatCamera.SetFxMode)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .ser.JonGuiDataFxModeHeat mode = 1;
  if (this->_internal_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.HeatCamera.SetFxMode)
  return target;
}

::size_t SetFxMode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.HeatCamera.SetFxMode)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ser.JonGuiDataFxModeHeat mode = 1;
  if (this->_internal_mode() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetFxMode::_class_data_ = {
    SetFxMode::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetFxMode::GetClassData() const {
  return &_class_data_;
}

void SetFxMode::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetFxMode*>(&to_msg);
  auto& from = static_cast<const SetFxMode&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.HeatCamera.SetFxMode)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_mode() != 0) {
    _this->_internal_set_mode(from._internal_mode());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetFxMode::CopyFrom(const SetFxMode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.HeatCamera.SetFxMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetFxMode::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetFxMode::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetFxMode::InternalSwap(SetFxMode* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.mode_, other->_impl_.mode_);
}

::google::protobuf::Metadata SetFxMode::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[1]);
}
// ===================================================================

class SetClaheLevel::_Internal {
 public:
};

SetClaheLevel::SetClaheLevel(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.SetClaheLevel)
}
SetClaheLevel::SetClaheLevel(
    ::google::protobuf::Arena* arena, const SetClaheLevel& from)
    : SetClaheLevel(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetClaheLevel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetClaheLevel::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
SetClaheLevel::~SetClaheLevel() {
  // @@protoc_insertion_point(destructor:cmd.HeatCamera.SetClaheLevel)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetClaheLevel::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetClaheLevel::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.HeatCamera.SetClaheLevel)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetClaheLevel::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetClaheLevel::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetClaheLevel_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float value = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(SetClaheLevel, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float value = 1;
    {PROTOBUF_FIELD_OFFSET(SetClaheLevel, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetClaheLevel::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.HeatCamera.SetClaheLevel)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.HeatCamera.SetClaheLevel)
  return target;
}

::size_t SetClaheLevel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.HeatCamera.SetClaheLevel)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetClaheLevel::_class_data_ = {
    SetClaheLevel::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetClaheLevel::GetClassData() const {
  return &_class_data_;
}

void SetClaheLevel::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetClaheLevel*>(&to_msg);
  auto& from = static_cast<const SetClaheLevel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.HeatCamera.SetClaheLevel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = from._internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetClaheLevel::CopyFrom(const SetClaheLevel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.HeatCamera.SetClaheLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetClaheLevel::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetClaheLevel::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetClaheLevel::InternalSwap(SetClaheLevel* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata SetClaheLevel::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[2]);
}
// ===================================================================

class ShiftClaheLevel::_Internal {
 public:
};

ShiftClaheLevel::ShiftClaheLevel(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.ShiftClaheLevel)
}
ShiftClaheLevel::ShiftClaheLevel(
    ::google::protobuf::Arena* arena, const ShiftClaheLevel& from)
    : ShiftClaheLevel(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ShiftClaheLevel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ShiftClaheLevel::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
ShiftClaheLevel::~ShiftClaheLevel() {
  // @@protoc_insertion_point(destructor:cmd.HeatCamera.ShiftClaheLevel)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ShiftClaheLevel::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ShiftClaheLevel::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.HeatCamera.ShiftClaheLevel)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ShiftClaheLevel::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ShiftClaheLevel::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ShiftClaheLevel_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float value = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(ShiftClaheLevel, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float value = 1;
    {PROTOBUF_FIELD_OFFSET(ShiftClaheLevel, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ShiftClaheLevel::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.HeatCamera.ShiftClaheLevel)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.HeatCamera.ShiftClaheLevel)
  return target;
}

::size_t ShiftClaheLevel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.HeatCamera.ShiftClaheLevel)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ShiftClaheLevel::_class_data_ = {
    ShiftClaheLevel::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ShiftClaheLevel::GetClassData() const {
  return &_class_data_;
}

void ShiftClaheLevel::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ShiftClaheLevel*>(&to_msg);
  auto& from = static_cast<const ShiftClaheLevel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.HeatCamera.ShiftClaheLevel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = from._internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ShiftClaheLevel::CopyFrom(const ShiftClaheLevel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.HeatCamera.ShiftClaheLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ShiftClaheLevel::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ShiftClaheLevel::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ShiftClaheLevel::InternalSwap(ShiftClaheLevel* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata ShiftClaheLevel::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[3]);
}
// ===================================================================

class NextFxMode::_Internal {
 public:
};

NextFxMode::NextFxMode(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.NextFxMode)
}
NextFxMode::NextFxMode(
    ::google::protobuf::Arena* arena,
    const NextFxMode& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  NextFxMode* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.HeatCamera.NextFxMode)
}









::google::protobuf::Metadata NextFxMode::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[4]);
}
// ===================================================================

class PrevFxMode::_Internal {
 public:
};

PrevFxMode::PrevFxMode(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.PrevFxMode)
}
PrevFxMode::PrevFxMode(
    ::google::protobuf::Arena* arena,
    const PrevFxMode& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  PrevFxMode* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.HeatCamera.PrevFxMode)
}









::google::protobuf::Metadata PrevFxMode::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[5]);
}
// ===================================================================

class RefreshFxMode::_Internal {
 public:
};

RefreshFxMode::RefreshFxMode(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.RefreshFxMode)
}
RefreshFxMode::RefreshFxMode(
    ::google::protobuf::Arena* arena,
    const RefreshFxMode& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  RefreshFxMode* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.HeatCamera.RefreshFxMode)
}









::google::protobuf::Metadata RefreshFxMode::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[6]);
}
// ===================================================================

class EnableDDE::_Internal {
 public:
};

EnableDDE::EnableDDE(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.EnableDDE)
}
EnableDDE::EnableDDE(
    ::google::protobuf::Arena* arena,
    const EnableDDE& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  EnableDDE* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.HeatCamera.EnableDDE)
}









::google::protobuf::Metadata EnableDDE::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[7]);
}
// ===================================================================

class DisableDDE::_Internal {
 public:
};

DisableDDE::DisableDDE(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.DisableDDE)
}
DisableDDE::DisableDDE(
    ::google::protobuf::Arena* arena,
    const DisableDDE& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  DisableDDE* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.HeatCamera.DisableDDE)
}









::google::protobuf::Metadata DisableDDE::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[8]);
}
// ===================================================================

class SetValue::_Internal {
 public:
};

SetValue::SetValue(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.SetValue)
}
SetValue::SetValue(
    ::google::protobuf::Arena* arena, const SetValue& from)
    : SetValue(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetValue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
SetValue::~SetValue() {
  // @@protoc_insertion_point(destructor:cmd.HeatCamera.SetValue)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetValue::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetValue::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.HeatCamera.SetValue)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetValue::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetValue::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetValue_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float value = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(SetValue, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float value = 1;
    {PROTOBUF_FIELD_OFFSET(SetValue, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetValue::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.HeatCamera.SetValue)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.HeatCamera.SetValue)
  return target;
}

::size_t SetValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.HeatCamera.SetValue)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetValue::_class_data_ = {
    SetValue::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetValue::GetClassData() const {
  return &_class_data_;
}

void SetValue::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetValue*>(&to_msg);
  auto& from = static_cast<const SetValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.HeatCamera.SetValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = from._internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetValue::CopyFrom(const SetValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.HeatCamera.SetValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetValue::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetValue::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetValue::InternalSwap(SetValue* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata SetValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[9]);
}
// ===================================================================

class SetDDELevel::_Internal {
 public:
};

SetDDELevel::SetDDELevel(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.SetDDELevel)
}
SetDDELevel::SetDDELevel(
    ::google::protobuf::Arena* arena, const SetDDELevel& from)
    : SetDDELevel(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetDDELevel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetDDELevel::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
SetDDELevel::~SetDDELevel() {
  // @@protoc_insertion_point(destructor:cmd.HeatCamera.SetDDELevel)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetDDELevel::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetDDELevel::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.HeatCamera.SetDDELevel)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetDDELevel::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetDDELevel::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetDDELevel_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 value = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetDDELevel, _impl_.value_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetDDELevel, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 value = 1;
    {PROTOBUF_FIELD_OFFSET(SetDDELevel, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetDDELevel::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.HeatCamera.SetDDELevel)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 value = 1;
  if (this->_internal_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.HeatCamera.SetDDELevel)
  return target;
}

::size_t SetDDELevel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.HeatCamera.SetDDELevel)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->_internal_value() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetDDELevel::_class_data_ = {
    SetDDELevel::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetDDELevel::GetClassData() const {
  return &_class_data_;
}

void SetDDELevel::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetDDELevel*>(&to_msg);
  auto& from = static_cast<const SetDDELevel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.HeatCamera.SetDDELevel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value() != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetDDELevel::CopyFrom(const SetDDELevel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.HeatCamera.SetDDELevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetDDELevel::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetDDELevel::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetDDELevel::InternalSwap(SetDDELevel* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata SetDDELevel::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[10]);
}
// ===================================================================

class SetDigitalZoomLevel::_Internal {
 public:
};

SetDigitalZoomLevel::SetDigitalZoomLevel(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.SetDigitalZoomLevel)
}
SetDigitalZoomLevel::SetDigitalZoomLevel(
    ::google::protobuf::Arena* arena, const SetDigitalZoomLevel& from)
    : SetDigitalZoomLevel(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetDigitalZoomLevel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetDigitalZoomLevel::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
SetDigitalZoomLevel::~SetDigitalZoomLevel() {
  // @@protoc_insertion_point(destructor:cmd.HeatCamera.SetDigitalZoomLevel)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetDigitalZoomLevel::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetDigitalZoomLevel::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.HeatCamera.SetDigitalZoomLevel)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetDigitalZoomLevel::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetDigitalZoomLevel::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetDigitalZoomLevel_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float value = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(SetDigitalZoomLevel, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float value = 1;
    {PROTOBUF_FIELD_OFFSET(SetDigitalZoomLevel, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetDigitalZoomLevel::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.HeatCamera.SetDigitalZoomLevel)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.HeatCamera.SetDigitalZoomLevel)
  return target;
}

::size_t SetDigitalZoomLevel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.HeatCamera.SetDigitalZoomLevel)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetDigitalZoomLevel::_class_data_ = {
    SetDigitalZoomLevel::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetDigitalZoomLevel::GetClassData() const {
  return &_class_data_;
}

void SetDigitalZoomLevel::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetDigitalZoomLevel*>(&to_msg);
  auto& from = static_cast<const SetDigitalZoomLevel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.HeatCamera.SetDigitalZoomLevel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = from._internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetDigitalZoomLevel::CopyFrom(const SetDigitalZoomLevel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.HeatCamera.SetDigitalZoomLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetDigitalZoomLevel::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetDigitalZoomLevel::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetDigitalZoomLevel::InternalSwap(SetDigitalZoomLevel* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata SetDigitalZoomLevel::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[11]);
}
// ===================================================================

class ShiftDDE::_Internal {
 public:
};

ShiftDDE::ShiftDDE(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.ShiftDDE)
}
ShiftDDE::ShiftDDE(
    ::google::protobuf::Arena* arena, const ShiftDDE& from)
    : ShiftDDE(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ShiftDDE::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ShiftDDE::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
ShiftDDE::~ShiftDDE() {
  // @@protoc_insertion_point(destructor:cmd.HeatCamera.ShiftDDE)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ShiftDDE::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ShiftDDE::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.HeatCamera.ShiftDDE)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ShiftDDE::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ShiftDDE::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ShiftDDE_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 value = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ShiftDDE, _impl_.value_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ShiftDDE, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 value = 1;
    {PROTOBUF_FIELD_OFFSET(ShiftDDE, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ShiftDDE::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.HeatCamera.ShiftDDE)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 value = 1;
  if (this->_internal_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.HeatCamera.ShiftDDE)
  return target;
}

::size_t ShiftDDE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.HeatCamera.ShiftDDE)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->_internal_value() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ShiftDDE::_class_data_ = {
    ShiftDDE::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ShiftDDE::GetClassData() const {
  return &_class_data_;
}

void ShiftDDE::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ShiftDDE*>(&to_msg);
  auto& from = static_cast<const ShiftDDE&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.HeatCamera.ShiftDDE)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value() != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ShiftDDE::CopyFrom(const ShiftDDE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.HeatCamera.ShiftDDE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ShiftDDE::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ShiftDDE::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ShiftDDE::InternalSwap(ShiftDDE* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata ShiftDDE::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[12]);
}
// ===================================================================

class ZoomIn::_Internal {
 public:
};

ZoomIn::ZoomIn(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.ZoomIn)
}
ZoomIn::ZoomIn(
    ::google::protobuf::Arena* arena,
    const ZoomIn& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  ZoomIn* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.HeatCamera.ZoomIn)
}









::google::protobuf::Metadata ZoomIn::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[13]);
}
// ===================================================================

class ZoomOut::_Internal {
 public:
};

ZoomOut::ZoomOut(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.ZoomOut)
}
ZoomOut::ZoomOut(
    ::google::protobuf::Arena* arena,
    const ZoomOut& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  ZoomOut* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.HeatCamera.ZoomOut)
}









::google::protobuf::Metadata ZoomOut::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[14]);
}
// ===================================================================

class ZoomStop::_Internal {
 public:
};

ZoomStop::ZoomStop(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.ZoomStop)
}
ZoomStop::ZoomStop(
    ::google::protobuf::Arena* arena,
    const ZoomStop& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  ZoomStop* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.HeatCamera.ZoomStop)
}









::google::protobuf::Metadata ZoomStop::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[15]);
}
// ===================================================================

class FocusIn::_Internal {
 public:
};

FocusIn::FocusIn(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.FocusIn)
}
FocusIn::FocusIn(
    ::google::protobuf::Arena* arena,
    const FocusIn& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  FocusIn* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.HeatCamera.FocusIn)
}









::google::protobuf::Metadata FocusIn::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[16]);
}
// ===================================================================

class FocusOut::_Internal {
 public:
};

FocusOut::FocusOut(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.FocusOut)
}
FocusOut::FocusOut(
    ::google::protobuf::Arena* arena,
    const FocusOut& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  FocusOut* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.HeatCamera.FocusOut)
}









::google::protobuf::Metadata FocusOut::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[17]);
}
// ===================================================================

class FocusStop::_Internal {
 public:
};

FocusStop::FocusStop(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.FocusStop)
}
FocusStop::FocusStop(
    ::google::protobuf::Arena* arena,
    const FocusStop& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  FocusStop* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.HeatCamera.FocusStop)
}









::google::protobuf::Metadata FocusStop::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[18]);
}
// ===================================================================

class FocusStepPlus::_Internal {
 public:
};

FocusStepPlus::FocusStepPlus(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.FocusStepPlus)
}
FocusStepPlus::FocusStepPlus(
    ::google::protobuf::Arena* arena,
    const FocusStepPlus& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  FocusStepPlus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.HeatCamera.FocusStepPlus)
}









::google::protobuf::Metadata FocusStepPlus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[19]);
}
// ===================================================================

class FocusStepMinus::_Internal {
 public:
};

FocusStepMinus::FocusStepMinus(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.FocusStepMinus)
}
FocusStepMinus::FocusStepMinus(
    ::google::protobuf::Arena* arena,
    const FocusStepMinus& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  FocusStepMinus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.HeatCamera.FocusStepMinus)
}









::google::protobuf::Metadata FocusStepMinus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[20]);
}
// ===================================================================

class Calibrate::_Internal {
 public:
};

Calibrate::Calibrate(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.Calibrate)
}
Calibrate::Calibrate(
    ::google::protobuf::Arena* arena,
    const Calibrate& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  Calibrate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.HeatCamera.Calibrate)
}









::google::protobuf::Metadata Calibrate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[21]);
}
// ===================================================================

class Zoom::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::cmd::HeatCamera::Zoom, _impl_._oneof_case_);
  static const ::cmd::HeatCamera::SetZoomTableValue& set_zoom_table_value(const Zoom* msg);
  static const ::cmd::HeatCamera::NextZoomTablePos& next_zoom_table_pos(const Zoom* msg);
  static const ::cmd::HeatCamera::PrevZoomTablePos& prev_zoom_table_pos(const Zoom* msg);
};

const ::cmd::HeatCamera::SetZoomTableValue& Zoom::_Internal::set_zoom_table_value(const Zoom* msg) {
  return *msg->_impl_.cmd_.set_zoom_table_value_;
}
const ::cmd::HeatCamera::NextZoomTablePos& Zoom::_Internal::next_zoom_table_pos(const Zoom* msg) {
  return *msg->_impl_.cmd_.next_zoom_table_pos_;
}
const ::cmd::HeatCamera::PrevZoomTablePos& Zoom::_Internal::prev_zoom_table_pos(const Zoom* msg) {
  return *msg->_impl_.cmd_.prev_zoom_table_pos_;
}
void Zoom::set_allocated_set_zoom_table_value(::cmd::HeatCamera::SetZoomTableValue* set_zoom_table_value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (set_zoom_table_value) {
    ::google::protobuf::Arena* submessage_arena = set_zoom_table_value->GetArena();
    if (message_arena != submessage_arena) {
      set_zoom_table_value = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_zoom_table_value, submessage_arena);
    }
    set_has_set_zoom_table_value();
    _impl_.cmd_.set_zoom_table_value_ = set_zoom_table_value;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Zoom.set_zoom_table_value)
}
void Zoom::set_allocated_next_zoom_table_pos(::cmd::HeatCamera::NextZoomTablePos* next_zoom_table_pos) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (next_zoom_table_pos) {
    ::google::protobuf::Arena* submessage_arena = next_zoom_table_pos->GetArena();
    if (message_arena != submessage_arena) {
      next_zoom_table_pos = ::google::protobuf::internal::GetOwnedMessage(message_arena, next_zoom_table_pos, submessage_arena);
    }
    set_has_next_zoom_table_pos();
    _impl_.cmd_.next_zoom_table_pos_ = next_zoom_table_pos;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Zoom.next_zoom_table_pos)
}
void Zoom::set_allocated_prev_zoom_table_pos(::cmd::HeatCamera::PrevZoomTablePos* prev_zoom_table_pos) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (prev_zoom_table_pos) {
    ::google::protobuf::Arena* submessage_arena = prev_zoom_table_pos->GetArena();
    if (message_arena != submessage_arena) {
      prev_zoom_table_pos = ::google::protobuf::internal::GetOwnedMessage(message_arena, prev_zoom_table_pos, submessage_arena);
    }
    set_has_prev_zoom_table_pos();
    _impl_.cmd_.prev_zoom_table_pos_ = prev_zoom_table_pos;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.HeatCamera.Zoom.prev_zoom_table_pos)
}
Zoom::Zoom(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.Zoom)
}
inline PROTOBUF_NDEBUG_INLINE Zoom::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Zoom::Zoom(
    ::google::protobuf::Arena* arena,
    const Zoom& from)
    : ::google::protobuf::Message(arena) {
  Zoom* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (cmd_case()) {
    case CMD_NOT_SET:
      break;
      case kSetZoomTableValue:
        _impl_.cmd_.set_zoom_table_value_ = CreateMaybeMessage<::cmd::HeatCamera::SetZoomTableValue>(arena, *from._impl_.cmd_.set_zoom_table_value_);
        break;
      case kNextZoomTablePos:
        _impl_.cmd_.next_zoom_table_pos_ = CreateMaybeMessage<::cmd::HeatCamera::NextZoomTablePos>(arena, *from._impl_.cmd_.next_zoom_table_pos_);
        break;
      case kPrevZoomTablePos:
        _impl_.cmd_.prev_zoom_table_pos_ = CreateMaybeMessage<::cmd::HeatCamera::PrevZoomTablePos>(arena, *from._impl_.cmd_.prev_zoom_table_pos_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:cmd.HeatCamera.Zoom)
}
inline PROTOBUF_NDEBUG_INLINE Zoom::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Zoom::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Zoom::~Zoom() {
  // @@protoc_insertion_point(destructor:cmd.HeatCamera.Zoom)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Zoom::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_cmd()) {
    clear_cmd();
  }
  _impl_.~Impl_();
}

void Zoom::clear_cmd() {
// @@protoc_insertion_point(one_of_clear_start:cmd.HeatCamera.Zoom)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (cmd_case()) {
    case kSetZoomTableValue: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.set_zoom_table_value_;
      }
      break;
    }
    case kNextZoomTablePos: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.next_zoom_table_pos_;
      }
      break;
    }
    case kPrevZoomTablePos: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.prev_zoom_table_pos_;
      }
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CMD_NOT_SET;
}


PROTOBUF_NOINLINE void Zoom::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.HeatCamera.Zoom)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_cmd();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Zoom::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 3, 0, 2> Zoom::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Zoom_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .cmd.HeatCamera.SetZoomTableValue set_zoom_table_value = 1;
    {PROTOBUF_FIELD_OFFSET(Zoom, _impl_.cmd_.set_zoom_table_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.HeatCamera.NextZoomTablePos next_zoom_table_pos = 2;
    {PROTOBUF_FIELD_OFFSET(Zoom, _impl_.cmd_.next_zoom_table_pos_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.HeatCamera.PrevZoomTablePos prev_zoom_table_pos = 3;
    {PROTOBUF_FIELD_OFFSET(Zoom, _impl_.cmd_.prev_zoom_table_pos_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cmd::HeatCamera::SetZoomTableValue>()},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::HeatCamera::_NextZoomTablePos_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::HeatCamera::_PrevZoomTablePos_default_instance_},
  }}, {{
  }},
};

::uint8_t* Zoom::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.HeatCamera.Zoom)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (cmd_case()) {
    case kSetZoomTableValue: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::set_zoom_table_value(this),
          _Internal::set_zoom_table_value(this).GetCachedSize(), target, stream);
      break;
    }
    case kNextZoomTablePos: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::next_zoom_table_pos(this),
          _Internal::next_zoom_table_pos(this).GetCachedSize(), target, stream);
      break;
    }
    case kPrevZoomTablePos: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::prev_zoom_table_pos(this),
          _Internal::prev_zoom_table_pos(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.HeatCamera.Zoom)
  return target;
}

::size_t Zoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.HeatCamera.Zoom)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (cmd_case()) {
    // .cmd.HeatCamera.SetZoomTableValue set_zoom_table_value = 1;
    case kSetZoomTableValue: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.set_zoom_table_value_);
      break;
    }
    // .cmd.HeatCamera.NextZoomTablePos next_zoom_table_pos = 2;
    case kNextZoomTablePos: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.next_zoom_table_pos_);
      break;
    }
    // .cmd.HeatCamera.PrevZoomTablePos prev_zoom_table_pos = 3;
    case kPrevZoomTablePos: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.prev_zoom_table_pos_);
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Zoom::_class_data_ = {
    Zoom::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Zoom::GetClassData() const {
  return &_class_data_;
}

void Zoom::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Zoom*>(&to_msg);
  auto& from = static_cast<const Zoom&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.HeatCamera.Zoom)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.cmd_case()) {
    case kSetZoomTableValue: {
      _this->_internal_mutable_set_zoom_table_value()->::cmd::HeatCamera::SetZoomTableValue::MergeFrom(
          from._internal_set_zoom_table_value());
      break;
    }
    case kNextZoomTablePos: {
      _this->_internal_mutable_next_zoom_table_pos()->::cmd::HeatCamera::NextZoomTablePos::MergeFrom(
          from._internal_next_zoom_table_pos());
      break;
    }
    case kPrevZoomTablePos: {
      _this->_internal_mutable_prev_zoom_table_pos()->::cmd::HeatCamera::PrevZoomTablePos::MergeFrom(
          from._internal_prev_zoom_table_pos());
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Zoom::CopyFrom(const Zoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.HeatCamera.Zoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Zoom::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Zoom::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Zoom::InternalSwap(Zoom* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.cmd_, other->_impl_.cmd_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Zoom::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[22]);
}
// ===================================================================

class NextZoomTablePos::_Internal {
 public:
};

NextZoomTablePos::NextZoomTablePos(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.NextZoomTablePos)
}
NextZoomTablePos::NextZoomTablePos(
    ::google::protobuf::Arena* arena,
    const NextZoomTablePos& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  NextZoomTablePos* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.HeatCamera.NextZoomTablePos)
}









::google::protobuf::Metadata NextZoomTablePos::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[23]);
}
// ===================================================================

class PrevZoomTablePos::_Internal {
 public:
};

PrevZoomTablePos::PrevZoomTablePos(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.PrevZoomTablePos)
}
PrevZoomTablePos::PrevZoomTablePos(
    ::google::protobuf::Arena* arena,
    const PrevZoomTablePos& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  PrevZoomTablePos* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.HeatCamera.PrevZoomTablePos)
}









::google::protobuf::Metadata PrevZoomTablePos::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[24]);
}
// ===================================================================

class SetCalibMode::_Internal {
 public:
};

SetCalibMode::SetCalibMode(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.SetCalibMode)
}
SetCalibMode::SetCalibMode(
    ::google::protobuf::Arena* arena,
    const SetCalibMode& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SetCalibMode* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.HeatCamera.SetCalibMode)
}









::google::protobuf::Metadata SetCalibMode::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[25]);
}
// ===================================================================

class SetZoomTableValue::_Internal {
 public:
};

SetZoomTableValue::SetZoomTableValue(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.SetZoomTableValue)
}
SetZoomTableValue::SetZoomTableValue(
    ::google::protobuf::Arena* arena, const SetZoomTableValue& from)
    : SetZoomTableValue(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetZoomTableValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetZoomTableValue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
SetZoomTableValue::~SetZoomTableValue() {
  // @@protoc_insertion_point(destructor:cmd.HeatCamera.SetZoomTableValue)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetZoomTableValue::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetZoomTableValue::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.HeatCamera.SetZoomTableValue)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetZoomTableValue::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetZoomTableValue::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetZoomTableValue_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 value = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetZoomTableValue, _impl_.value_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetZoomTableValue, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 value = 1;
    {PROTOBUF_FIELD_OFFSET(SetZoomTableValue, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetZoomTableValue::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.HeatCamera.SetZoomTableValue)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 value = 1;
  if (this->_internal_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.HeatCamera.SetZoomTableValue)
  return target;
}

::size_t SetZoomTableValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.HeatCamera.SetZoomTableValue)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->_internal_value() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetZoomTableValue::_class_data_ = {
    SetZoomTableValue::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetZoomTableValue::GetClassData() const {
  return &_class_data_;
}

void SetZoomTableValue::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetZoomTableValue*>(&to_msg);
  auto& from = static_cast<const SetZoomTableValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.HeatCamera.SetZoomTableValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value() != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetZoomTableValue::CopyFrom(const SetZoomTableValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.HeatCamera.SetZoomTableValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetZoomTableValue::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetZoomTableValue::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetZoomTableValue::InternalSwap(SetZoomTableValue* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata SetZoomTableValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[26]);
}
// ===================================================================

class SetAGC::_Internal {
 public:
};

SetAGC::SetAGC(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.SetAGC)
}
SetAGC::SetAGC(
    ::google::protobuf::Arena* arena, const SetAGC& from)
    : SetAGC(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetAGC::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetAGC::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
SetAGC::~SetAGC() {
  // @@protoc_insertion_point(destructor:cmd.HeatCamera.SetAGC)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetAGC::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetAGC::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.HeatCamera.SetAGC)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetAGC::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetAGC::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetAGC_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .ser.JonGuiDataVideoChannelHeatAGCModes value = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetAGC, _impl_.value_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetAGC, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .ser.JonGuiDataVideoChannelHeatAGCModes value = 1;
    {PROTOBUF_FIELD_OFFSET(SetAGC, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetAGC::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.HeatCamera.SetAGC)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .ser.JonGuiDataVideoChannelHeatAGCModes value = 1;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.HeatCamera.SetAGC)
  return target;
}

::size_t SetAGC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.HeatCamera.SetAGC)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ser.JonGuiDataVideoChannelHeatAGCModes value = 1;
  if (this->_internal_value() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetAGC::_class_data_ = {
    SetAGC::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetAGC::GetClassData() const {
  return &_class_data_;
}

void SetAGC::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetAGC*>(&to_msg);
  auto& from = static_cast<const SetAGC&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.HeatCamera.SetAGC)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value() != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetAGC::CopyFrom(const SetAGC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.HeatCamera.SetAGC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetAGC::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetAGC::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetAGC::InternalSwap(SetAGC* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata SetAGC::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[27]);
}
// ===================================================================

class SetFilters::_Internal {
 public:
};

SetFilters::SetFilters(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.SetFilters)
}
SetFilters::SetFilters(
    ::google::protobuf::Arena* arena, const SetFilters& from)
    : SetFilters(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetFilters::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetFilters::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
SetFilters::~SetFilters() {
  // @@protoc_insertion_point(destructor:cmd.HeatCamera.SetFilters)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetFilters::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetFilters::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.HeatCamera.SetFilters)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetFilters::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetFilters::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetFilters_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .ser.JonGuiDataVideoChannelHeatFilters value = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetFilters, _impl_.value_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetFilters, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .ser.JonGuiDataVideoChannelHeatFilters value = 1;
    {PROTOBUF_FIELD_OFFSET(SetFilters, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetFilters::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.HeatCamera.SetFilters)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .ser.JonGuiDataVideoChannelHeatFilters value = 1;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.HeatCamera.SetFilters)
  return target;
}

::size_t SetFilters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.HeatCamera.SetFilters)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ser.JonGuiDataVideoChannelHeatFilters value = 1;
  if (this->_internal_value() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetFilters::_class_data_ = {
    SetFilters::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetFilters::GetClassData() const {
  return &_class_data_;
}

void SetFilters::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetFilters*>(&to_msg);
  auto& from = static_cast<const SetFilters&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.HeatCamera.SetFilters)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value() != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetFilters::CopyFrom(const SetFilters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.HeatCamera.SetFilters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetFilters::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetFilters::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetFilters::InternalSwap(SetFilters* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata SetFilters::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[28]);
}
// ===================================================================

class Start::_Internal {
 public:
};

Start::Start(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.Start)
}
Start::Start(
    ::google::protobuf::Arena* arena,
    const Start& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  Start* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.HeatCamera.Start)
}









::google::protobuf::Metadata Start::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[29]);
}
// ===================================================================

class Stop::_Internal {
 public:
};

Stop::Stop(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.Stop)
}
Stop::Stop(
    ::google::protobuf::Arena* arena,
    const Stop& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  Stop* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.HeatCamera.Stop)
}









::google::protobuf::Metadata Stop::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[30]);
}
// ===================================================================

class Halt::_Internal {
 public:
};

Halt::Halt(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.Halt)
}
Halt::Halt(
    ::google::protobuf::Arena* arena,
    const Halt& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  Halt* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.HeatCamera.Halt)
}









::google::protobuf::Metadata Halt::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[31]);
}
// ===================================================================

class Photo::_Internal {
 public:
};

Photo::Photo(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.Photo)
}
Photo::Photo(
    ::google::protobuf::Arena* arena,
    const Photo& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  Photo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.HeatCamera.Photo)
}









::google::protobuf::Metadata Photo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[32]);
}
// ===================================================================

class GetMeteo::_Internal {
 public:
};

GetMeteo::GetMeteo(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.GetMeteo)
}
GetMeteo::GetMeteo(
    ::google::protobuf::Arena* arena,
    const GetMeteo& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  GetMeteo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.HeatCamera.GetMeteo)
}









::google::protobuf::Metadata GetMeteo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[33]);
}
// ===================================================================

class SetAutoFocus::_Internal {
 public:
};

SetAutoFocus::SetAutoFocus(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.SetAutoFocus)
}
SetAutoFocus::SetAutoFocus(
    ::google::protobuf::Arena* arena, const SetAutoFocus& from)
    : SetAutoFocus(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetAutoFocus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetAutoFocus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
SetAutoFocus::~SetAutoFocus() {
  // @@protoc_insertion_point(destructor:cmd.HeatCamera.SetAutoFocus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetAutoFocus::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetAutoFocus::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.HeatCamera.SetAutoFocus)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetAutoFocus::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetAutoFocus::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetAutoFocus_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool value = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SetAutoFocus, _impl_.value_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetAutoFocus, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool value = 1;
    {PROTOBUF_FIELD_OFFSET(SetAutoFocus, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetAutoFocus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.HeatCamera.SetAutoFocus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool value = 1;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.HeatCamera.SetAutoFocus)
  return target;
}

::size_t SetAutoFocus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.HeatCamera.SetAutoFocus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool value = 1;
  if (this->_internal_value() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetAutoFocus::_class_data_ = {
    SetAutoFocus::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetAutoFocus::GetClassData() const {
  return &_class_data_;
}

void SetAutoFocus::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetAutoFocus*>(&to_msg);
  auto& from = static_cast<const SetAutoFocus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.HeatCamera.SetAutoFocus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value() != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetAutoFocus::CopyFrom(const SetAutoFocus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.HeatCamera.SetAutoFocus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetAutoFocus::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetAutoFocus::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetAutoFocus::InternalSwap(SetAutoFocus* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata SetAutoFocus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[34]);
}
// ===================================================================

class ResetZoom::_Internal {
 public:
};

ResetZoom::ResetZoom(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.ResetZoom)
}
ResetZoom::ResetZoom(
    ::google::protobuf::Arena* arena,
    const ResetZoom& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  ResetZoom* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.HeatCamera.ResetZoom)
}









::google::protobuf::Metadata ResetZoom::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[35]);
}
// ===================================================================

class SaveToTable::_Internal {
 public:
};

SaveToTable::SaveToTable(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.HeatCamera.SaveToTable)
}
SaveToTable::SaveToTable(
    ::google::protobuf::Arena* arena,
    const SaveToTable& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SaveToTable* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.HeatCamera.SaveToTable)
}









::google::protobuf::Metadata SaveToTable::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fheat_5fcamera_2eproto[36]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace HeatCamera
}  // namespace cmd
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
