// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jon_shared_cmd_rotary.proto

#include "jon_shared_cmd_rotary.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cmd {
namespace RotaryPlatform {

inline constexpr setUseRotaryAsCompass::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : flag_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR setUseRotaryAsCompass::setUseRotaryAsCompass(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct setUseRotaryAsCompassDefaultTypeInternal {
  PROTOBUF_CONSTEXPR setUseRotaryAsCompassDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~setUseRotaryAsCompassDefaultTypeInternal() {}
  union {
    setUseRotaryAsCompass _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 setUseRotaryAsCompassDefaultTypeInternal _setUseRotaryAsCompass_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR Stop::Stop(::_pbi::ConstantInitialized) {}
struct StopDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopDefaultTypeInternal() {}
  union {
    Stop _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopDefaultTypeInternal _Stop_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR Start::Start(::_pbi::ConstantInitialized) {}
struct StartDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartDefaultTypeInternal() {}
  union {
    Start _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartDefaultTypeInternal _Start_default_instance_;

inline constexpr SetPlatformElevation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetPlatformElevation::SetPlatformElevation(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetPlatformElevationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPlatformElevationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPlatformElevationDefaultTypeInternal() {}
  union {
    SetPlatformElevation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPlatformElevationDefaultTypeInternal _SetPlatformElevation_default_instance_;

inline constexpr SetPlatformBank::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetPlatformBank::SetPlatformBank(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetPlatformBankDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPlatformBankDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPlatformBankDefaultTypeInternal() {}
  union {
    SetPlatformBank _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPlatformBankDefaultTypeInternal _SetPlatformBank_default_instance_;

inline constexpr SetPlatformAzimuth::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetPlatformAzimuth::SetPlatformAzimuth(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetPlatformAzimuthDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetPlatformAzimuthDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetPlatformAzimuthDefaultTypeInternal() {}
  union {
    SetPlatformAzimuth _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetPlatformAzimuthDefaultTypeInternal _SetPlatformAzimuth_default_instance_;

inline constexpr SetOriginGPS::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : latitude_{0},
        longitude_{0},
        altitude_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetOriginGPS::SetOriginGPS(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetOriginGPSDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetOriginGPSDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetOriginGPSDefaultTypeInternal() {}
  union {
    SetOriginGPS _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetOriginGPSDefaultTypeInternal _SetOriginGPS_default_instance_;

inline constexpr SetMode::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : mode_{static_cast< ::ser::JonGuiDataRotaryMode >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetMode::SetMode(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetModeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetModeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetModeDefaultTypeInternal() {}
  union {
    SetMode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetModeDefaultTypeInternal _SetMode_default_instance_;

inline constexpr SetElevationValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetElevationValue::SetElevationValue(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetElevationValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetElevationValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetElevationValueDefaultTypeInternal() {}
  union {
    SetElevationValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetElevationValueDefaultTypeInternal _SetElevationValue_default_instance_;

inline constexpr SetAzimuthValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{0},
        direction_{static_cast< ::ser::JonGuiDataRotaryDirection >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetAzimuthValue::SetAzimuthValue(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetAzimuthValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetAzimuthValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetAzimuthValueDefaultTypeInternal() {}
  union {
    SetAzimuthValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetAzimuthValueDefaultTypeInternal _SetAzimuthValue_default_instance_;

inline constexpr ScanUpdateNode::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : index_{0},
        dayzoomtablevalue_{0},
        azimuth_{0},
        elevation_{0},
        linger_{0},
        speed_{0},
        heatzoomtablevalue_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ScanUpdateNode::ScanUpdateNode(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ScanUpdateNodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScanUpdateNodeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScanUpdateNodeDefaultTypeInternal() {}
  union {
    ScanUpdateNode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScanUpdateNodeDefaultTypeInternal _ScanUpdateNode_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ScanUnpause::ScanUnpause(::_pbi::ConstantInitialized) {}
struct ScanUnpauseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScanUnpauseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScanUnpauseDefaultTypeInternal() {}
  union {
    ScanUnpause _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScanUnpauseDefaultTypeInternal _ScanUnpause_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ScanStop::ScanStop(::_pbi::ConstantInitialized) {}
struct ScanStopDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScanStopDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScanStopDefaultTypeInternal() {}
  union {
    ScanStop _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScanStopDefaultTypeInternal _ScanStop_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ScanStart::ScanStart(::_pbi::ConstantInitialized) {}
struct ScanStartDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScanStartDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScanStartDefaultTypeInternal() {}
  union {
    ScanStart _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScanStartDefaultTypeInternal _ScanStart_default_instance_;

inline constexpr ScanSelectNode::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : index_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ScanSelectNode::ScanSelectNode(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ScanSelectNodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScanSelectNodeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScanSelectNodeDefaultTypeInternal() {}
  union {
    ScanSelectNode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScanSelectNodeDefaultTypeInternal _ScanSelectNode_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ScanRefreshNodeList::ScanRefreshNodeList(::_pbi::ConstantInitialized) {}
struct ScanRefreshNodeListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScanRefreshNodeListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScanRefreshNodeListDefaultTypeInternal() {}
  union {
    ScanRefreshNodeList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScanRefreshNodeListDefaultTypeInternal _ScanRefreshNodeList_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ScanPrev::ScanPrev(::_pbi::ConstantInitialized) {}
struct ScanPrevDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScanPrevDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScanPrevDefaultTypeInternal() {}
  union {
    ScanPrev _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScanPrevDefaultTypeInternal _ScanPrev_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ScanPause::ScanPause(::_pbi::ConstantInitialized) {}
struct ScanPauseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScanPauseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScanPauseDefaultTypeInternal() {}
  union {
    ScanPause _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScanPauseDefaultTypeInternal _ScanPause_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ScanNext::ScanNext(::_pbi::ConstantInitialized) {}
struct ScanNextDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScanNextDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScanNextDefaultTypeInternal() {}
  union {
    ScanNext _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScanNextDefaultTypeInternal _ScanNext_default_instance_;

inline constexpr ScanDeleteNode::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : index_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ScanDeleteNode::ScanDeleteNode(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ScanDeleteNodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScanDeleteNodeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScanDeleteNodeDefaultTypeInternal() {}
  union {
    ScanDeleteNode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScanDeleteNodeDefaultTypeInternal _ScanDeleteNode_default_instance_;

inline constexpr ScanAddNode::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : index_{0},
        dayzoomtablevalue_{0},
        azimuth_{0},
        elevation_{0},
        linger_{0},
        speed_{0},
        heatzoomtablevalue_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ScanAddNode::ScanAddNode(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ScanAddNodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScanAddNodeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScanAddNodeDefaultTypeInternal() {}
  union {
    ScanAddNode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScanAddNodeDefaultTypeInternal _ScanAddNode_default_instance_;

inline constexpr RotateToNDC::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : channel_{static_cast< ::ser::JonGuiDataVideoChannel >(0)},
        x_{0},
        y_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RotateToNDC::RotateToNDC(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RotateToNDCDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RotateToNDCDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RotateToNDCDefaultTypeInternal() {}
  union {
    RotateToNDC _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RotateToNDCDefaultTypeInternal _RotateToNDC_default_instance_;

inline constexpr RotateToGPS::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : latitude_{0},
        longitude_{0},
        altitude_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RotateToGPS::RotateToGPS(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RotateToGPSDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RotateToGPSDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RotateToGPSDefaultTypeInternal() {}
  union {
    RotateToGPS _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RotateToGPSDefaultTypeInternal _RotateToGPS_default_instance_;

inline constexpr RotateElevationTo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : target_value_{0},
        speed_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RotateElevationTo::RotateElevationTo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RotateElevationToDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RotateElevationToDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RotateElevationToDefaultTypeInternal() {}
  union {
    RotateElevationTo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RotateElevationToDefaultTypeInternal _RotateElevationTo_default_instance_;

inline constexpr RotateElevationRelativeSet::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{0},
        direction_{static_cast< ::ser::JonGuiDataRotaryDirection >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RotateElevationRelativeSet::RotateElevationRelativeSet(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RotateElevationRelativeSetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RotateElevationRelativeSetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RotateElevationRelativeSetDefaultTypeInternal() {}
  union {
    RotateElevationRelativeSet _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RotateElevationRelativeSetDefaultTypeInternal _RotateElevationRelativeSet_default_instance_;

inline constexpr RotateElevationRelative::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{0},
        speed_{0},
        direction_{static_cast< ::ser::JonGuiDataRotaryDirection >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RotateElevationRelative::RotateElevationRelative(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RotateElevationRelativeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RotateElevationRelativeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RotateElevationRelativeDefaultTypeInternal() {}
  union {
    RotateElevationRelative _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RotateElevationRelativeDefaultTypeInternal _RotateElevationRelative_default_instance_;

inline constexpr RotateElevation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : speed_{0},
        direction_{static_cast< ::ser::JonGuiDataRotaryDirection >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RotateElevation::RotateElevation(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RotateElevationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RotateElevationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RotateElevationDefaultTypeInternal() {}
  union {
    RotateElevation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RotateElevationDefaultTypeInternal _RotateElevation_default_instance_;

inline constexpr RotateAzimuthTo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : target_value_{0},
        speed_{0},
        direction_{static_cast< ::ser::JonGuiDataRotaryDirection >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RotateAzimuthTo::RotateAzimuthTo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RotateAzimuthToDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RotateAzimuthToDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RotateAzimuthToDefaultTypeInternal() {}
  union {
    RotateAzimuthTo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RotateAzimuthToDefaultTypeInternal _RotateAzimuthTo_default_instance_;

inline constexpr RotateAzimuthRelativeSet::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{0},
        direction_{static_cast< ::ser::JonGuiDataRotaryDirection >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RotateAzimuthRelativeSet::RotateAzimuthRelativeSet(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RotateAzimuthRelativeSetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RotateAzimuthRelativeSetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RotateAzimuthRelativeSetDefaultTypeInternal() {}
  union {
    RotateAzimuthRelativeSet _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RotateAzimuthRelativeSetDefaultTypeInternal _RotateAzimuthRelativeSet_default_instance_;

inline constexpr RotateAzimuthRelative::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{0},
        speed_{0},
        direction_{static_cast< ::ser::JonGuiDataRotaryDirection >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RotateAzimuthRelative::RotateAzimuthRelative(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RotateAzimuthRelativeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RotateAzimuthRelativeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RotateAzimuthRelativeDefaultTypeInternal() {}
  union {
    RotateAzimuthRelative _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RotateAzimuthRelativeDefaultTypeInternal _RotateAzimuthRelative_default_instance_;

inline constexpr RotateAzimuth::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : speed_{0},
        direction_{static_cast< ::ser::JonGuiDataRotaryDirection >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RotateAzimuth::RotateAzimuth(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RotateAzimuthDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RotateAzimuthDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RotateAzimuthDefaultTypeInternal() {}
  union {
    RotateAzimuth _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RotateAzimuthDefaultTypeInternal _RotateAzimuth_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR HaltElevation::HaltElevation(::_pbi::ConstantInitialized) {}
struct HaltElevationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HaltElevationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HaltElevationDefaultTypeInternal() {}
  union {
    HaltElevation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HaltElevationDefaultTypeInternal _HaltElevation_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR HaltAzimuth::HaltAzimuth(::_pbi::ConstantInitialized) {}
struct HaltAzimuthDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HaltAzimuthDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HaltAzimuthDefaultTypeInternal() {}
  union {
    HaltAzimuth _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HaltAzimuthDefaultTypeInternal _HaltAzimuth_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR Halt::Halt(::_pbi::ConstantInitialized) {}
struct HaltDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HaltDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HaltDefaultTypeInternal() {}
  union {
    Halt _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HaltDefaultTypeInternal _Halt_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR GetMeteo::GetMeteo(::_pbi::ConstantInitialized) {}
struct GetMeteoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetMeteoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetMeteoDefaultTypeInternal() {}
  union {
    GetMeteo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetMeteoDefaultTypeInternal _GetMeteo_default_instance_;

inline constexpr Elevation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Elevation::Elevation(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ElevationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ElevationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ElevationDefaultTypeInternal() {}
  union {
    Elevation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ElevationDefaultTypeInternal _Elevation_default_instance_;

inline constexpr Azimuth::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Azimuth::Azimuth(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AzimuthDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AzimuthDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AzimuthDefaultTypeInternal() {}
  union {
    Azimuth _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AzimuthDefaultTypeInternal _Azimuth_default_instance_;

inline constexpr Axis::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        azimuth_{nullptr},
        elevation_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Axis::Axis(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AxisDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AxisDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AxisDefaultTypeInternal() {}
  union {
    Axis _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AxisDefaultTypeInternal _Axis_default_instance_;

inline constexpr Root::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Root::Root(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RootDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RootDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RootDefaultTypeInternal() {}
  union {
    Root _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RootDefaultTypeInternal _Root_default_instance_;
}  // namespace RotaryPlatform
}  // namespace cmd
static ::_pb::Metadata file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[39];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_jon_5fshared_5fcmd_5frotary_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_jon_5fshared_5fcmd_5frotary_2eproto = nullptr;
const ::uint32_t TableStruct_jon_5fshared_5fcmd_5frotary_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::Root, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::Root, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::Root, _impl_.cmd_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::Axis, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::Axis, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::Axis, _impl_.azimuth_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::Axis, _impl_.elevation_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::SetMode, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::SetMode, _impl_.mode_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::SetAzimuthValue, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::SetAzimuthValue, _impl_.value_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::SetAzimuthValue, _impl_.direction_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateAzimuthTo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateAzimuthTo, _impl_.target_value_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateAzimuthTo, _impl_.speed_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateAzimuthTo, _impl_.direction_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateAzimuth, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateAzimuth, _impl_.speed_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateAzimuth, _impl_.direction_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateElevation, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateElevation, _impl_.speed_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateElevation, _impl_.direction_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::SetElevationValue, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::SetElevationValue, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateElevationTo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateElevationTo, _impl_.target_value_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateElevationTo, _impl_.speed_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateElevationRelative, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateElevationRelative, _impl_.value_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateElevationRelative, _impl_.speed_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateElevationRelative, _impl_.direction_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateElevationRelativeSet, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateElevationRelativeSet, _impl_.value_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateElevationRelativeSet, _impl_.direction_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateAzimuthRelative, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateAzimuthRelative, _impl_.value_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateAzimuthRelative, _impl_.speed_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateAzimuthRelative, _impl_.direction_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateAzimuthRelativeSet, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateAzimuthRelativeSet, _impl_.value_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateAzimuthRelativeSet, _impl_.direction_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::SetPlatformAzimuth, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::SetPlatformAzimuth, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::SetPlatformElevation, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::SetPlatformElevation, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::SetPlatformBank, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::SetPlatformBank, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::GetMeteo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::Azimuth, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::Azimuth, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::Azimuth, _impl_.cmd_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::Start, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::Stop, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::Halt, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::ScanStart, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::ScanStop, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::ScanPause, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::ScanUnpause, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::HaltAzimuth, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::HaltElevation, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::ScanPrev, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::ScanNext, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::ScanRefreshNodeList, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::ScanSelectNode, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::ScanSelectNode, _impl_.index_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::ScanDeleteNode, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::ScanDeleteNode, _impl_.index_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::ScanUpdateNode, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::ScanUpdateNode, _impl_.index_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::ScanUpdateNode, _impl_.dayzoomtablevalue_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::ScanUpdateNode, _impl_.heatzoomtablevalue_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::ScanUpdateNode, _impl_.azimuth_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::ScanUpdateNode, _impl_.elevation_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::ScanUpdateNode, _impl_.linger_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::ScanUpdateNode, _impl_.speed_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::ScanAddNode, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::ScanAddNode, _impl_.index_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::ScanAddNode, _impl_.dayzoomtablevalue_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::ScanAddNode, _impl_.heatzoomtablevalue_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::ScanAddNode, _impl_.azimuth_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::ScanAddNode, _impl_.elevation_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::ScanAddNode, _impl_.linger_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::ScanAddNode, _impl_.speed_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::Elevation, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::Elevation, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::Elevation, _impl_.cmd_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::setUseRotaryAsCompass, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::setUseRotaryAsCompass, _impl_.flag_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateToGPS, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateToGPS, _impl_.latitude_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateToGPS, _impl_.longitude_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateToGPS, _impl_.altitude_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::SetOriginGPS, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::SetOriginGPS, _impl_.latitude_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::SetOriginGPS, _impl_.longitude_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::SetOriginGPS, _impl_.altitude_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateToNDC, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateToNDC, _impl_.channel_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateToNDC, _impl_.x_),
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::RotateToNDC, _impl_.y_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::cmd::RotaryPlatform::Root)},
        {33, 43, -1, sizeof(::cmd::RotaryPlatform::Axis)},
        {45, -1, -1, sizeof(::cmd::RotaryPlatform::SetMode)},
        {54, -1, -1, sizeof(::cmd::RotaryPlatform::SetAzimuthValue)},
        {64, -1, -1, sizeof(::cmd::RotaryPlatform::RotateAzimuthTo)},
        {75, -1, -1, sizeof(::cmd::RotaryPlatform::RotateAzimuth)},
        {85, -1, -1, sizeof(::cmd::RotaryPlatform::RotateElevation)},
        {95, -1, -1, sizeof(::cmd::RotaryPlatform::SetElevationValue)},
        {104, -1, -1, sizeof(::cmd::RotaryPlatform::RotateElevationTo)},
        {114, -1, -1, sizeof(::cmd::RotaryPlatform::RotateElevationRelative)},
        {125, -1, -1, sizeof(::cmd::RotaryPlatform::RotateElevationRelativeSet)},
        {135, -1, -1, sizeof(::cmd::RotaryPlatform::RotateAzimuthRelative)},
        {146, -1, -1, sizeof(::cmd::RotaryPlatform::RotateAzimuthRelativeSet)},
        {156, -1, -1, sizeof(::cmd::RotaryPlatform::SetPlatformAzimuth)},
        {165, -1, -1, sizeof(::cmd::RotaryPlatform::SetPlatformElevation)},
        {174, -1, -1, sizeof(::cmd::RotaryPlatform::SetPlatformBank)},
        {183, -1, -1, sizeof(::cmd::RotaryPlatform::GetMeteo)},
        {191, -1, -1, sizeof(::cmd::RotaryPlatform::Azimuth)},
        {206, -1, -1, sizeof(::cmd::RotaryPlatform::Start)},
        {214, -1, -1, sizeof(::cmd::RotaryPlatform::Stop)},
        {222, -1, -1, sizeof(::cmd::RotaryPlatform::Halt)},
        {230, -1, -1, sizeof(::cmd::RotaryPlatform::ScanStart)},
        {238, -1, -1, sizeof(::cmd::RotaryPlatform::ScanStop)},
        {246, -1, -1, sizeof(::cmd::RotaryPlatform::ScanPause)},
        {254, -1, -1, sizeof(::cmd::RotaryPlatform::ScanUnpause)},
        {262, -1, -1, sizeof(::cmd::RotaryPlatform::HaltAzimuth)},
        {270, -1, -1, sizeof(::cmd::RotaryPlatform::HaltElevation)},
        {278, -1, -1, sizeof(::cmd::RotaryPlatform::ScanPrev)},
        {286, -1, -1, sizeof(::cmd::RotaryPlatform::ScanNext)},
        {294, -1, -1, sizeof(::cmd::RotaryPlatform::ScanRefreshNodeList)},
        {302, -1, -1, sizeof(::cmd::RotaryPlatform::ScanSelectNode)},
        {311, -1, -1, sizeof(::cmd::RotaryPlatform::ScanDeleteNode)},
        {320, -1, -1, sizeof(::cmd::RotaryPlatform::ScanUpdateNode)},
        {335, -1, -1, sizeof(::cmd::RotaryPlatform::ScanAddNode)},
        {350, -1, -1, sizeof(::cmd::RotaryPlatform::Elevation)},
        {365, -1, -1, sizeof(::cmd::RotaryPlatform::setUseRotaryAsCompass)},
        {374, -1, -1, sizeof(::cmd::RotaryPlatform::RotateToGPS)},
        {385, -1, -1, sizeof(::cmd::RotaryPlatform::SetOriginGPS)},
        {396, -1, -1, sizeof(::cmd::RotaryPlatform::RotateToNDC)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::cmd::RotaryPlatform::_Root_default_instance_._instance,
    &::cmd::RotaryPlatform::_Axis_default_instance_._instance,
    &::cmd::RotaryPlatform::_SetMode_default_instance_._instance,
    &::cmd::RotaryPlatform::_SetAzimuthValue_default_instance_._instance,
    &::cmd::RotaryPlatform::_RotateAzimuthTo_default_instance_._instance,
    &::cmd::RotaryPlatform::_RotateAzimuth_default_instance_._instance,
    &::cmd::RotaryPlatform::_RotateElevation_default_instance_._instance,
    &::cmd::RotaryPlatform::_SetElevationValue_default_instance_._instance,
    &::cmd::RotaryPlatform::_RotateElevationTo_default_instance_._instance,
    &::cmd::RotaryPlatform::_RotateElevationRelative_default_instance_._instance,
    &::cmd::RotaryPlatform::_RotateElevationRelativeSet_default_instance_._instance,
    &::cmd::RotaryPlatform::_RotateAzimuthRelative_default_instance_._instance,
    &::cmd::RotaryPlatform::_RotateAzimuthRelativeSet_default_instance_._instance,
    &::cmd::RotaryPlatform::_SetPlatformAzimuth_default_instance_._instance,
    &::cmd::RotaryPlatform::_SetPlatformElevation_default_instance_._instance,
    &::cmd::RotaryPlatform::_SetPlatformBank_default_instance_._instance,
    &::cmd::RotaryPlatform::_GetMeteo_default_instance_._instance,
    &::cmd::RotaryPlatform::_Azimuth_default_instance_._instance,
    &::cmd::RotaryPlatform::_Start_default_instance_._instance,
    &::cmd::RotaryPlatform::_Stop_default_instance_._instance,
    &::cmd::RotaryPlatform::_Halt_default_instance_._instance,
    &::cmd::RotaryPlatform::_ScanStart_default_instance_._instance,
    &::cmd::RotaryPlatform::_ScanStop_default_instance_._instance,
    &::cmd::RotaryPlatform::_ScanPause_default_instance_._instance,
    &::cmd::RotaryPlatform::_ScanUnpause_default_instance_._instance,
    &::cmd::RotaryPlatform::_HaltAzimuth_default_instance_._instance,
    &::cmd::RotaryPlatform::_HaltElevation_default_instance_._instance,
    &::cmd::RotaryPlatform::_ScanPrev_default_instance_._instance,
    &::cmd::RotaryPlatform::_ScanNext_default_instance_._instance,
    &::cmd::RotaryPlatform::_ScanRefreshNodeList_default_instance_._instance,
    &::cmd::RotaryPlatform::_ScanSelectNode_default_instance_._instance,
    &::cmd::RotaryPlatform::_ScanDeleteNode_default_instance_._instance,
    &::cmd::RotaryPlatform::_ScanUpdateNode_default_instance_._instance,
    &::cmd::RotaryPlatform::_ScanAddNode_default_instance_._instance,
    &::cmd::RotaryPlatform::_Elevation_default_instance_._instance,
    &::cmd::RotaryPlatform::_setUseRotaryAsCompass_default_instance_._instance,
    &::cmd::RotaryPlatform::_RotateToGPS_default_instance_._instance,
    &::cmd::RotaryPlatform::_SetOriginGPS_default_instance_._instance,
    &::cmd::RotaryPlatform::_RotateToNDC_default_instance_._instance,
};
const char descriptor_table_protodef_jon_5fshared_5fcmd_5frotary_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\033jon_shared_cmd_rotary.proto\022\022cmd.Rotar"
    "yPlatform\032\033jon_shared_data_types.proto\"\362"
    "\n\n\004Root\022*\n\005start\030\001 \001(\0132\031.cmd.RotaryPlatf"
    "orm.StartH\000\022(\n\004stop\030\002 \001(\0132\030.cmd.RotaryPl"
    "atform.StopH\000\022(\n\004axis\030\003 \001(\0132\030.cmd.Rotary"
    "Platform.AxisH\000\022F\n\024set_platform_azimuth\030"
    "\004 \001(\0132&.cmd.RotaryPlatform.SetPlatformAz"
    "imuthH\000\022J\n\026set_platform_elevation\030\005 \001(\0132"
    "(.cmd.RotaryPlatform.SetPlatformElevatio"
    "nH\000\022@\n\021set_platform_bank\030\006 \001(\0132#.cmd.Rot"
    "aryPlatform.SetPlatformBankH\000\022(\n\004halt\030\007 "
    "\001(\0132\030.cmd.RotaryPlatform.HaltH\000\022N\n\031set_u"
    "se_rotary_as_compass\030\010 \001(\0132).cmd.RotaryP"
    "latform.setUseRotaryAsCompassH\000\0228\n\rrotat"
    "e_to_gps\030\t \001(\0132\037.cmd.RotaryPlatform.Rota"
    "teToGPSH\000\022:\n\016set_origin_gps\030\n \001(\0132 .cmd."
    "RotaryPlatform.SetOriginGPSH\000\022/\n\010set_mod"
    "e\030\013 \001(\0132\033.cmd.RotaryPlatform.SetModeH\000\0228"
    "\n\rrotate_to_ndc\030\014 \001(\0132\037.cmd.RotaryPlatfo"
    "rm.RotateToNDCH\000\0223\n\nscan_start\030\r \001(\0132\035.c"
    "md.RotaryPlatform.ScanStartH\000\0221\n\tscan_st"
    "op\030\016 \001(\0132\034.cmd.RotaryPlatform.ScanStopH\000"
    "\0223\n\nscan_pause\030\017 \001(\0132\035.cmd.RotaryPlatfor"
    "m.ScanPauseH\000\0227\n\014scan_unpause\030\020 \001(\0132\037.cm"
    "d.RotaryPlatform.ScanUnpauseH\000\0221\n\tget_me"
    "teo\030\021 \001(\0132\034.cmd.RotaryPlatform.GetMeteoH"
    "\000\0221\n\tscan_prev\030\022 \001(\0132\034.cmd.RotaryPlatfor"
    "m.ScanPrevH\000\0221\n\tscan_next\030\023 \001(\0132\034.cmd.Ro"
    "taryPlatform.ScanNextH\000\022I\n\026scan_refresh_"
    "node_list\030\024 \001(\0132\'.cmd.RotaryPlatform.Sca"
    "nRefreshNodeListH\000\022>\n\020scan_select_node\030\025"
    " \001(\0132\".cmd.RotaryPlatform.ScanSelectNode"
    "H\000\022>\n\020scan_delete_node\030\026 \001(\0132\".cmd.Rotar"
    "yPlatform.ScanDeleteNodeH\000\022>\n\020scan_updat"
    "e_node\030\027 \001(\0132\".cmd.RotaryPlatform.ScanUp"
    "dateNodeH\000\0228\n\rscan_add_node\030\030 \001(\0132\037.cmd."
    "RotaryPlatform.ScanAddNodeH\000B\005\n\003cmd\"f\n\004A"
    "xis\022,\n\007azimuth\030\001 \001(\0132\033.cmd.RotaryPlatfor"
    "m.Azimuth\0220\n\televation\030\002 \001(\0132\035.cmd.Rotar"
    "yPlatform.Elevation\"2\n\007SetMode\022\'\n\004mode\030\001"
    " \001(\0162\031.ser.JonGuiDataRotaryMode\"S\n\017SetAz"
    "imuthValue\022\r\n\005value\030\001 \001(\002\0221\n\tdirection\030\002"
    " \001(\0162\036.ser.JonGuiDataRotaryDirection\"i\n\017"
    "RotateAzimuthTo\022\024\n\014target_value\030\001 \001(\002\022\r\n"
    "\005speed\030\002 \001(\002\0221\n\tdirection\030\003 \001(\0162\036.ser.Jo"
    "nGuiDataRotaryDirection\"Q\n\rRotateAzimuth"
    "\022\r\n\005speed\030\001 \001(\002\0221\n\tdirection\030\002 \001(\0162\036.ser"
    ".JonGuiDataRotaryDirection\"S\n\017RotateElev"
    "ation\022\r\n\005speed\030\001 \001(\002\0221\n\tdirection\030\002 \001(\0162"
    "\036.ser.JonGuiDataRotaryDirection\"\"\n\021SetEl"
    "evationValue\022\r\n\005value\030\001 \001(\002\"8\n\021RotateEle"
    "vationTo\022\024\n\014target_value\030\001 \001(\002\022\r\n\005speed\030"
    "\002 \001(\002\"j\n\027RotateElevationRelative\022\r\n\005valu"
    "e\030\001 \001(\002\022\r\n\005speed\030\002 \001(\002\0221\n\tdirection\030\003 \001("
    "\0162\036.ser.JonGuiDataRotaryDirection\"^\n\032Rot"
    "ateElevationRelativeSet\022\r\n\005value\030\001 \001(\002\0221"
    "\n\tdirection\030\002 \001(\0162\036.ser.JonGuiDataRotary"
    "Direction\"h\n\025RotateAzimuthRelative\022\r\n\005va"
    "lue\030\001 \001(\002\022\r\n\005speed\030\002 \001(\002\0221\n\tdirection\030\003 "
    "\001(\0162\036.ser.JonGuiDataRotaryDirection\"\\\n\030R"
    "otateAzimuthRelativeSet\022\r\n\005value\030\001 \001(\002\0221"
    "\n\tdirection\030\002 \001(\0162\036.ser.JonGuiDataRotary"
    "Direction\"#\n\022SetPlatformAzimuth\022\r\n\005value"
    "\030\001 \001(\002\"%\n\024SetPlatformElevation\022\r\n\005value\030"
    "\001 \001(\002\" \n\017SetPlatformBank\022\r\n\005value\030\001 \001(\002\""
    "\n\n\010GetMeteo\"\357\002\n\007Azimuth\0228\n\tset_value\030\001 \001"
    "(\0132#.cmd.RotaryPlatform.SetAzimuthValueH"
    "\000\0228\n\trotate_to\030\002 \001(\0132#.cmd.RotaryPlatfor"
    "m.RotateAzimuthToH\000\0223\n\006rotate\030\003 \001(\0132!.cm"
    "d.RotaryPlatform.RotateAzimuthH\000\022=\n\010rela"
    "tive\030\004 \001(\0132).cmd.RotaryPlatform.RotateAz"
    "imuthRelativeH\000\022D\n\014relative_set\030\005 \001(\0132,."
    "cmd.RotaryPlatform.RotateAzimuthRelative"
    "SetH\000\022/\n\004halt\030\006 \001(\0132\037.cmd.RotaryPlatform"
    ".HaltAzimuthH\000B\005\n\003cmd\"\007\n\005Start\"\006\n\004Stop\"\006"
    "\n\004Halt\"\013\n\tScanStart\"\n\n\010ScanStop\"\013\n\tScanP"
    "ause\"\r\n\013ScanUnpause\"\r\n\013HaltAzimuth\"\017\n\rHa"
    "ltElevation\"\n\n\010ScanPrev\"\n\n\010ScanNext\"\025\n\023S"
    "canRefreshNodeList\"\037\n\016ScanSelectNode\022\r\n\005"
    "index\030\001 \001(\005\"\037\n\016ScanDeleteNode\022\r\n\005index\030\001"
    " \001(\005\"\231\001\n\016ScanUpdateNode\022\r\n\005index\030\001 \001(\005\022\031"
    "\n\021DayZoomTableValue\030\002 \001(\005\022\032\n\022HeatZoomTab"
    "leValue\030\003 \001(\005\022\017\n\007azimuth\030\004 \001(\001\022\021\n\televat"
    "ion\030\005 \001(\001\022\016\n\006linger\030\006 \001(\001\022\r\n\005speed\030\007 \001(\001"
    "\"\226\001\n\013ScanAddNode\022\r\n\005index\030\001 \001(\005\022\031\n\021DayZo"
    "omTableValue\030\002 \001(\005\022\032\n\022HeatZoomTableValue"
    "\030\003 \001(\005\022\017\n\007azimuth\030\004 \001(\001\022\021\n\televation\030\005 \001"
    "(\001\022\016\n\006linger\030\006 \001(\001\022\r\n\005speed\030\007 \001(\001\"\375\002\n\tEl"
    "evation\022:\n\tset_value\030\001 \001(\0132%.cmd.RotaryP"
    "latform.SetElevationValueH\000\022:\n\trotate_to"
    "\030\002 \001(\0132%.cmd.RotaryPlatform.RotateElevat"
    "ionToH\000\0225\n\006rotate\030\003 \001(\0132#.cmd.RotaryPlat"
    "form.RotateElevationH\000\022\?\n\010relative\030\004 \001(\013"
    "2+.cmd.RotaryPlatform.RotateElevationRel"
    "ativeH\000\022F\n\014relative_set\030\005 \001(\0132..cmd.Rota"
    "ryPlatform.RotateElevationRelativeSetH\000\022"
    "1\n\004halt\030\006 \001(\0132!.cmd.RotaryPlatform.HaltE"
    "levationH\000B\005\n\003cmd\"%\n\025setUseRotaryAsCompa"
    "ss\022\014\n\004flag\030\001 \001(\010\"D\n\013RotateToGPS\022\020\n\010latit"
    "ude\030\001 \001(\002\022\021\n\tlongitude\030\002 \001(\002\022\020\n\010altitude"
    "\030\003 \001(\002\"E\n\014SetOriginGPS\022\020\n\010latitude\030\001 \001(\002"
    "\022\021\n\tlongitude\030\002 \001(\002\022\020\n\010altitude\030\003 \001(\002\"Q\n"
    "\013RotateToNDC\022,\n\007channel\030\001 \001(\0162\033.ser.JonG"
    "uiDataVideoChannel\022\t\n\001x\030\002 \001(\002\022\t\n\001y\030\003 \001(\002"
    "BMZKgit-codecommit.eu-central-1.amazonaw"
    "s.com/v1/repos/jettison/jonp/cmd/rotaryb"
    "\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_deps[1] =
    {
        &::descriptor_table_jon_5fshared_5fdata_5ftypes_2eproto,
};
static ::absl::once_flag descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto = {
    false,
    false,
    4247,
    descriptor_table_protodef_jon_5fshared_5fcmd_5frotary_2eproto,
    "jon_shared_cmd_rotary.proto",
    &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
    descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_deps,
    1,
    39,
    schemas,
    file_default_instances,
    TableStruct_jon_5fshared_5fcmd_5frotary_2eproto::offsets,
    file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto,
    file_level_enum_descriptors_jon_5fshared_5fcmd_5frotary_2eproto,
    file_level_service_descriptors_jon_5fshared_5fcmd_5frotary_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter() {
  return &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_jon_5fshared_5fcmd_5frotary_2eproto(&descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto);
namespace cmd {
namespace RotaryPlatform {
// ===================================================================

class Root::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::Root, _impl_._oneof_case_);
  static const ::cmd::RotaryPlatform::Start& start(const Root* msg);
  static const ::cmd::RotaryPlatform::Stop& stop(const Root* msg);
  static const ::cmd::RotaryPlatform::Axis& axis(const Root* msg);
  static const ::cmd::RotaryPlatform::SetPlatformAzimuth& set_platform_azimuth(const Root* msg);
  static const ::cmd::RotaryPlatform::SetPlatformElevation& set_platform_elevation(const Root* msg);
  static const ::cmd::RotaryPlatform::SetPlatformBank& set_platform_bank(const Root* msg);
  static const ::cmd::RotaryPlatform::Halt& halt(const Root* msg);
  static const ::cmd::RotaryPlatform::setUseRotaryAsCompass& set_use_rotary_as_compass(const Root* msg);
  static const ::cmd::RotaryPlatform::RotateToGPS& rotate_to_gps(const Root* msg);
  static const ::cmd::RotaryPlatform::SetOriginGPS& set_origin_gps(const Root* msg);
  static const ::cmd::RotaryPlatform::SetMode& set_mode(const Root* msg);
  static const ::cmd::RotaryPlatform::RotateToNDC& rotate_to_ndc(const Root* msg);
  static const ::cmd::RotaryPlatform::ScanStart& scan_start(const Root* msg);
  static const ::cmd::RotaryPlatform::ScanStop& scan_stop(const Root* msg);
  static const ::cmd::RotaryPlatform::ScanPause& scan_pause(const Root* msg);
  static const ::cmd::RotaryPlatform::ScanUnpause& scan_unpause(const Root* msg);
  static const ::cmd::RotaryPlatform::GetMeteo& get_meteo(const Root* msg);
  static const ::cmd::RotaryPlatform::ScanPrev& scan_prev(const Root* msg);
  static const ::cmd::RotaryPlatform::ScanNext& scan_next(const Root* msg);
  static const ::cmd::RotaryPlatform::ScanRefreshNodeList& scan_refresh_node_list(const Root* msg);
  static const ::cmd::RotaryPlatform::ScanSelectNode& scan_select_node(const Root* msg);
  static const ::cmd::RotaryPlatform::ScanDeleteNode& scan_delete_node(const Root* msg);
  static const ::cmd::RotaryPlatform::ScanUpdateNode& scan_update_node(const Root* msg);
  static const ::cmd::RotaryPlatform::ScanAddNode& scan_add_node(const Root* msg);
};

const ::cmd::RotaryPlatform::Start& Root::_Internal::start(const Root* msg) {
  return *msg->_impl_.cmd_.start_;
}
const ::cmd::RotaryPlatform::Stop& Root::_Internal::stop(const Root* msg) {
  return *msg->_impl_.cmd_.stop_;
}
const ::cmd::RotaryPlatform::Axis& Root::_Internal::axis(const Root* msg) {
  return *msg->_impl_.cmd_.axis_;
}
const ::cmd::RotaryPlatform::SetPlatformAzimuth& Root::_Internal::set_platform_azimuth(const Root* msg) {
  return *msg->_impl_.cmd_.set_platform_azimuth_;
}
const ::cmd::RotaryPlatform::SetPlatformElevation& Root::_Internal::set_platform_elevation(const Root* msg) {
  return *msg->_impl_.cmd_.set_platform_elevation_;
}
const ::cmd::RotaryPlatform::SetPlatformBank& Root::_Internal::set_platform_bank(const Root* msg) {
  return *msg->_impl_.cmd_.set_platform_bank_;
}
const ::cmd::RotaryPlatform::Halt& Root::_Internal::halt(const Root* msg) {
  return *msg->_impl_.cmd_.halt_;
}
const ::cmd::RotaryPlatform::setUseRotaryAsCompass& Root::_Internal::set_use_rotary_as_compass(const Root* msg) {
  return *msg->_impl_.cmd_.set_use_rotary_as_compass_;
}
const ::cmd::RotaryPlatform::RotateToGPS& Root::_Internal::rotate_to_gps(const Root* msg) {
  return *msg->_impl_.cmd_.rotate_to_gps_;
}
const ::cmd::RotaryPlatform::SetOriginGPS& Root::_Internal::set_origin_gps(const Root* msg) {
  return *msg->_impl_.cmd_.set_origin_gps_;
}
const ::cmd::RotaryPlatform::SetMode& Root::_Internal::set_mode(const Root* msg) {
  return *msg->_impl_.cmd_.set_mode_;
}
const ::cmd::RotaryPlatform::RotateToNDC& Root::_Internal::rotate_to_ndc(const Root* msg) {
  return *msg->_impl_.cmd_.rotate_to_ndc_;
}
const ::cmd::RotaryPlatform::ScanStart& Root::_Internal::scan_start(const Root* msg) {
  return *msg->_impl_.cmd_.scan_start_;
}
const ::cmd::RotaryPlatform::ScanStop& Root::_Internal::scan_stop(const Root* msg) {
  return *msg->_impl_.cmd_.scan_stop_;
}
const ::cmd::RotaryPlatform::ScanPause& Root::_Internal::scan_pause(const Root* msg) {
  return *msg->_impl_.cmd_.scan_pause_;
}
const ::cmd::RotaryPlatform::ScanUnpause& Root::_Internal::scan_unpause(const Root* msg) {
  return *msg->_impl_.cmd_.scan_unpause_;
}
const ::cmd::RotaryPlatform::GetMeteo& Root::_Internal::get_meteo(const Root* msg) {
  return *msg->_impl_.cmd_.get_meteo_;
}
const ::cmd::RotaryPlatform::ScanPrev& Root::_Internal::scan_prev(const Root* msg) {
  return *msg->_impl_.cmd_.scan_prev_;
}
const ::cmd::RotaryPlatform::ScanNext& Root::_Internal::scan_next(const Root* msg) {
  return *msg->_impl_.cmd_.scan_next_;
}
const ::cmd::RotaryPlatform::ScanRefreshNodeList& Root::_Internal::scan_refresh_node_list(const Root* msg) {
  return *msg->_impl_.cmd_.scan_refresh_node_list_;
}
const ::cmd::RotaryPlatform::ScanSelectNode& Root::_Internal::scan_select_node(const Root* msg) {
  return *msg->_impl_.cmd_.scan_select_node_;
}
const ::cmd::RotaryPlatform::ScanDeleteNode& Root::_Internal::scan_delete_node(const Root* msg) {
  return *msg->_impl_.cmd_.scan_delete_node_;
}
const ::cmd::RotaryPlatform::ScanUpdateNode& Root::_Internal::scan_update_node(const Root* msg) {
  return *msg->_impl_.cmd_.scan_update_node_;
}
const ::cmd::RotaryPlatform::ScanAddNode& Root::_Internal::scan_add_node(const Root* msg) {
  return *msg->_impl_.cmd_.scan_add_node_;
}
void Root::set_allocated_start(::cmd::RotaryPlatform::Start* start) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (start) {
    ::google::protobuf::Arena* submessage_arena = start->GetArena();
    if (message_arena != submessage_arena) {
      start = ::google::protobuf::internal::GetOwnedMessage(message_arena, start, submessage_arena);
    }
    set_has_start();
    _impl_.cmd_.start_ = start;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Root.start)
}
void Root::set_allocated_stop(::cmd::RotaryPlatform::Stop* stop) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (stop) {
    ::google::protobuf::Arena* submessage_arena = stop->GetArena();
    if (message_arena != submessage_arena) {
      stop = ::google::protobuf::internal::GetOwnedMessage(message_arena, stop, submessage_arena);
    }
    set_has_stop();
    _impl_.cmd_.stop_ = stop;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Root.stop)
}
void Root::set_allocated_axis(::cmd::RotaryPlatform::Axis* axis) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (axis) {
    ::google::protobuf::Arena* submessage_arena = axis->GetArena();
    if (message_arena != submessage_arena) {
      axis = ::google::protobuf::internal::GetOwnedMessage(message_arena, axis, submessage_arena);
    }
    set_has_axis();
    _impl_.cmd_.axis_ = axis;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Root.axis)
}
void Root::set_allocated_set_platform_azimuth(::cmd::RotaryPlatform::SetPlatformAzimuth* set_platform_azimuth) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (set_platform_azimuth) {
    ::google::protobuf::Arena* submessage_arena = set_platform_azimuth->GetArena();
    if (message_arena != submessage_arena) {
      set_platform_azimuth = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_platform_azimuth, submessage_arena);
    }
    set_has_set_platform_azimuth();
    _impl_.cmd_.set_platform_azimuth_ = set_platform_azimuth;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Root.set_platform_azimuth)
}
void Root::set_allocated_set_platform_elevation(::cmd::RotaryPlatform::SetPlatformElevation* set_platform_elevation) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (set_platform_elevation) {
    ::google::protobuf::Arena* submessage_arena = set_platform_elevation->GetArena();
    if (message_arena != submessage_arena) {
      set_platform_elevation = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_platform_elevation, submessage_arena);
    }
    set_has_set_platform_elevation();
    _impl_.cmd_.set_platform_elevation_ = set_platform_elevation;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Root.set_platform_elevation)
}
void Root::set_allocated_set_platform_bank(::cmd::RotaryPlatform::SetPlatformBank* set_platform_bank) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (set_platform_bank) {
    ::google::protobuf::Arena* submessage_arena = set_platform_bank->GetArena();
    if (message_arena != submessage_arena) {
      set_platform_bank = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_platform_bank, submessage_arena);
    }
    set_has_set_platform_bank();
    _impl_.cmd_.set_platform_bank_ = set_platform_bank;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Root.set_platform_bank)
}
void Root::set_allocated_halt(::cmd::RotaryPlatform::Halt* halt) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (halt) {
    ::google::protobuf::Arena* submessage_arena = halt->GetArena();
    if (message_arena != submessage_arena) {
      halt = ::google::protobuf::internal::GetOwnedMessage(message_arena, halt, submessage_arena);
    }
    set_has_halt();
    _impl_.cmd_.halt_ = halt;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Root.halt)
}
void Root::set_allocated_set_use_rotary_as_compass(::cmd::RotaryPlatform::setUseRotaryAsCompass* set_use_rotary_as_compass) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (set_use_rotary_as_compass) {
    ::google::protobuf::Arena* submessage_arena = set_use_rotary_as_compass->GetArena();
    if (message_arena != submessage_arena) {
      set_use_rotary_as_compass = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_use_rotary_as_compass, submessage_arena);
    }
    set_has_set_use_rotary_as_compass();
    _impl_.cmd_.set_use_rotary_as_compass_ = set_use_rotary_as_compass;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Root.set_use_rotary_as_compass)
}
void Root::set_allocated_rotate_to_gps(::cmd::RotaryPlatform::RotateToGPS* rotate_to_gps) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (rotate_to_gps) {
    ::google::protobuf::Arena* submessage_arena = rotate_to_gps->GetArena();
    if (message_arena != submessage_arena) {
      rotate_to_gps = ::google::protobuf::internal::GetOwnedMessage(message_arena, rotate_to_gps, submessage_arena);
    }
    set_has_rotate_to_gps();
    _impl_.cmd_.rotate_to_gps_ = rotate_to_gps;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Root.rotate_to_gps)
}
void Root::set_allocated_set_origin_gps(::cmd::RotaryPlatform::SetOriginGPS* set_origin_gps) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (set_origin_gps) {
    ::google::protobuf::Arena* submessage_arena = set_origin_gps->GetArena();
    if (message_arena != submessage_arena) {
      set_origin_gps = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_origin_gps, submessage_arena);
    }
    set_has_set_origin_gps();
    _impl_.cmd_.set_origin_gps_ = set_origin_gps;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Root.set_origin_gps)
}
void Root::set_allocated_set_mode(::cmd::RotaryPlatform::SetMode* set_mode) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (set_mode) {
    ::google::protobuf::Arena* submessage_arena = set_mode->GetArena();
    if (message_arena != submessage_arena) {
      set_mode = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_mode, submessage_arena);
    }
    set_has_set_mode();
    _impl_.cmd_.set_mode_ = set_mode;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Root.set_mode)
}
void Root::set_allocated_rotate_to_ndc(::cmd::RotaryPlatform::RotateToNDC* rotate_to_ndc) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (rotate_to_ndc) {
    ::google::protobuf::Arena* submessage_arena = rotate_to_ndc->GetArena();
    if (message_arena != submessage_arena) {
      rotate_to_ndc = ::google::protobuf::internal::GetOwnedMessage(message_arena, rotate_to_ndc, submessage_arena);
    }
    set_has_rotate_to_ndc();
    _impl_.cmd_.rotate_to_ndc_ = rotate_to_ndc;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Root.rotate_to_ndc)
}
void Root::set_allocated_scan_start(::cmd::RotaryPlatform::ScanStart* scan_start) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (scan_start) {
    ::google::protobuf::Arena* submessage_arena = scan_start->GetArena();
    if (message_arena != submessage_arena) {
      scan_start = ::google::protobuf::internal::GetOwnedMessage(message_arena, scan_start, submessage_arena);
    }
    set_has_scan_start();
    _impl_.cmd_.scan_start_ = scan_start;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Root.scan_start)
}
void Root::set_allocated_scan_stop(::cmd::RotaryPlatform::ScanStop* scan_stop) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (scan_stop) {
    ::google::protobuf::Arena* submessage_arena = scan_stop->GetArena();
    if (message_arena != submessage_arena) {
      scan_stop = ::google::protobuf::internal::GetOwnedMessage(message_arena, scan_stop, submessage_arena);
    }
    set_has_scan_stop();
    _impl_.cmd_.scan_stop_ = scan_stop;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Root.scan_stop)
}
void Root::set_allocated_scan_pause(::cmd::RotaryPlatform::ScanPause* scan_pause) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (scan_pause) {
    ::google::protobuf::Arena* submessage_arena = scan_pause->GetArena();
    if (message_arena != submessage_arena) {
      scan_pause = ::google::protobuf::internal::GetOwnedMessage(message_arena, scan_pause, submessage_arena);
    }
    set_has_scan_pause();
    _impl_.cmd_.scan_pause_ = scan_pause;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Root.scan_pause)
}
void Root::set_allocated_scan_unpause(::cmd::RotaryPlatform::ScanUnpause* scan_unpause) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (scan_unpause) {
    ::google::protobuf::Arena* submessage_arena = scan_unpause->GetArena();
    if (message_arena != submessage_arena) {
      scan_unpause = ::google::protobuf::internal::GetOwnedMessage(message_arena, scan_unpause, submessage_arena);
    }
    set_has_scan_unpause();
    _impl_.cmd_.scan_unpause_ = scan_unpause;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Root.scan_unpause)
}
void Root::set_allocated_get_meteo(::cmd::RotaryPlatform::GetMeteo* get_meteo) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (get_meteo) {
    ::google::protobuf::Arena* submessage_arena = get_meteo->GetArena();
    if (message_arena != submessage_arena) {
      get_meteo = ::google::protobuf::internal::GetOwnedMessage(message_arena, get_meteo, submessage_arena);
    }
    set_has_get_meteo();
    _impl_.cmd_.get_meteo_ = get_meteo;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Root.get_meteo)
}
void Root::set_allocated_scan_prev(::cmd::RotaryPlatform::ScanPrev* scan_prev) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (scan_prev) {
    ::google::protobuf::Arena* submessage_arena = scan_prev->GetArena();
    if (message_arena != submessage_arena) {
      scan_prev = ::google::protobuf::internal::GetOwnedMessage(message_arena, scan_prev, submessage_arena);
    }
    set_has_scan_prev();
    _impl_.cmd_.scan_prev_ = scan_prev;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Root.scan_prev)
}
void Root::set_allocated_scan_next(::cmd::RotaryPlatform::ScanNext* scan_next) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (scan_next) {
    ::google::protobuf::Arena* submessage_arena = scan_next->GetArena();
    if (message_arena != submessage_arena) {
      scan_next = ::google::protobuf::internal::GetOwnedMessage(message_arena, scan_next, submessage_arena);
    }
    set_has_scan_next();
    _impl_.cmd_.scan_next_ = scan_next;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Root.scan_next)
}
void Root::set_allocated_scan_refresh_node_list(::cmd::RotaryPlatform::ScanRefreshNodeList* scan_refresh_node_list) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (scan_refresh_node_list) {
    ::google::protobuf::Arena* submessage_arena = scan_refresh_node_list->GetArena();
    if (message_arena != submessage_arena) {
      scan_refresh_node_list = ::google::protobuf::internal::GetOwnedMessage(message_arena, scan_refresh_node_list, submessage_arena);
    }
    set_has_scan_refresh_node_list();
    _impl_.cmd_.scan_refresh_node_list_ = scan_refresh_node_list;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Root.scan_refresh_node_list)
}
void Root::set_allocated_scan_select_node(::cmd::RotaryPlatform::ScanSelectNode* scan_select_node) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (scan_select_node) {
    ::google::protobuf::Arena* submessage_arena = scan_select_node->GetArena();
    if (message_arena != submessage_arena) {
      scan_select_node = ::google::protobuf::internal::GetOwnedMessage(message_arena, scan_select_node, submessage_arena);
    }
    set_has_scan_select_node();
    _impl_.cmd_.scan_select_node_ = scan_select_node;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Root.scan_select_node)
}
void Root::set_allocated_scan_delete_node(::cmd::RotaryPlatform::ScanDeleteNode* scan_delete_node) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (scan_delete_node) {
    ::google::protobuf::Arena* submessage_arena = scan_delete_node->GetArena();
    if (message_arena != submessage_arena) {
      scan_delete_node = ::google::protobuf::internal::GetOwnedMessage(message_arena, scan_delete_node, submessage_arena);
    }
    set_has_scan_delete_node();
    _impl_.cmd_.scan_delete_node_ = scan_delete_node;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Root.scan_delete_node)
}
void Root::set_allocated_scan_update_node(::cmd::RotaryPlatform::ScanUpdateNode* scan_update_node) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (scan_update_node) {
    ::google::protobuf::Arena* submessage_arena = scan_update_node->GetArena();
    if (message_arena != submessage_arena) {
      scan_update_node = ::google::protobuf::internal::GetOwnedMessage(message_arena, scan_update_node, submessage_arena);
    }
    set_has_scan_update_node();
    _impl_.cmd_.scan_update_node_ = scan_update_node;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Root.scan_update_node)
}
void Root::set_allocated_scan_add_node(::cmd::RotaryPlatform::ScanAddNode* scan_add_node) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (scan_add_node) {
    ::google::protobuf::Arena* submessage_arena = scan_add_node->GetArena();
    if (message_arena != submessage_arena) {
      scan_add_node = ::google::protobuf::internal::GetOwnedMessage(message_arena, scan_add_node, submessage_arena);
    }
    set_has_scan_add_node();
    _impl_.cmd_.scan_add_node_ = scan_add_node;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Root.scan_add_node)
}
Root::Root(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.Root)
}
inline PROTOBUF_NDEBUG_INLINE Root::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Root::Root(
    ::google::protobuf::Arena* arena,
    const Root& from)
    : ::google::protobuf::Message(arena) {
  Root* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (cmd_case()) {
    case CMD_NOT_SET:
      break;
      case kStart:
        _impl_.cmd_.start_ = CreateMaybeMessage<::cmd::RotaryPlatform::Start>(arena, *from._impl_.cmd_.start_);
        break;
      case kStop:
        _impl_.cmd_.stop_ = CreateMaybeMessage<::cmd::RotaryPlatform::Stop>(arena, *from._impl_.cmd_.stop_);
        break;
      case kAxis:
        _impl_.cmd_.axis_ = CreateMaybeMessage<::cmd::RotaryPlatform::Axis>(arena, *from._impl_.cmd_.axis_);
        break;
      case kSetPlatformAzimuth:
        _impl_.cmd_.set_platform_azimuth_ = CreateMaybeMessage<::cmd::RotaryPlatform::SetPlatformAzimuth>(arena, *from._impl_.cmd_.set_platform_azimuth_);
        break;
      case kSetPlatformElevation:
        _impl_.cmd_.set_platform_elevation_ = CreateMaybeMessage<::cmd::RotaryPlatform::SetPlatformElevation>(arena, *from._impl_.cmd_.set_platform_elevation_);
        break;
      case kSetPlatformBank:
        _impl_.cmd_.set_platform_bank_ = CreateMaybeMessage<::cmd::RotaryPlatform::SetPlatformBank>(arena, *from._impl_.cmd_.set_platform_bank_);
        break;
      case kHalt:
        _impl_.cmd_.halt_ = CreateMaybeMessage<::cmd::RotaryPlatform::Halt>(arena, *from._impl_.cmd_.halt_);
        break;
      case kSetUseRotaryAsCompass:
        _impl_.cmd_.set_use_rotary_as_compass_ = CreateMaybeMessage<::cmd::RotaryPlatform::setUseRotaryAsCompass>(arena, *from._impl_.cmd_.set_use_rotary_as_compass_);
        break;
      case kRotateToGps:
        _impl_.cmd_.rotate_to_gps_ = CreateMaybeMessage<::cmd::RotaryPlatform::RotateToGPS>(arena, *from._impl_.cmd_.rotate_to_gps_);
        break;
      case kSetOriginGps:
        _impl_.cmd_.set_origin_gps_ = CreateMaybeMessage<::cmd::RotaryPlatform::SetOriginGPS>(arena, *from._impl_.cmd_.set_origin_gps_);
        break;
      case kSetMode:
        _impl_.cmd_.set_mode_ = CreateMaybeMessage<::cmd::RotaryPlatform::SetMode>(arena, *from._impl_.cmd_.set_mode_);
        break;
      case kRotateToNdc:
        _impl_.cmd_.rotate_to_ndc_ = CreateMaybeMessage<::cmd::RotaryPlatform::RotateToNDC>(arena, *from._impl_.cmd_.rotate_to_ndc_);
        break;
      case kScanStart:
        _impl_.cmd_.scan_start_ = CreateMaybeMessage<::cmd::RotaryPlatform::ScanStart>(arena, *from._impl_.cmd_.scan_start_);
        break;
      case kScanStop:
        _impl_.cmd_.scan_stop_ = CreateMaybeMessage<::cmd::RotaryPlatform::ScanStop>(arena, *from._impl_.cmd_.scan_stop_);
        break;
      case kScanPause:
        _impl_.cmd_.scan_pause_ = CreateMaybeMessage<::cmd::RotaryPlatform::ScanPause>(arena, *from._impl_.cmd_.scan_pause_);
        break;
      case kScanUnpause:
        _impl_.cmd_.scan_unpause_ = CreateMaybeMessage<::cmd::RotaryPlatform::ScanUnpause>(arena, *from._impl_.cmd_.scan_unpause_);
        break;
      case kGetMeteo:
        _impl_.cmd_.get_meteo_ = CreateMaybeMessage<::cmd::RotaryPlatform::GetMeteo>(arena, *from._impl_.cmd_.get_meteo_);
        break;
      case kScanPrev:
        _impl_.cmd_.scan_prev_ = CreateMaybeMessage<::cmd::RotaryPlatform::ScanPrev>(arena, *from._impl_.cmd_.scan_prev_);
        break;
      case kScanNext:
        _impl_.cmd_.scan_next_ = CreateMaybeMessage<::cmd::RotaryPlatform::ScanNext>(arena, *from._impl_.cmd_.scan_next_);
        break;
      case kScanRefreshNodeList:
        _impl_.cmd_.scan_refresh_node_list_ = CreateMaybeMessage<::cmd::RotaryPlatform::ScanRefreshNodeList>(arena, *from._impl_.cmd_.scan_refresh_node_list_);
        break;
      case kScanSelectNode:
        _impl_.cmd_.scan_select_node_ = CreateMaybeMessage<::cmd::RotaryPlatform::ScanSelectNode>(arena, *from._impl_.cmd_.scan_select_node_);
        break;
      case kScanDeleteNode:
        _impl_.cmd_.scan_delete_node_ = CreateMaybeMessage<::cmd::RotaryPlatform::ScanDeleteNode>(arena, *from._impl_.cmd_.scan_delete_node_);
        break;
      case kScanUpdateNode:
        _impl_.cmd_.scan_update_node_ = CreateMaybeMessage<::cmd::RotaryPlatform::ScanUpdateNode>(arena, *from._impl_.cmd_.scan_update_node_);
        break;
      case kScanAddNode:
        _impl_.cmd_.scan_add_node_ = CreateMaybeMessage<::cmd::RotaryPlatform::ScanAddNode>(arena, *from._impl_.cmd_.scan_add_node_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:cmd.RotaryPlatform.Root)
}
inline PROTOBUF_NDEBUG_INLINE Root::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Root::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Root::~Root() {
  // @@protoc_insertion_point(destructor:cmd.RotaryPlatform.Root)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Root::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_cmd()) {
    clear_cmd();
  }
  _impl_.~Impl_();
}

void Root::clear_cmd() {
// @@protoc_insertion_point(one_of_clear_start:cmd.RotaryPlatform.Root)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (cmd_case()) {
    case kStart: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.start_;
      }
      break;
    }
    case kStop: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.stop_;
      }
      break;
    }
    case kAxis: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.axis_;
      }
      break;
    }
    case kSetPlatformAzimuth: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.set_platform_azimuth_;
      }
      break;
    }
    case kSetPlatformElevation: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.set_platform_elevation_;
      }
      break;
    }
    case kSetPlatformBank: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.set_platform_bank_;
      }
      break;
    }
    case kHalt: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.halt_;
      }
      break;
    }
    case kSetUseRotaryAsCompass: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.set_use_rotary_as_compass_;
      }
      break;
    }
    case kRotateToGps: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.rotate_to_gps_;
      }
      break;
    }
    case kSetOriginGps: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.set_origin_gps_;
      }
      break;
    }
    case kSetMode: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.set_mode_;
      }
      break;
    }
    case kRotateToNdc: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.rotate_to_ndc_;
      }
      break;
    }
    case kScanStart: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.scan_start_;
      }
      break;
    }
    case kScanStop: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.scan_stop_;
      }
      break;
    }
    case kScanPause: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.scan_pause_;
      }
      break;
    }
    case kScanUnpause: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.scan_unpause_;
      }
      break;
    }
    case kGetMeteo: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.get_meteo_;
      }
      break;
    }
    case kScanPrev: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.scan_prev_;
      }
      break;
    }
    case kScanNext: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.scan_next_;
      }
      break;
    }
    case kScanRefreshNodeList: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.scan_refresh_node_list_;
      }
      break;
    }
    case kScanSelectNode: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.scan_select_node_;
      }
      break;
    }
    case kScanDeleteNode: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.scan_delete_node_;
      }
      break;
    }
    case kScanUpdateNode: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.scan_update_node_;
      }
      break;
    }
    case kScanAddNode: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.scan_add_node_;
      }
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CMD_NOT_SET;
}


PROTOBUF_NOINLINE void Root::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.RotaryPlatform.Root)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_cmd();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Root::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 24, 24, 0, 2> Root::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    24, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4278190080,  // skipmap
    offsetof(decltype(_table_), field_entries),
    24,  // num_field_entries
    24,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Root_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .cmd.RotaryPlatform.Start start = 1;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.start_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.RotaryPlatform.Stop stop = 2;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.stop_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.RotaryPlatform.Axis axis = 3;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.axis_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.RotaryPlatform.SetPlatformAzimuth set_platform_azimuth = 4;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.set_platform_azimuth_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.RotaryPlatform.SetPlatformElevation set_platform_elevation = 5;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.set_platform_elevation_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.RotaryPlatform.SetPlatformBank set_platform_bank = 6;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.set_platform_bank_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.RotaryPlatform.Halt halt = 7;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.halt_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.RotaryPlatform.setUseRotaryAsCompass set_use_rotary_as_compass = 8;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.set_use_rotary_as_compass_), _Internal::kOneofCaseOffset + 0, 7,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.RotaryPlatform.RotateToGPS rotate_to_gps = 9;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.rotate_to_gps_), _Internal::kOneofCaseOffset + 0, 8,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.RotaryPlatform.SetOriginGPS set_origin_gps = 10;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.set_origin_gps_), _Internal::kOneofCaseOffset + 0, 9,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.RotaryPlatform.SetMode set_mode = 11;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.set_mode_), _Internal::kOneofCaseOffset + 0, 10,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.RotaryPlatform.RotateToNDC rotate_to_ndc = 12;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.rotate_to_ndc_), _Internal::kOneofCaseOffset + 0, 11,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.RotaryPlatform.ScanStart scan_start = 13;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.scan_start_), _Internal::kOneofCaseOffset + 0, 12,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.RotaryPlatform.ScanStop scan_stop = 14;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.scan_stop_), _Internal::kOneofCaseOffset + 0, 13,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.RotaryPlatform.ScanPause scan_pause = 15;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.scan_pause_), _Internal::kOneofCaseOffset + 0, 14,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.RotaryPlatform.ScanUnpause scan_unpause = 16;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.scan_unpause_), _Internal::kOneofCaseOffset + 0, 15,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.RotaryPlatform.GetMeteo get_meteo = 17;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.get_meteo_), _Internal::kOneofCaseOffset + 0, 16,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.RotaryPlatform.ScanPrev scan_prev = 18;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.scan_prev_), _Internal::kOneofCaseOffset + 0, 17,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.RotaryPlatform.ScanNext scan_next = 19;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.scan_next_), _Internal::kOneofCaseOffset + 0, 18,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.RotaryPlatform.ScanRefreshNodeList scan_refresh_node_list = 20;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.scan_refresh_node_list_), _Internal::kOneofCaseOffset + 0, 19,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.RotaryPlatform.ScanSelectNode scan_select_node = 21;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.scan_select_node_), _Internal::kOneofCaseOffset + 0, 20,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.RotaryPlatform.ScanDeleteNode scan_delete_node = 22;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.scan_delete_node_), _Internal::kOneofCaseOffset + 0, 21,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.RotaryPlatform.ScanUpdateNode scan_update_node = 23;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.scan_update_node_), _Internal::kOneofCaseOffset + 0, 22,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.RotaryPlatform.ScanAddNode scan_add_node = 24;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.scan_add_node_), _Internal::kOneofCaseOffset + 0, 23,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::RotaryPlatform::_Start_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::RotaryPlatform::_Stop_default_instance_},
    {::_pbi::TcParser::GetTable<::cmd::RotaryPlatform::Axis>()},
    {::_pbi::TcParser::GetTable<::cmd::RotaryPlatform::SetPlatformAzimuth>()},
    {::_pbi::TcParser::GetTable<::cmd::RotaryPlatform::SetPlatformElevation>()},
    {::_pbi::TcParser::GetTable<::cmd::RotaryPlatform::SetPlatformBank>()},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::RotaryPlatform::_Halt_default_instance_},
    {::_pbi::TcParser::GetTable<::cmd::RotaryPlatform::setUseRotaryAsCompass>()},
    {::_pbi::TcParser::GetTable<::cmd::RotaryPlatform::RotateToGPS>()},
    {::_pbi::TcParser::GetTable<::cmd::RotaryPlatform::SetOriginGPS>()},
    {::_pbi::TcParser::GetTable<::cmd::RotaryPlatform::SetMode>()},
    {::_pbi::TcParser::GetTable<::cmd::RotaryPlatform::RotateToNDC>()},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::RotaryPlatform::_ScanStart_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::RotaryPlatform::_ScanStop_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::RotaryPlatform::_ScanPause_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::RotaryPlatform::_ScanUnpause_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::RotaryPlatform::_GetMeteo_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::RotaryPlatform::_ScanPrev_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::RotaryPlatform::_ScanNext_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::RotaryPlatform::_ScanRefreshNodeList_default_instance_},
    {::_pbi::TcParser::GetTable<::cmd::RotaryPlatform::ScanSelectNode>()},
    {::_pbi::TcParser::GetTable<::cmd::RotaryPlatform::ScanDeleteNode>()},
    {::_pbi::TcParser::GetTable<::cmd::RotaryPlatform::ScanUpdateNode>()},
    {::_pbi::TcParser::GetTable<::cmd::RotaryPlatform::ScanAddNode>()},
  }}, {{
  }},
};

::uint8_t* Root::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.RotaryPlatform.Root)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (cmd_case()) {
    case kStart: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::start(this),
          _Internal::start(this).GetCachedSize(), target, stream);
      break;
    }
    case kStop: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::stop(this),
          _Internal::stop(this).GetCachedSize(), target, stream);
      break;
    }
    case kAxis: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::axis(this),
          _Internal::axis(this).GetCachedSize(), target, stream);
      break;
    }
    case kSetPlatformAzimuth: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, _Internal::set_platform_azimuth(this),
          _Internal::set_platform_azimuth(this).GetCachedSize(), target, stream);
      break;
    }
    case kSetPlatformElevation: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, _Internal::set_platform_elevation(this),
          _Internal::set_platform_elevation(this).GetCachedSize(), target, stream);
      break;
    }
    case kSetPlatformBank: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, _Internal::set_platform_bank(this),
          _Internal::set_platform_bank(this).GetCachedSize(), target, stream);
      break;
    }
    case kHalt: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, _Internal::halt(this),
          _Internal::halt(this).GetCachedSize(), target, stream);
      break;
    }
    case kSetUseRotaryAsCompass: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          8, _Internal::set_use_rotary_as_compass(this),
          _Internal::set_use_rotary_as_compass(this).GetCachedSize(), target, stream);
      break;
    }
    case kRotateToGps: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          9, _Internal::rotate_to_gps(this),
          _Internal::rotate_to_gps(this).GetCachedSize(), target, stream);
      break;
    }
    case kSetOriginGps: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          10, _Internal::set_origin_gps(this),
          _Internal::set_origin_gps(this).GetCachedSize(), target, stream);
      break;
    }
    case kSetMode: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          11, _Internal::set_mode(this),
          _Internal::set_mode(this).GetCachedSize(), target, stream);
      break;
    }
    case kRotateToNdc: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          12, _Internal::rotate_to_ndc(this),
          _Internal::rotate_to_ndc(this).GetCachedSize(), target, stream);
      break;
    }
    case kScanStart: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          13, _Internal::scan_start(this),
          _Internal::scan_start(this).GetCachedSize(), target, stream);
      break;
    }
    case kScanStop: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          14, _Internal::scan_stop(this),
          _Internal::scan_stop(this).GetCachedSize(), target, stream);
      break;
    }
    case kScanPause: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          15, _Internal::scan_pause(this),
          _Internal::scan_pause(this).GetCachedSize(), target, stream);
      break;
    }
    case kScanUnpause: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          16, _Internal::scan_unpause(this),
          _Internal::scan_unpause(this).GetCachedSize(), target, stream);
      break;
    }
    case kGetMeteo: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          17, _Internal::get_meteo(this),
          _Internal::get_meteo(this).GetCachedSize(), target, stream);
      break;
    }
    case kScanPrev: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          18, _Internal::scan_prev(this),
          _Internal::scan_prev(this).GetCachedSize(), target, stream);
      break;
    }
    case kScanNext: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          19, _Internal::scan_next(this),
          _Internal::scan_next(this).GetCachedSize(), target, stream);
      break;
    }
    case kScanRefreshNodeList: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          20, _Internal::scan_refresh_node_list(this),
          _Internal::scan_refresh_node_list(this).GetCachedSize(), target, stream);
      break;
    }
    case kScanSelectNode: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          21, _Internal::scan_select_node(this),
          _Internal::scan_select_node(this).GetCachedSize(), target, stream);
      break;
    }
    case kScanDeleteNode: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          22, _Internal::scan_delete_node(this),
          _Internal::scan_delete_node(this).GetCachedSize(), target, stream);
      break;
    }
    case kScanUpdateNode: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          23, _Internal::scan_update_node(this),
          _Internal::scan_update_node(this).GetCachedSize(), target, stream);
      break;
    }
    case kScanAddNode: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          24, _Internal::scan_add_node(this),
          _Internal::scan_add_node(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.RotaryPlatform.Root)
  return target;
}

::size_t Root::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.RotaryPlatform.Root)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (cmd_case()) {
    // .cmd.RotaryPlatform.Start start = 1;
    case kStart: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.start_);
      break;
    }
    // .cmd.RotaryPlatform.Stop stop = 2;
    case kStop: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.stop_);
      break;
    }
    // .cmd.RotaryPlatform.Axis axis = 3;
    case kAxis: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.axis_);
      break;
    }
    // .cmd.RotaryPlatform.SetPlatformAzimuth set_platform_azimuth = 4;
    case kSetPlatformAzimuth: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.set_platform_azimuth_);
      break;
    }
    // .cmd.RotaryPlatform.SetPlatformElevation set_platform_elevation = 5;
    case kSetPlatformElevation: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.set_platform_elevation_);
      break;
    }
    // .cmd.RotaryPlatform.SetPlatformBank set_platform_bank = 6;
    case kSetPlatformBank: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.set_platform_bank_);
      break;
    }
    // .cmd.RotaryPlatform.Halt halt = 7;
    case kHalt: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.halt_);
      break;
    }
    // .cmd.RotaryPlatform.setUseRotaryAsCompass set_use_rotary_as_compass = 8;
    case kSetUseRotaryAsCompass: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.set_use_rotary_as_compass_);
      break;
    }
    // .cmd.RotaryPlatform.RotateToGPS rotate_to_gps = 9;
    case kRotateToGps: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.rotate_to_gps_);
      break;
    }
    // .cmd.RotaryPlatform.SetOriginGPS set_origin_gps = 10;
    case kSetOriginGps: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.set_origin_gps_);
      break;
    }
    // .cmd.RotaryPlatform.SetMode set_mode = 11;
    case kSetMode: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.set_mode_);
      break;
    }
    // .cmd.RotaryPlatform.RotateToNDC rotate_to_ndc = 12;
    case kRotateToNdc: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.rotate_to_ndc_);
      break;
    }
    // .cmd.RotaryPlatform.ScanStart scan_start = 13;
    case kScanStart: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.scan_start_);
      break;
    }
    // .cmd.RotaryPlatform.ScanStop scan_stop = 14;
    case kScanStop: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.scan_stop_);
      break;
    }
    // .cmd.RotaryPlatform.ScanPause scan_pause = 15;
    case kScanPause: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.scan_pause_);
      break;
    }
    // .cmd.RotaryPlatform.ScanUnpause scan_unpause = 16;
    case kScanUnpause: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.scan_unpause_);
      break;
    }
    // .cmd.RotaryPlatform.GetMeteo get_meteo = 17;
    case kGetMeteo: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.get_meteo_);
      break;
    }
    // .cmd.RotaryPlatform.ScanPrev scan_prev = 18;
    case kScanPrev: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.scan_prev_);
      break;
    }
    // .cmd.RotaryPlatform.ScanNext scan_next = 19;
    case kScanNext: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.scan_next_);
      break;
    }
    // .cmd.RotaryPlatform.ScanRefreshNodeList scan_refresh_node_list = 20;
    case kScanRefreshNodeList: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.scan_refresh_node_list_);
      break;
    }
    // .cmd.RotaryPlatform.ScanSelectNode scan_select_node = 21;
    case kScanSelectNode: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.scan_select_node_);
      break;
    }
    // .cmd.RotaryPlatform.ScanDeleteNode scan_delete_node = 22;
    case kScanDeleteNode: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.scan_delete_node_);
      break;
    }
    // .cmd.RotaryPlatform.ScanUpdateNode scan_update_node = 23;
    case kScanUpdateNode: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.scan_update_node_);
      break;
    }
    // .cmd.RotaryPlatform.ScanAddNode scan_add_node = 24;
    case kScanAddNode: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.scan_add_node_);
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Root::_class_data_ = {
    Root::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Root::GetClassData() const {
  return &_class_data_;
}

void Root::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Root*>(&to_msg);
  auto& from = static_cast<const Root&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.RotaryPlatform.Root)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.cmd_case()) {
    case kStart: {
      _this->_internal_mutable_start()->::cmd::RotaryPlatform::Start::MergeFrom(
          from._internal_start());
      break;
    }
    case kStop: {
      _this->_internal_mutable_stop()->::cmd::RotaryPlatform::Stop::MergeFrom(
          from._internal_stop());
      break;
    }
    case kAxis: {
      _this->_internal_mutable_axis()->::cmd::RotaryPlatform::Axis::MergeFrom(
          from._internal_axis());
      break;
    }
    case kSetPlatformAzimuth: {
      _this->_internal_mutable_set_platform_azimuth()->::cmd::RotaryPlatform::SetPlatformAzimuth::MergeFrom(
          from._internal_set_platform_azimuth());
      break;
    }
    case kSetPlatformElevation: {
      _this->_internal_mutable_set_platform_elevation()->::cmd::RotaryPlatform::SetPlatformElevation::MergeFrom(
          from._internal_set_platform_elevation());
      break;
    }
    case kSetPlatformBank: {
      _this->_internal_mutable_set_platform_bank()->::cmd::RotaryPlatform::SetPlatformBank::MergeFrom(
          from._internal_set_platform_bank());
      break;
    }
    case kHalt: {
      _this->_internal_mutable_halt()->::cmd::RotaryPlatform::Halt::MergeFrom(
          from._internal_halt());
      break;
    }
    case kSetUseRotaryAsCompass: {
      _this->_internal_mutable_set_use_rotary_as_compass()->::cmd::RotaryPlatform::setUseRotaryAsCompass::MergeFrom(
          from._internal_set_use_rotary_as_compass());
      break;
    }
    case kRotateToGps: {
      _this->_internal_mutable_rotate_to_gps()->::cmd::RotaryPlatform::RotateToGPS::MergeFrom(
          from._internal_rotate_to_gps());
      break;
    }
    case kSetOriginGps: {
      _this->_internal_mutable_set_origin_gps()->::cmd::RotaryPlatform::SetOriginGPS::MergeFrom(
          from._internal_set_origin_gps());
      break;
    }
    case kSetMode: {
      _this->_internal_mutable_set_mode()->::cmd::RotaryPlatform::SetMode::MergeFrom(
          from._internal_set_mode());
      break;
    }
    case kRotateToNdc: {
      _this->_internal_mutable_rotate_to_ndc()->::cmd::RotaryPlatform::RotateToNDC::MergeFrom(
          from._internal_rotate_to_ndc());
      break;
    }
    case kScanStart: {
      _this->_internal_mutable_scan_start()->::cmd::RotaryPlatform::ScanStart::MergeFrom(
          from._internal_scan_start());
      break;
    }
    case kScanStop: {
      _this->_internal_mutable_scan_stop()->::cmd::RotaryPlatform::ScanStop::MergeFrom(
          from._internal_scan_stop());
      break;
    }
    case kScanPause: {
      _this->_internal_mutable_scan_pause()->::cmd::RotaryPlatform::ScanPause::MergeFrom(
          from._internal_scan_pause());
      break;
    }
    case kScanUnpause: {
      _this->_internal_mutable_scan_unpause()->::cmd::RotaryPlatform::ScanUnpause::MergeFrom(
          from._internal_scan_unpause());
      break;
    }
    case kGetMeteo: {
      _this->_internal_mutable_get_meteo()->::cmd::RotaryPlatform::GetMeteo::MergeFrom(
          from._internal_get_meteo());
      break;
    }
    case kScanPrev: {
      _this->_internal_mutable_scan_prev()->::cmd::RotaryPlatform::ScanPrev::MergeFrom(
          from._internal_scan_prev());
      break;
    }
    case kScanNext: {
      _this->_internal_mutable_scan_next()->::cmd::RotaryPlatform::ScanNext::MergeFrom(
          from._internal_scan_next());
      break;
    }
    case kScanRefreshNodeList: {
      _this->_internal_mutable_scan_refresh_node_list()->::cmd::RotaryPlatform::ScanRefreshNodeList::MergeFrom(
          from._internal_scan_refresh_node_list());
      break;
    }
    case kScanSelectNode: {
      _this->_internal_mutable_scan_select_node()->::cmd::RotaryPlatform::ScanSelectNode::MergeFrom(
          from._internal_scan_select_node());
      break;
    }
    case kScanDeleteNode: {
      _this->_internal_mutable_scan_delete_node()->::cmd::RotaryPlatform::ScanDeleteNode::MergeFrom(
          from._internal_scan_delete_node());
      break;
    }
    case kScanUpdateNode: {
      _this->_internal_mutable_scan_update_node()->::cmd::RotaryPlatform::ScanUpdateNode::MergeFrom(
          from._internal_scan_update_node());
      break;
    }
    case kScanAddNode: {
      _this->_internal_mutable_scan_add_node()->::cmd::RotaryPlatform::ScanAddNode::MergeFrom(
          from._internal_scan_add_node());
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Root::CopyFrom(const Root& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.RotaryPlatform.Root)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Root::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Root::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Root::InternalSwap(Root* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.cmd_, other->_impl_.cmd_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Root::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[0]);
}
// ===================================================================

class Axis::_Internal {
 public:
  using HasBits = decltype(std::declval<Axis>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Axis, _impl_._has_bits_);
  static const ::cmd::RotaryPlatform::Azimuth& azimuth(const Axis* msg);
  static void set_has_azimuth(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::cmd::RotaryPlatform::Elevation& elevation(const Axis* msg);
  static void set_has_elevation(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::cmd::RotaryPlatform::Azimuth& Axis::_Internal::azimuth(const Axis* msg) {
  return *msg->_impl_.azimuth_;
}
const ::cmd::RotaryPlatform::Elevation& Axis::_Internal::elevation(const Axis* msg) {
  return *msg->_impl_.elevation_;
}
Axis::Axis(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.Axis)
}
inline PROTOBUF_NDEBUG_INLINE Axis::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Axis::Axis(
    ::google::protobuf::Arena* arena,
    const Axis& from)
    : ::google::protobuf::Message(arena) {
  Axis* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.azimuth_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::cmd::RotaryPlatform::Azimuth>(arena, *from._impl_.azimuth_)
                : nullptr;
  _impl_.elevation_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::cmd::RotaryPlatform::Elevation>(arena, *from._impl_.elevation_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:cmd.RotaryPlatform.Axis)
}
inline PROTOBUF_NDEBUG_INLINE Axis::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Axis::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, azimuth_),
           0,
           offsetof(Impl_, elevation_) -
               offsetof(Impl_, azimuth_) +
               sizeof(Impl_::elevation_));
}
Axis::~Axis() {
  // @@protoc_insertion_point(destructor:cmd.RotaryPlatform.Axis)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Axis::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.azimuth_;
  delete _impl_.elevation_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Axis::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.RotaryPlatform.Axis)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.azimuth_ != nullptr);
      _impl_.azimuth_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.elevation_ != nullptr);
      _impl_.elevation_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Axis::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Axis::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Axis, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Axis_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .cmd.RotaryPlatform.Elevation elevation = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Axis, _impl_.elevation_)}},
    // .cmd.RotaryPlatform.Azimuth azimuth = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Axis, _impl_.azimuth_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cmd.RotaryPlatform.Azimuth azimuth = 1;
    {PROTOBUF_FIELD_OFFSET(Axis, _impl_.azimuth_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.RotaryPlatform.Elevation elevation = 2;
    {PROTOBUF_FIELD_OFFSET(Axis, _impl_.elevation_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cmd::RotaryPlatform::Azimuth>()},
    {::_pbi::TcParser::GetTable<::cmd::RotaryPlatform::Elevation>()},
  }}, {{
  }},
};

::uint8_t* Axis::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.RotaryPlatform.Axis)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cmd.RotaryPlatform.Azimuth azimuth = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::azimuth(this),
        _Internal::azimuth(this).GetCachedSize(), target, stream);
  }

  // .cmd.RotaryPlatform.Elevation elevation = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::elevation(this),
        _Internal::elevation(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.RotaryPlatform.Axis)
  return target;
}

::size_t Axis::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.RotaryPlatform.Axis)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .cmd.RotaryPlatform.Azimuth azimuth = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.azimuth_);
    }

    // .cmd.RotaryPlatform.Elevation elevation = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.elevation_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Axis::_class_data_ = {
    Axis::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Axis::GetClassData() const {
  return &_class_data_;
}

void Axis::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Axis*>(&to_msg);
  auto& from = static_cast<const Axis&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.RotaryPlatform.Axis)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_azimuth()->::cmd::RotaryPlatform::Azimuth::MergeFrom(
          from._internal_azimuth());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_elevation()->::cmd::RotaryPlatform::Elevation::MergeFrom(
          from._internal_elevation());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Axis::CopyFrom(const Axis& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.RotaryPlatform.Axis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Axis::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Axis::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Axis::InternalSwap(Axis* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Axis, _impl_.elevation_)
      + sizeof(Axis::_impl_.elevation_)
      - PROTOBUF_FIELD_OFFSET(Axis, _impl_.azimuth_)>(
          reinterpret_cast<char*>(&_impl_.azimuth_),
          reinterpret_cast<char*>(&other->_impl_.azimuth_));
}

::google::protobuf::Metadata Axis::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[1]);
}
// ===================================================================

class SetMode::_Internal {
 public:
};

SetMode::SetMode(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.SetMode)
}
SetMode::SetMode(
    ::google::protobuf::Arena* arena, const SetMode& from)
    : SetMode(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetMode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetMode::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.mode_ = {};
}
SetMode::~SetMode() {
  // @@protoc_insertion_point(destructor:cmd.RotaryPlatform.SetMode)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetMode::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetMode::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.RotaryPlatform.SetMode)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mode_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetMode::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetMode::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetMode_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .ser.JonGuiDataRotaryMode mode = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetMode, _impl_.mode_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetMode, _impl_.mode_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .ser.JonGuiDataRotaryMode mode = 1;
    {PROTOBUF_FIELD_OFFSET(SetMode, _impl_.mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetMode::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.RotaryPlatform.SetMode)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .ser.JonGuiDataRotaryMode mode = 1;
  if (this->_internal_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.RotaryPlatform.SetMode)
  return target;
}

::size_t SetMode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.RotaryPlatform.SetMode)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ser.JonGuiDataRotaryMode mode = 1;
  if (this->_internal_mode() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetMode::_class_data_ = {
    SetMode::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetMode::GetClassData() const {
  return &_class_data_;
}

void SetMode::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetMode*>(&to_msg);
  auto& from = static_cast<const SetMode&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.RotaryPlatform.SetMode)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_mode() != 0) {
    _this->_internal_set_mode(from._internal_mode());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetMode::CopyFrom(const SetMode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.RotaryPlatform.SetMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetMode::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetMode::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetMode::InternalSwap(SetMode* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.mode_, other->_impl_.mode_);
}

::google::protobuf::Metadata SetMode::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[2]);
}
// ===================================================================

class SetAzimuthValue::_Internal {
 public:
};

SetAzimuthValue::SetAzimuthValue(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.SetAzimuthValue)
}
SetAzimuthValue::SetAzimuthValue(
    ::google::protobuf::Arena* arena, const SetAzimuthValue& from)
    : SetAzimuthValue(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetAzimuthValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetAzimuthValue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, value_),
           0,
           offsetof(Impl_, direction_) -
               offsetof(Impl_, value_) +
               sizeof(Impl_::direction_));
}
SetAzimuthValue::~SetAzimuthValue() {
  // @@protoc_insertion_point(destructor:cmd.RotaryPlatform.SetAzimuthValue)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetAzimuthValue::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetAzimuthValue::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.RotaryPlatform.SetAzimuthValue)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.value_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.direction_) -
      reinterpret_cast<char*>(&_impl_.value_)) + sizeof(_impl_.direction_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetAzimuthValue::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> SetAzimuthValue::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetAzimuthValue_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .ser.JonGuiDataRotaryDirection direction = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetAzimuthValue, _impl_.direction_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SetAzimuthValue, _impl_.direction_)}},
    // float value = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(SetAzimuthValue, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float value = 1;
    {PROTOBUF_FIELD_OFFSET(SetAzimuthValue, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // .ser.JonGuiDataRotaryDirection direction = 2;
    {PROTOBUF_FIELD_OFFSET(SetAzimuthValue, _impl_.direction_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetAzimuthValue::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.RotaryPlatform.SetAzimuthValue)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_value(), target);
  }

  // .ser.JonGuiDataRotaryDirection direction = 2;
  if (this->_internal_direction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_direction(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.RotaryPlatform.SetAzimuthValue)
  return target;
}

::size_t SetAzimuthValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.RotaryPlatform.SetAzimuthValue)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 5;
  }

  // .ser.JonGuiDataRotaryDirection direction = 2;
  if (this->_internal_direction() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_direction());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetAzimuthValue::_class_data_ = {
    SetAzimuthValue::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetAzimuthValue::GetClassData() const {
  return &_class_data_;
}

void SetAzimuthValue::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetAzimuthValue*>(&to_msg);
  auto& from = static_cast<const SetAzimuthValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.RotaryPlatform.SetAzimuthValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = from._internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  if (from._internal_direction() != 0) {
    _this->_internal_set_direction(from._internal_direction());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetAzimuthValue::CopyFrom(const SetAzimuthValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.RotaryPlatform.SetAzimuthValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetAzimuthValue::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetAzimuthValue::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetAzimuthValue::InternalSwap(SetAzimuthValue* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetAzimuthValue, _impl_.direction_)
      + sizeof(SetAzimuthValue::_impl_.direction_)
      - PROTOBUF_FIELD_OFFSET(SetAzimuthValue, _impl_.value_)>(
          reinterpret_cast<char*>(&_impl_.value_),
          reinterpret_cast<char*>(&other->_impl_.value_));
}

::google::protobuf::Metadata SetAzimuthValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[3]);
}
// ===================================================================

class RotateAzimuthTo::_Internal {
 public:
};

RotateAzimuthTo::RotateAzimuthTo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.RotateAzimuthTo)
}
RotateAzimuthTo::RotateAzimuthTo(
    ::google::protobuf::Arena* arena, const RotateAzimuthTo& from)
    : RotateAzimuthTo(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RotateAzimuthTo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RotateAzimuthTo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, target_value_),
           0,
           offsetof(Impl_, direction_) -
               offsetof(Impl_, target_value_) +
               sizeof(Impl_::direction_));
}
RotateAzimuthTo::~RotateAzimuthTo() {
  // @@protoc_insertion_point(destructor:cmd.RotaryPlatform.RotateAzimuthTo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RotateAzimuthTo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RotateAzimuthTo::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.RotaryPlatform.RotateAzimuthTo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.target_value_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.direction_) -
      reinterpret_cast<char*>(&_impl_.target_value_)) + sizeof(_impl_.direction_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RotateAzimuthTo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> RotateAzimuthTo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RotateAzimuthTo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float target_value = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(RotateAzimuthTo, _impl_.target_value_)}},
    // float speed = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(RotateAzimuthTo, _impl_.speed_)}},
    // .ser.JonGuiDataRotaryDirection direction = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RotateAzimuthTo, _impl_.direction_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RotateAzimuthTo, _impl_.direction_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float target_value = 1;
    {PROTOBUF_FIELD_OFFSET(RotateAzimuthTo, _impl_.target_value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float speed = 2;
    {PROTOBUF_FIELD_OFFSET(RotateAzimuthTo, _impl_.speed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // .ser.JonGuiDataRotaryDirection direction = 3;
    {PROTOBUF_FIELD_OFFSET(RotateAzimuthTo, _impl_.direction_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RotateAzimuthTo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.RotaryPlatform.RotateAzimuthTo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float target_value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_target_value = this->_internal_target_value();
  ::uint32_t raw_target_value;
  memcpy(&raw_target_value, &tmp_target_value, sizeof(tmp_target_value));
  if (raw_target_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_target_value(), target);
  }

  // float speed = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed = this->_internal_speed();
  ::uint32_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_speed(), target);
  }

  // .ser.JonGuiDataRotaryDirection direction = 3;
  if (this->_internal_direction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_direction(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.RotaryPlatform.RotateAzimuthTo)
  return target;
}

::size_t RotateAzimuthTo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.RotaryPlatform.RotateAzimuthTo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float target_value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_target_value = this->_internal_target_value();
  ::uint32_t raw_target_value;
  memcpy(&raw_target_value, &tmp_target_value, sizeof(tmp_target_value));
  if (raw_target_value != 0) {
    total_size += 5;
  }

  // float speed = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed = this->_internal_speed();
  ::uint32_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    total_size += 5;
  }

  // .ser.JonGuiDataRotaryDirection direction = 3;
  if (this->_internal_direction() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_direction());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RotateAzimuthTo::_class_data_ = {
    RotateAzimuthTo::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RotateAzimuthTo::GetClassData() const {
  return &_class_data_;
}

void RotateAzimuthTo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RotateAzimuthTo*>(&to_msg);
  auto& from = static_cast<const RotateAzimuthTo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.RotaryPlatform.RotateAzimuthTo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_target_value = from._internal_target_value();
  ::uint32_t raw_target_value;
  memcpy(&raw_target_value, &tmp_target_value, sizeof(tmp_target_value));
  if (raw_target_value != 0) {
    _this->_internal_set_target_value(from._internal_target_value());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed = from._internal_speed();
  ::uint32_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    _this->_internal_set_speed(from._internal_speed());
  }
  if (from._internal_direction() != 0) {
    _this->_internal_set_direction(from._internal_direction());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RotateAzimuthTo::CopyFrom(const RotateAzimuthTo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.RotaryPlatform.RotateAzimuthTo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RotateAzimuthTo::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RotateAzimuthTo::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RotateAzimuthTo::InternalSwap(RotateAzimuthTo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RotateAzimuthTo, _impl_.direction_)
      + sizeof(RotateAzimuthTo::_impl_.direction_)
      - PROTOBUF_FIELD_OFFSET(RotateAzimuthTo, _impl_.target_value_)>(
          reinterpret_cast<char*>(&_impl_.target_value_),
          reinterpret_cast<char*>(&other->_impl_.target_value_));
}

::google::protobuf::Metadata RotateAzimuthTo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[4]);
}
// ===================================================================

class RotateAzimuth::_Internal {
 public:
};

RotateAzimuth::RotateAzimuth(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.RotateAzimuth)
}
RotateAzimuth::RotateAzimuth(
    ::google::protobuf::Arena* arena, const RotateAzimuth& from)
    : RotateAzimuth(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RotateAzimuth::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RotateAzimuth::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, speed_),
           0,
           offsetof(Impl_, direction_) -
               offsetof(Impl_, speed_) +
               sizeof(Impl_::direction_));
}
RotateAzimuth::~RotateAzimuth() {
  // @@protoc_insertion_point(destructor:cmd.RotaryPlatform.RotateAzimuth)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RotateAzimuth::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RotateAzimuth::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.RotaryPlatform.RotateAzimuth)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.speed_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.direction_) -
      reinterpret_cast<char*>(&_impl_.speed_)) + sizeof(_impl_.direction_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RotateAzimuth::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> RotateAzimuth::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RotateAzimuth_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .ser.JonGuiDataRotaryDirection direction = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RotateAzimuth, _impl_.direction_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RotateAzimuth, _impl_.direction_)}},
    // float speed = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(RotateAzimuth, _impl_.speed_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float speed = 1;
    {PROTOBUF_FIELD_OFFSET(RotateAzimuth, _impl_.speed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // .ser.JonGuiDataRotaryDirection direction = 2;
    {PROTOBUF_FIELD_OFFSET(RotateAzimuth, _impl_.direction_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RotateAzimuth::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.RotaryPlatform.RotateAzimuth)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float speed = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed = this->_internal_speed();
  ::uint32_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_speed(), target);
  }

  // .ser.JonGuiDataRotaryDirection direction = 2;
  if (this->_internal_direction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_direction(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.RotaryPlatform.RotateAzimuth)
  return target;
}

::size_t RotateAzimuth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.RotaryPlatform.RotateAzimuth)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float speed = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed = this->_internal_speed();
  ::uint32_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    total_size += 5;
  }

  // .ser.JonGuiDataRotaryDirection direction = 2;
  if (this->_internal_direction() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_direction());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RotateAzimuth::_class_data_ = {
    RotateAzimuth::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RotateAzimuth::GetClassData() const {
  return &_class_data_;
}

void RotateAzimuth::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RotateAzimuth*>(&to_msg);
  auto& from = static_cast<const RotateAzimuth&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.RotaryPlatform.RotateAzimuth)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed = from._internal_speed();
  ::uint32_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    _this->_internal_set_speed(from._internal_speed());
  }
  if (from._internal_direction() != 0) {
    _this->_internal_set_direction(from._internal_direction());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RotateAzimuth::CopyFrom(const RotateAzimuth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.RotaryPlatform.RotateAzimuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RotateAzimuth::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RotateAzimuth::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RotateAzimuth::InternalSwap(RotateAzimuth* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RotateAzimuth, _impl_.direction_)
      + sizeof(RotateAzimuth::_impl_.direction_)
      - PROTOBUF_FIELD_OFFSET(RotateAzimuth, _impl_.speed_)>(
          reinterpret_cast<char*>(&_impl_.speed_),
          reinterpret_cast<char*>(&other->_impl_.speed_));
}

::google::protobuf::Metadata RotateAzimuth::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[5]);
}
// ===================================================================

class RotateElevation::_Internal {
 public:
};

RotateElevation::RotateElevation(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.RotateElevation)
}
RotateElevation::RotateElevation(
    ::google::protobuf::Arena* arena, const RotateElevation& from)
    : RotateElevation(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RotateElevation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RotateElevation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, speed_),
           0,
           offsetof(Impl_, direction_) -
               offsetof(Impl_, speed_) +
               sizeof(Impl_::direction_));
}
RotateElevation::~RotateElevation() {
  // @@protoc_insertion_point(destructor:cmd.RotaryPlatform.RotateElevation)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RotateElevation::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RotateElevation::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.RotaryPlatform.RotateElevation)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.speed_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.direction_) -
      reinterpret_cast<char*>(&_impl_.speed_)) + sizeof(_impl_.direction_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RotateElevation::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> RotateElevation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RotateElevation_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .ser.JonGuiDataRotaryDirection direction = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RotateElevation, _impl_.direction_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RotateElevation, _impl_.direction_)}},
    // float speed = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(RotateElevation, _impl_.speed_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float speed = 1;
    {PROTOBUF_FIELD_OFFSET(RotateElevation, _impl_.speed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // .ser.JonGuiDataRotaryDirection direction = 2;
    {PROTOBUF_FIELD_OFFSET(RotateElevation, _impl_.direction_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RotateElevation::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.RotaryPlatform.RotateElevation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float speed = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed = this->_internal_speed();
  ::uint32_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_speed(), target);
  }

  // .ser.JonGuiDataRotaryDirection direction = 2;
  if (this->_internal_direction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_direction(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.RotaryPlatform.RotateElevation)
  return target;
}

::size_t RotateElevation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.RotaryPlatform.RotateElevation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float speed = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed = this->_internal_speed();
  ::uint32_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    total_size += 5;
  }

  // .ser.JonGuiDataRotaryDirection direction = 2;
  if (this->_internal_direction() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_direction());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RotateElevation::_class_data_ = {
    RotateElevation::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RotateElevation::GetClassData() const {
  return &_class_data_;
}

void RotateElevation::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RotateElevation*>(&to_msg);
  auto& from = static_cast<const RotateElevation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.RotaryPlatform.RotateElevation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed = from._internal_speed();
  ::uint32_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    _this->_internal_set_speed(from._internal_speed());
  }
  if (from._internal_direction() != 0) {
    _this->_internal_set_direction(from._internal_direction());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RotateElevation::CopyFrom(const RotateElevation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.RotaryPlatform.RotateElevation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RotateElevation::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RotateElevation::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RotateElevation::InternalSwap(RotateElevation* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RotateElevation, _impl_.direction_)
      + sizeof(RotateElevation::_impl_.direction_)
      - PROTOBUF_FIELD_OFFSET(RotateElevation, _impl_.speed_)>(
          reinterpret_cast<char*>(&_impl_.speed_),
          reinterpret_cast<char*>(&other->_impl_.speed_));
}

::google::protobuf::Metadata RotateElevation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[6]);
}
// ===================================================================

class SetElevationValue::_Internal {
 public:
};

SetElevationValue::SetElevationValue(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.SetElevationValue)
}
SetElevationValue::SetElevationValue(
    ::google::protobuf::Arena* arena, const SetElevationValue& from)
    : SetElevationValue(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetElevationValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetElevationValue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
SetElevationValue::~SetElevationValue() {
  // @@protoc_insertion_point(destructor:cmd.RotaryPlatform.SetElevationValue)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetElevationValue::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetElevationValue::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.RotaryPlatform.SetElevationValue)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetElevationValue::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetElevationValue::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetElevationValue_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float value = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(SetElevationValue, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float value = 1;
    {PROTOBUF_FIELD_OFFSET(SetElevationValue, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetElevationValue::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.RotaryPlatform.SetElevationValue)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.RotaryPlatform.SetElevationValue)
  return target;
}

::size_t SetElevationValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.RotaryPlatform.SetElevationValue)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetElevationValue::_class_data_ = {
    SetElevationValue::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetElevationValue::GetClassData() const {
  return &_class_data_;
}

void SetElevationValue::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetElevationValue*>(&to_msg);
  auto& from = static_cast<const SetElevationValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.RotaryPlatform.SetElevationValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = from._internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetElevationValue::CopyFrom(const SetElevationValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.RotaryPlatform.SetElevationValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetElevationValue::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetElevationValue::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetElevationValue::InternalSwap(SetElevationValue* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata SetElevationValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[7]);
}
// ===================================================================

class RotateElevationTo::_Internal {
 public:
};

RotateElevationTo::RotateElevationTo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.RotateElevationTo)
}
RotateElevationTo::RotateElevationTo(
    ::google::protobuf::Arena* arena, const RotateElevationTo& from)
    : RotateElevationTo(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RotateElevationTo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RotateElevationTo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, target_value_),
           0,
           offsetof(Impl_, speed_) -
               offsetof(Impl_, target_value_) +
               sizeof(Impl_::speed_));
}
RotateElevationTo::~RotateElevationTo() {
  // @@protoc_insertion_point(destructor:cmd.RotaryPlatform.RotateElevationTo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RotateElevationTo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RotateElevationTo::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.RotaryPlatform.RotateElevationTo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.target_value_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.speed_) -
      reinterpret_cast<char*>(&_impl_.target_value_)) + sizeof(_impl_.speed_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RotateElevationTo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> RotateElevationTo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RotateElevationTo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float speed = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(RotateElevationTo, _impl_.speed_)}},
    // float target_value = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(RotateElevationTo, _impl_.target_value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float target_value = 1;
    {PROTOBUF_FIELD_OFFSET(RotateElevationTo, _impl_.target_value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float speed = 2;
    {PROTOBUF_FIELD_OFFSET(RotateElevationTo, _impl_.speed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RotateElevationTo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.RotaryPlatform.RotateElevationTo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float target_value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_target_value = this->_internal_target_value();
  ::uint32_t raw_target_value;
  memcpy(&raw_target_value, &tmp_target_value, sizeof(tmp_target_value));
  if (raw_target_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_target_value(), target);
  }

  // float speed = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed = this->_internal_speed();
  ::uint32_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_speed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.RotaryPlatform.RotateElevationTo)
  return target;
}

::size_t RotateElevationTo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.RotaryPlatform.RotateElevationTo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float target_value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_target_value = this->_internal_target_value();
  ::uint32_t raw_target_value;
  memcpy(&raw_target_value, &tmp_target_value, sizeof(tmp_target_value));
  if (raw_target_value != 0) {
    total_size += 5;
  }

  // float speed = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed = this->_internal_speed();
  ::uint32_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RotateElevationTo::_class_data_ = {
    RotateElevationTo::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RotateElevationTo::GetClassData() const {
  return &_class_data_;
}

void RotateElevationTo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RotateElevationTo*>(&to_msg);
  auto& from = static_cast<const RotateElevationTo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.RotaryPlatform.RotateElevationTo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_target_value = from._internal_target_value();
  ::uint32_t raw_target_value;
  memcpy(&raw_target_value, &tmp_target_value, sizeof(tmp_target_value));
  if (raw_target_value != 0) {
    _this->_internal_set_target_value(from._internal_target_value());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed = from._internal_speed();
  ::uint32_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    _this->_internal_set_speed(from._internal_speed());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RotateElevationTo::CopyFrom(const RotateElevationTo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.RotaryPlatform.RotateElevationTo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RotateElevationTo::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RotateElevationTo::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RotateElevationTo::InternalSwap(RotateElevationTo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RotateElevationTo, _impl_.speed_)
      + sizeof(RotateElevationTo::_impl_.speed_)
      - PROTOBUF_FIELD_OFFSET(RotateElevationTo, _impl_.target_value_)>(
          reinterpret_cast<char*>(&_impl_.target_value_),
          reinterpret_cast<char*>(&other->_impl_.target_value_));
}

::google::protobuf::Metadata RotateElevationTo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[8]);
}
// ===================================================================

class RotateElevationRelative::_Internal {
 public:
};

RotateElevationRelative::RotateElevationRelative(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.RotateElevationRelative)
}
RotateElevationRelative::RotateElevationRelative(
    ::google::protobuf::Arena* arena, const RotateElevationRelative& from)
    : RotateElevationRelative(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RotateElevationRelative::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RotateElevationRelative::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, value_),
           0,
           offsetof(Impl_, direction_) -
               offsetof(Impl_, value_) +
               sizeof(Impl_::direction_));
}
RotateElevationRelative::~RotateElevationRelative() {
  // @@protoc_insertion_point(destructor:cmd.RotaryPlatform.RotateElevationRelative)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RotateElevationRelative::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RotateElevationRelative::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.RotaryPlatform.RotateElevationRelative)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.value_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.direction_) -
      reinterpret_cast<char*>(&_impl_.value_)) + sizeof(_impl_.direction_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RotateElevationRelative::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> RotateElevationRelative::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RotateElevationRelative_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float value = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(RotateElevationRelative, _impl_.value_)}},
    // float speed = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(RotateElevationRelative, _impl_.speed_)}},
    // .ser.JonGuiDataRotaryDirection direction = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RotateElevationRelative, _impl_.direction_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RotateElevationRelative, _impl_.direction_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float value = 1;
    {PROTOBUF_FIELD_OFFSET(RotateElevationRelative, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float speed = 2;
    {PROTOBUF_FIELD_OFFSET(RotateElevationRelative, _impl_.speed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // .ser.JonGuiDataRotaryDirection direction = 3;
    {PROTOBUF_FIELD_OFFSET(RotateElevationRelative, _impl_.direction_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RotateElevationRelative::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.RotaryPlatform.RotateElevationRelative)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_value(), target);
  }

  // float speed = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed = this->_internal_speed();
  ::uint32_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_speed(), target);
  }

  // .ser.JonGuiDataRotaryDirection direction = 3;
  if (this->_internal_direction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_direction(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.RotaryPlatform.RotateElevationRelative)
  return target;
}

::size_t RotateElevationRelative::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.RotaryPlatform.RotateElevationRelative)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 5;
  }

  // float speed = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed = this->_internal_speed();
  ::uint32_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    total_size += 5;
  }

  // .ser.JonGuiDataRotaryDirection direction = 3;
  if (this->_internal_direction() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_direction());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RotateElevationRelative::_class_data_ = {
    RotateElevationRelative::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RotateElevationRelative::GetClassData() const {
  return &_class_data_;
}

void RotateElevationRelative::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RotateElevationRelative*>(&to_msg);
  auto& from = static_cast<const RotateElevationRelative&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.RotaryPlatform.RotateElevationRelative)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = from._internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed = from._internal_speed();
  ::uint32_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    _this->_internal_set_speed(from._internal_speed());
  }
  if (from._internal_direction() != 0) {
    _this->_internal_set_direction(from._internal_direction());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RotateElevationRelative::CopyFrom(const RotateElevationRelative& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.RotaryPlatform.RotateElevationRelative)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RotateElevationRelative::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RotateElevationRelative::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RotateElevationRelative::InternalSwap(RotateElevationRelative* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RotateElevationRelative, _impl_.direction_)
      + sizeof(RotateElevationRelative::_impl_.direction_)
      - PROTOBUF_FIELD_OFFSET(RotateElevationRelative, _impl_.value_)>(
          reinterpret_cast<char*>(&_impl_.value_),
          reinterpret_cast<char*>(&other->_impl_.value_));
}

::google::protobuf::Metadata RotateElevationRelative::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[9]);
}
// ===================================================================

class RotateElevationRelativeSet::_Internal {
 public:
};

RotateElevationRelativeSet::RotateElevationRelativeSet(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.RotateElevationRelativeSet)
}
RotateElevationRelativeSet::RotateElevationRelativeSet(
    ::google::protobuf::Arena* arena, const RotateElevationRelativeSet& from)
    : RotateElevationRelativeSet(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RotateElevationRelativeSet::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RotateElevationRelativeSet::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, value_),
           0,
           offsetof(Impl_, direction_) -
               offsetof(Impl_, value_) +
               sizeof(Impl_::direction_));
}
RotateElevationRelativeSet::~RotateElevationRelativeSet() {
  // @@protoc_insertion_point(destructor:cmd.RotaryPlatform.RotateElevationRelativeSet)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RotateElevationRelativeSet::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RotateElevationRelativeSet::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.RotaryPlatform.RotateElevationRelativeSet)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.value_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.direction_) -
      reinterpret_cast<char*>(&_impl_.value_)) + sizeof(_impl_.direction_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RotateElevationRelativeSet::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> RotateElevationRelativeSet::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RotateElevationRelativeSet_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .ser.JonGuiDataRotaryDirection direction = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RotateElevationRelativeSet, _impl_.direction_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RotateElevationRelativeSet, _impl_.direction_)}},
    // float value = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(RotateElevationRelativeSet, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float value = 1;
    {PROTOBUF_FIELD_OFFSET(RotateElevationRelativeSet, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // .ser.JonGuiDataRotaryDirection direction = 2;
    {PROTOBUF_FIELD_OFFSET(RotateElevationRelativeSet, _impl_.direction_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RotateElevationRelativeSet::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.RotaryPlatform.RotateElevationRelativeSet)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_value(), target);
  }

  // .ser.JonGuiDataRotaryDirection direction = 2;
  if (this->_internal_direction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_direction(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.RotaryPlatform.RotateElevationRelativeSet)
  return target;
}

::size_t RotateElevationRelativeSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.RotaryPlatform.RotateElevationRelativeSet)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 5;
  }

  // .ser.JonGuiDataRotaryDirection direction = 2;
  if (this->_internal_direction() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_direction());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RotateElevationRelativeSet::_class_data_ = {
    RotateElevationRelativeSet::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RotateElevationRelativeSet::GetClassData() const {
  return &_class_data_;
}

void RotateElevationRelativeSet::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RotateElevationRelativeSet*>(&to_msg);
  auto& from = static_cast<const RotateElevationRelativeSet&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.RotaryPlatform.RotateElevationRelativeSet)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = from._internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  if (from._internal_direction() != 0) {
    _this->_internal_set_direction(from._internal_direction());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RotateElevationRelativeSet::CopyFrom(const RotateElevationRelativeSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.RotaryPlatform.RotateElevationRelativeSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RotateElevationRelativeSet::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RotateElevationRelativeSet::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RotateElevationRelativeSet::InternalSwap(RotateElevationRelativeSet* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RotateElevationRelativeSet, _impl_.direction_)
      + sizeof(RotateElevationRelativeSet::_impl_.direction_)
      - PROTOBUF_FIELD_OFFSET(RotateElevationRelativeSet, _impl_.value_)>(
          reinterpret_cast<char*>(&_impl_.value_),
          reinterpret_cast<char*>(&other->_impl_.value_));
}

::google::protobuf::Metadata RotateElevationRelativeSet::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[10]);
}
// ===================================================================

class RotateAzimuthRelative::_Internal {
 public:
};

RotateAzimuthRelative::RotateAzimuthRelative(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.RotateAzimuthRelative)
}
RotateAzimuthRelative::RotateAzimuthRelative(
    ::google::protobuf::Arena* arena, const RotateAzimuthRelative& from)
    : RotateAzimuthRelative(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RotateAzimuthRelative::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RotateAzimuthRelative::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, value_),
           0,
           offsetof(Impl_, direction_) -
               offsetof(Impl_, value_) +
               sizeof(Impl_::direction_));
}
RotateAzimuthRelative::~RotateAzimuthRelative() {
  // @@protoc_insertion_point(destructor:cmd.RotaryPlatform.RotateAzimuthRelative)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RotateAzimuthRelative::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RotateAzimuthRelative::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.RotaryPlatform.RotateAzimuthRelative)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.value_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.direction_) -
      reinterpret_cast<char*>(&_impl_.value_)) + sizeof(_impl_.direction_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RotateAzimuthRelative::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> RotateAzimuthRelative::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RotateAzimuthRelative_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float value = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(RotateAzimuthRelative, _impl_.value_)}},
    // float speed = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(RotateAzimuthRelative, _impl_.speed_)}},
    // .ser.JonGuiDataRotaryDirection direction = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RotateAzimuthRelative, _impl_.direction_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RotateAzimuthRelative, _impl_.direction_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float value = 1;
    {PROTOBUF_FIELD_OFFSET(RotateAzimuthRelative, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float speed = 2;
    {PROTOBUF_FIELD_OFFSET(RotateAzimuthRelative, _impl_.speed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // .ser.JonGuiDataRotaryDirection direction = 3;
    {PROTOBUF_FIELD_OFFSET(RotateAzimuthRelative, _impl_.direction_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RotateAzimuthRelative::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.RotaryPlatform.RotateAzimuthRelative)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_value(), target);
  }

  // float speed = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed = this->_internal_speed();
  ::uint32_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_speed(), target);
  }

  // .ser.JonGuiDataRotaryDirection direction = 3;
  if (this->_internal_direction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_direction(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.RotaryPlatform.RotateAzimuthRelative)
  return target;
}

::size_t RotateAzimuthRelative::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.RotaryPlatform.RotateAzimuthRelative)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 5;
  }

  // float speed = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed = this->_internal_speed();
  ::uint32_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    total_size += 5;
  }

  // .ser.JonGuiDataRotaryDirection direction = 3;
  if (this->_internal_direction() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_direction());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RotateAzimuthRelative::_class_data_ = {
    RotateAzimuthRelative::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RotateAzimuthRelative::GetClassData() const {
  return &_class_data_;
}

void RotateAzimuthRelative::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RotateAzimuthRelative*>(&to_msg);
  auto& from = static_cast<const RotateAzimuthRelative&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.RotaryPlatform.RotateAzimuthRelative)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = from._internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed = from._internal_speed();
  ::uint32_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    _this->_internal_set_speed(from._internal_speed());
  }
  if (from._internal_direction() != 0) {
    _this->_internal_set_direction(from._internal_direction());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RotateAzimuthRelative::CopyFrom(const RotateAzimuthRelative& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.RotaryPlatform.RotateAzimuthRelative)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RotateAzimuthRelative::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RotateAzimuthRelative::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RotateAzimuthRelative::InternalSwap(RotateAzimuthRelative* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RotateAzimuthRelative, _impl_.direction_)
      + sizeof(RotateAzimuthRelative::_impl_.direction_)
      - PROTOBUF_FIELD_OFFSET(RotateAzimuthRelative, _impl_.value_)>(
          reinterpret_cast<char*>(&_impl_.value_),
          reinterpret_cast<char*>(&other->_impl_.value_));
}

::google::protobuf::Metadata RotateAzimuthRelative::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[11]);
}
// ===================================================================

class RotateAzimuthRelativeSet::_Internal {
 public:
};

RotateAzimuthRelativeSet::RotateAzimuthRelativeSet(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.RotateAzimuthRelativeSet)
}
RotateAzimuthRelativeSet::RotateAzimuthRelativeSet(
    ::google::protobuf::Arena* arena, const RotateAzimuthRelativeSet& from)
    : RotateAzimuthRelativeSet(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RotateAzimuthRelativeSet::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RotateAzimuthRelativeSet::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, value_),
           0,
           offsetof(Impl_, direction_) -
               offsetof(Impl_, value_) +
               sizeof(Impl_::direction_));
}
RotateAzimuthRelativeSet::~RotateAzimuthRelativeSet() {
  // @@protoc_insertion_point(destructor:cmd.RotaryPlatform.RotateAzimuthRelativeSet)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RotateAzimuthRelativeSet::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RotateAzimuthRelativeSet::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.RotaryPlatform.RotateAzimuthRelativeSet)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.value_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.direction_) -
      reinterpret_cast<char*>(&_impl_.value_)) + sizeof(_impl_.direction_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RotateAzimuthRelativeSet::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> RotateAzimuthRelativeSet::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RotateAzimuthRelativeSet_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .ser.JonGuiDataRotaryDirection direction = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RotateAzimuthRelativeSet, _impl_.direction_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RotateAzimuthRelativeSet, _impl_.direction_)}},
    // float value = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(RotateAzimuthRelativeSet, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float value = 1;
    {PROTOBUF_FIELD_OFFSET(RotateAzimuthRelativeSet, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // .ser.JonGuiDataRotaryDirection direction = 2;
    {PROTOBUF_FIELD_OFFSET(RotateAzimuthRelativeSet, _impl_.direction_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RotateAzimuthRelativeSet::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.RotaryPlatform.RotateAzimuthRelativeSet)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_value(), target);
  }

  // .ser.JonGuiDataRotaryDirection direction = 2;
  if (this->_internal_direction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_direction(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.RotaryPlatform.RotateAzimuthRelativeSet)
  return target;
}

::size_t RotateAzimuthRelativeSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.RotaryPlatform.RotateAzimuthRelativeSet)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 5;
  }

  // .ser.JonGuiDataRotaryDirection direction = 2;
  if (this->_internal_direction() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_direction());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RotateAzimuthRelativeSet::_class_data_ = {
    RotateAzimuthRelativeSet::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RotateAzimuthRelativeSet::GetClassData() const {
  return &_class_data_;
}

void RotateAzimuthRelativeSet::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RotateAzimuthRelativeSet*>(&to_msg);
  auto& from = static_cast<const RotateAzimuthRelativeSet&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.RotaryPlatform.RotateAzimuthRelativeSet)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = from._internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  if (from._internal_direction() != 0) {
    _this->_internal_set_direction(from._internal_direction());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RotateAzimuthRelativeSet::CopyFrom(const RotateAzimuthRelativeSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.RotaryPlatform.RotateAzimuthRelativeSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RotateAzimuthRelativeSet::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RotateAzimuthRelativeSet::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RotateAzimuthRelativeSet::InternalSwap(RotateAzimuthRelativeSet* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RotateAzimuthRelativeSet, _impl_.direction_)
      + sizeof(RotateAzimuthRelativeSet::_impl_.direction_)
      - PROTOBUF_FIELD_OFFSET(RotateAzimuthRelativeSet, _impl_.value_)>(
          reinterpret_cast<char*>(&_impl_.value_),
          reinterpret_cast<char*>(&other->_impl_.value_));
}

::google::protobuf::Metadata RotateAzimuthRelativeSet::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[12]);
}
// ===================================================================

class SetPlatformAzimuth::_Internal {
 public:
};

SetPlatformAzimuth::SetPlatformAzimuth(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.SetPlatformAzimuth)
}
SetPlatformAzimuth::SetPlatformAzimuth(
    ::google::protobuf::Arena* arena, const SetPlatformAzimuth& from)
    : SetPlatformAzimuth(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetPlatformAzimuth::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetPlatformAzimuth::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
SetPlatformAzimuth::~SetPlatformAzimuth() {
  // @@protoc_insertion_point(destructor:cmd.RotaryPlatform.SetPlatformAzimuth)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetPlatformAzimuth::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetPlatformAzimuth::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.RotaryPlatform.SetPlatformAzimuth)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetPlatformAzimuth::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetPlatformAzimuth::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetPlatformAzimuth_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float value = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(SetPlatformAzimuth, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float value = 1;
    {PROTOBUF_FIELD_OFFSET(SetPlatformAzimuth, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetPlatformAzimuth::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.RotaryPlatform.SetPlatformAzimuth)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.RotaryPlatform.SetPlatformAzimuth)
  return target;
}

::size_t SetPlatformAzimuth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.RotaryPlatform.SetPlatformAzimuth)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetPlatformAzimuth::_class_data_ = {
    SetPlatformAzimuth::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetPlatformAzimuth::GetClassData() const {
  return &_class_data_;
}

void SetPlatformAzimuth::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetPlatformAzimuth*>(&to_msg);
  auto& from = static_cast<const SetPlatformAzimuth&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.RotaryPlatform.SetPlatformAzimuth)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = from._internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetPlatformAzimuth::CopyFrom(const SetPlatformAzimuth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.RotaryPlatform.SetPlatformAzimuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetPlatformAzimuth::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetPlatformAzimuth::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetPlatformAzimuth::InternalSwap(SetPlatformAzimuth* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata SetPlatformAzimuth::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[13]);
}
// ===================================================================

class SetPlatformElevation::_Internal {
 public:
};

SetPlatformElevation::SetPlatformElevation(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.SetPlatformElevation)
}
SetPlatformElevation::SetPlatformElevation(
    ::google::protobuf::Arena* arena, const SetPlatformElevation& from)
    : SetPlatformElevation(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetPlatformElevation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetPlatformElevation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
SetPlatformElevation::~SetPlatformElevation() {
  // @@protoc_insertion_point(destructor:cmd.RotaryPlatform.SetPlatformElevation)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetPlatformElevation::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetPlatformElevation::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.RotaryPlatform.SetPlatformElevation)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetPlatformElevation::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetPlatformElevation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetPlatformElevation_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float value = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(SetPlatformElevation, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float value = 1;
    {PROTOBUF_FIELD_OFFSET(SetPlatformElevation, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetPlatformElevation::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.RotaryPlatform.SetPlatformElevation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.RotaryPlatform.SetPlatformElevation)
  return target;
}

::size_t SetPlatformElevation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.RotaryPlatform.SetPlatformElevation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetPlatformElevation::_class_data_ = {
    SetPlatformElevation::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetPlatformElevation::GetClassData() const {
  return &_class_data_;
}

void SetPlatformElevation::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetPlatformElevation*>(&to_msg);
  auto& from = static_cast<const SetPlatformElevation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.RotaryPlatform.SetPlatformElevation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = from._internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetPlatformElevation::CopyFrom(const SetPlatformElevation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.RotaryPlatform.SetPlatformElevation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetPlatformElevation::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetPlatformElevation::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetPlatformElevation::InternalSwap(SetPlatformElevation* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata SetPlatformElevation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[14]);
}
// ===================================================================

class SetPlatformBank::_Internal {
 public:
};

SetPlatformBank::SetPlatformBank(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.SetPlatformBank)
}
SetPlatformBank::SetPlatformBank(
    ::google::protobuf::Arena* arena, const SetPlatformBank& from)
    : SetPlatformBank(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetPlatformBank::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetPlatformBank::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
SetPlatformBank::~SetPlatformBank() {
  // @@protoc_insertion_point(destructor:cmd.RotaryPlatform.SetPlatformBank)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetPlatformBank::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetPlatformBank::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.RotaryPlatform.SetPlatformBank)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetPlatformBank::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetPlatformBank::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetPlatformBank_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float value = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(SetPlatformBank, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float value = 1;
    {PROTOBUF_FIELD_OFFSET(SetPlatformBank, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetPlatformBank::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.RotaryPlatform.SetPlatformBank)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.RotaryPlatform.SetPlatformBank)
  return target;
}

::size_t SetPlatformBank::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.RotaryPlatform.SetPlatformBank)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetPlatformBank::_class_data_ = {
    SetPlatformBank::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetPlatformBank::GetClassData() const {
  return &_class_data_;
}

void SetPlatformBank::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetPlatformBank*>(&to_msg);
  auto& from = static_cast<const SetPlatformBank&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.RotaryPlatform.SetPlatformBank)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = from._internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetPlatformBank::CopyFrom(const SetPlatformBank& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.RotaryPlatform.SetPlatformBank)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetPlatformBank::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetPlatformBank::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetPlatformBank::InternalSwap(SetPlatformBank* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata SetPlatformBank::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[15]);
}
// ===================================================================

class GetMeteo::_Internal {
 public:
};

GetMeteo::GetMeteo(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.GetMeteo)
}
GetMeteo::GetMeteo(
    ::google::protobuf::Arena* arena,
    const GetMeteo& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  GetMeteo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.RotaryPlatform.GetMeteo)
}









::google::protobuf::Metadata GetMeteo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[16]);
}
// ===================================================================

class Azimuth::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::Azimuth, _impl_._oneof_case_);
  static const ::cmd::RotaryPlatform::SetAzimuthValue& set_value(const Azimuth* msg);
  static const ::cmd::RotaryPlatform::RotateAzimuthTo& rotate_to(const Azimuth* msg);
  static const ::cmd::RotaryPlatform::RotateAzimuth& rotate(const Azimuth* msg);
  static const ::cmd::RotaryPlatform::RotateAzimuthRelative& relative(const Azimuth* msg);
  static const ::cmd::RotaryPlatform::RotateAzimuthRelativeSet& relative_set(const Azimuth* msg);
  static const ::cmd::RotaryPlatform::HaltAzimuth& halt(const Azimuth* msg);
};

const ::cmd::RotaryPlatform::SetAzimuthValue& Azimuth::_Internal::set_value(const Azimuth* msg) {
  return *msg->_impl_.cmd_.set_value_;
}
const ::cmd::RotaryPlatform::RotateAzimuthTo& Azimuth::_Internal::rotate_to(const Azimuth* msg) {
  return *msg->_impl_.cmd_.rotate_to_;
}
const ::cmd::RotaryPlatform::RotateAzimuth& Azimuth::_Internal::rotate(const Azimuth* msg) {
  return *msg->_impl_.cmd_.rotate_;
}
const ::cmd::RotaryPlatform::RotateAzimuthRelative& Azimuth::_Internal::relative(const Azimuth* msg) {
  return *msg->_impl_.cmd_.relative_;
}
const ::cmd::RotaryPlatform::RotateAzimuthRelativeSet& Azimuth::_Internal::relative_set(const Azimuth* msg) {
  return *msg->_impl_.cmd_.relative_set_;
}
const ::cmd::RotaryPlatform::HaltAzimuth& Azimuth::_Internal::halt(const Azimuth* msg) {
  return *msg->_impl_.cmd_.halt_;
}
void Azimuth::set_allocated_set_value(::cmd::RotaryPlatform::SetAzimuthValue* set_value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (set_value) {
    ::google::protobuf::Arena* submessage_arena = set_value->GetArena();
    if (message_arena != submessage_arena) {
      set_value = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_value, submessage_arena);
    }
    set_has_set_value();
    _impl_.cmd_.set_value_ = set_value;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Azimuth.set_value)
}
void Azimuth::set_allocated_rotate_to(::cmd::RotaryPlatform::RotateAzimuthTo* rotate_to) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (rotate_to) {
    ::google::protobuf::Arena* submessage_arena = rotate_to->GetArena();
    if (message_arena != submessage_arena) {
      rotate_to = ::google::protobuf::internal::GetOwnedMessage(message_arena, rotate_to, submessage_arena);
    }
    set_has_rotate_to();
    _impl_.cmd_.rotate_to_ = rotate_to;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Azimuth.rotate_to)
}
void Azimuth::set_allocated_rotate(::cmd::RotaryPlatform::RotateAzimuth* rotate) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (rotate) {
    ::google::protobuf::Arena* submessage_arena = rotate->GetArena();
    if (message_arena != submessage_arena) {
      rotate = ::google::protobuf::internal::GetOwnedMessage(message_arena, rotate, submessage_arena);
    }
    set_has_rotate();
    _impl_.cmd_.rotate_ = rotate;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Azimuth.rotate)
}
void Azimuth::set_allocated_relative(::cmd::RotaryPlatform::RotateAzimuthRelative* relative) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (relative) {
    ::google::protobuf::Arena* submessage_arena = relative->GetArena();
    if (message_arena != submessage_arena) {
      relative = ::google::protobuf::internal::GetOwnedMessage(message_arena, relative, submessage_arena);
    }
    set_has_relative();
    _impl_.cmd_.relative_ = relative;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Azimuth.relative)
}
void Azimuth::set_allocated_relative_set(::cmd::RotaryPlatform::RotateAzimuthRelativeSet* relative_set) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (relative_set) {
    ::google::protobuf::Arena* submessage_arena = relative_set->GetArena();
    if (message_arena != submessage_arena) {
      relative_set = ::google::protobuf::internal::GetOwnedMessage(message_arena, relative_set, submessage_arena);
    }
    set_has_relative_set();
    _impl_.cmd_.relative_set_ = relative_set;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Azimuth.relative_set)
}
void Azimuth::set_allocated_halt(::cmd::RotaryPlatform::HaltAzimuth* halt) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (halt) {
    ::google::protobuf::Arena* submessage_arena = halt->GetArena();
    if (message_arena != submessage_arena) {
      halt = ::google::protobuf::internal::GetOwnedMessage(message_arena, halt, submessage_arena);
    }
    set_has_halt();
    _impl_.cmd_.halt_ = halt;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Azimuth.halt)
}
Azimuth::Azimuth(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.Azimuth)
}
inline PROTOBUF_NDEBUG_INLINE Azimuth::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Azimuth::Azimuth(
    ::google::protobuf::Arena* arena,
    const Azimuth& from)
    : ::google::protobuf::Message(arena) {
  Azimuth* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (cmd_case()) {
    case CMD_NOT_SET:
      break;
      case kSetValue:
        _impl_.cmd_.set_value_ = CreateMaybeMessage<::cmd::RotaryPlatform::SetAzimuthValue>(arena, *from._impl_.cmd_.set_value_);
        break;
      case kRotateTo:
        _impl_.cmd_.rotate_to_ = CreateMaybeMessage<::cmd::RotaryPlatform::RotateAzimuthTo>(arena, *from._impl_.cmd_.rotate_to_);
        break;
      case kRotate:
        _impl_.cmd_.rotate_ = CreateMaybeMessage<::cmd::RotaryPlatform::RotateAzimuth>(arena, *from._impl_.cmd_.rotate_);
        break;
      case kRelative:
        _impl_.cmd_.relative_ = CreateMaybeMessage<::cmd::RotaryPlatform::RotateAzimuthRelative>(arena, *from._impl_.cmd_.relative_);
        break;
      case kRelativeSet:
        _impl_.cmd_.relative_set_ = CreateMaybeMessage<::cmd::RotaryPlatform::RotateAzimuthRelativeSet>(arena, *from._impl_.cmd_.relative_set_);
        break;
      case kHalt:
        _impl_.cmd_.halt_ = CreateMaybeMessage<::cmd::RotaryPlatform::HaltAzimuth>(arena, *from._impl_.cmd_.halt_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:cmd.RotaryPlatform.Azimuth)
}
inline PROTOBUF_NDEBUG_INLINE Azimuth::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Azimuth::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Azimuth::~Azimuth() {
  // @@protoc_insertion_point(destructor:cmd.RotaryPlatform.Azimuth)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Azimuth::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_cmd()) {
    clear_cmd();
  }
  _impl_.~Impl_();
}

void Azimuth::clear_cmd() {
// @@protoc_insertion_point(one_of_clear_start:cmd.RotaryPlatform.Azimuth)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (cmd_case()) {
    case kSetValue: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.set_value_;
      }
      break;
    }
    case kRotateTo: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.rotate_to_;
      }
      break;
    }
    case kRotate: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.rotate_;
      }
      break;
    }
    case kRelative: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.relative_;
      }
      break;
    }
    case kRelativeSet: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.relative_set_;
      }
      break;
    }
    case kHalt: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.halt_;
      }
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CMD_NOT_SET;
}


PROTOBUF_NOINLINE void Azimuth::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.RotaryPlatform.Azimuth)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_cmd();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Azimuth::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 6, 6, 0, 2> Azimuth::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Azimuth_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .cmd.RotaryPlatform.SetAzimuthValue set_value = 1;
    {PROTOBUF_FIELD_OFFSET(Azimuth, _impl_.cmd_.set_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.RotaryPlatform.RotateAzimuthTo rotate_to = 2;
    {PROTOBUF_FIELD_OFFSET(Azimuth, _impl_.cmd_.rotate_to_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.RotaryPlatform.RotateAzimuth rotate = 3;
    {PROTOBUF_FIELD_OFFSET(Azimuth, _impl_.cmd_.rotate_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.RotaryPlatform.RotateAzimuthRelative relative = 4;
    {PROTOBUF_FIELD_OFFSET(Azimuth, _impl_.cmd_.relative_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.RotaryPlatform.RotateAzimuthRelativeSet relative_set = 5;
    {PROTOBUF_FIELD_OFFSET(Azimuth, _impl_.cmd_.relative_set_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.RotaryPlatform.HaltAzimuth halt = 6;
    {PROTOBUF_FIELD_OFFSET(Azimuth, _impl_.cmd_.halt_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cmd::RotaryPlatform::SetAzimuthValue>()},
    {::_pbi::TcParser::GetTable<::cmd::RotaryPlatform::RotateAzimuthTo>()},
    {::_pbi::TcParser::GetTable<::cmd::RotaryPlatform::RotateAzimuth>()},
    {::_pbi::TcParser::GetTable<::cmd::RotaryPlatform::RotateAzimuthRelative>()},
    {::_pbi::TcParser::GetTable<::cmd::RotaryPlatform::RotateAzimuthRelativeSet>()},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::RotaryPlatform::_HaltAzimuth_default_instance_},
  }}, {{
  }},
};

::uint8_t* Azimuth::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.RotaryPlatform.Azimuth)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (cmd_case()) {
    case kSetValue: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::set_value(this),
          _Internal::set_value(this).GetCachedSize(), target, stream);
      break;
    }
    case kRotateTo: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::rotate_to(this),
          _Internal::rotate_to(this).GetCachedSize(), target, stream);
      break;
    }
    case kRotate: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::rotate(this),
          _Internal::rotate(this).GetCachedSize(), target, stream);
      break;
    }
    case kRelative: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, _Internal::relative(this),
          _Internal::relative(this).GetCachedSize(), target, stream);
      break;
    }
    case kRelativeSet: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, _Internal::relative_set(this),
          _Internal::relative_set(this).GetCachedSize(), target, stream);
      break;
    }
    case kHalt: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, _Internal::halt(this),
          _Internal::halt(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.RotaryPlatform.Azimuth)
  return target;
}

::size_t Azimuth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.RotaryPlatform.Azimuth)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (cmd_case()) {
    // .cmd.RotaryPlatform.SetAzimuthValue set_value = 1;
    case kSetValue: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.set_value_);
      break;
    }
    // .cmd.RotaryPlatform.RotateAzimuthTo rotate_to = 2;
    case kRotateTo: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.rotate_to_);
      break;
    }
    // .cmd.RotaryPlatform.RotateAzimuth rotate = 3;
    case kRotate: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.rotate_);
      break;
    }
    // .cmd.RotaryPlatform.RotateAzimuthRelative relative = 4;
    case kRelative: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.relative_);
      break;
    }
    // .cmd.RotaryPlatform.RotateAzimuthRelativeSet relative_set = 5;
    case kRelativeSet: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.relative_set_);
      break;
    }
    // .cmd.RotaryPlatform.HaltAzimuth halt = 6;
    case kHalt: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.halt_);
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Azimuth::_class_data_ = {
    Azimuth::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Azimuth::GetClassData() const {
  return &_class_data_;
}

void Azimuth::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Azimuth*>(&to_msg);
  auto& from = static_cast<const Azimuth&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.RotaryPlatform.Azimuth)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.cmd_case()) {
    case kSetValue: {
      _this->_internal_mutable_set_value()->::cmd::RotaryPlatform::SetAzimuthValue::MergeFrom(
          from._internal_set_value());
      break;
    }
    case kRotateTo: {
      _this->_internal_mutable_rotate_to()->::cmd::RotaryPlatform::RotateAzimuthTo::MergeFrom(
          from._internal_rotate_to());
      break;
    }
    case kRotate: {
      _this->_internal_mutable_rotate()->::cmd::RotaryPlatform::RotateAzimuth::MergeFrom(
          from._internal_rotate());
      break;
    }
    case kRelative: {
      _this->_internal_mutable_relative()->::cmd::RotaryPlatform::RotateAzimuthRelative::MergeFrom(
          from._internal_relative());
      break;
    }
    case kRelativeSet: {
      _this->_internal_mutable_relative_set()->::cmd::RotaryPlatform::RotateAzimuthRelativeSet::MergeFrom(
          from._internal_relative_set());
      break;
    }
    case kHalt: {
      _this->_internal_mutable_halt()->::cmd::RotaryPlatform::HaltAzimuth::MergeFrom(
          from._internal_halt());
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Azimuth::CopyFrom(const Azimuth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.RotaryPlatform.Azimuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Azimuth::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Azimuth::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Azimuth::InternalSwap(Azimuth* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.cmd_, other->_impl_.cmd_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Azimuth::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[17]);
}
// ===================================================================

class Start::_Internal {
 public:
};

Start::Start(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.Start)
}
Start::Start(
    ::google::protobuf::Arena* arena,
    const Start& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  Start* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.RotaryPlatform.Start)
}









::google::protobuf::Metadata Start::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[18]);
}
// ===================================================================

class Stop::_Internal {
 public:
};

Stop::Stop(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.Stop)
}
Stop::Stop(
    ::google::protobuf::Arena* arena,
    const Stop& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  Stop* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.RotaryPlatform.Stop)
}









::google::protobuf::Metadata Stop::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[19]);
}
// ===================================================================

class Halt::_Internal {
 public:
};

Halt::Halt(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.Halt)
}
Halt::Halt(
    ::google::protobuf::Arena* arena,
    const Halt& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  Halt* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.RotaryPlatform.Halt)
}









::google::protobuf::Metadata Halt::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[20]);
}
// ===================================================================

class ScanStart::_Internal {
 public:
};

ScanStart::ScanStart(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.ScanStart)
}
ScanStart::ScanStart(
    ::google::protobuf::Arena* arena,
    const ScanStart& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  ScanStart* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.RotaryPlatform.ScanStart)
}









::google::protobuf::Metadata ScanStart::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[21]);
}
// ===================================================================

class ScanStop::_Internal {
 public:
};

ScanStop::ScanStop(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.ScanStop)
}
ScanStop::ScanStop(
    ::google::protobuf::Arena* arena,
    const ScanStop& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  ScanStop* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.RotaryPlatform.ScanStop)
}









::google::protobuf::Metadata ScanStop::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[22]);
}
// ===================================================================

class ScanPause::_Internal {
 public:
};

ScanPause::ScanPause(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.ScanPause)
}
ScanPause::ScanPause(
    ::google::protobuf::Arena* arena,
    const ScanPause& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  ScanPause* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.RotaryPlatform.ScanPause)
}









::google::protobuf::Metadata ScanPause::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[23]);
}
// ===================================================================

class ScanUnpause::_Internal {
 public:
};

ScanUnpause::ScanUnpause(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.ScanUnpause)
}
ScanUnpause::ScanUnpause(
    ::google::protobuf::Arena* arena,
    const ScanUnpause& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  ScanUnpause* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.RotaryPlatform.ScanUnpause)
}









::google::protobuf::Metadata ScanUnpause::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[24]);
}
// ===================================================================

class HaltAzimuth::_Internal {
 public:
};

HaltAzimuth::HaltAzimuth(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.HaltAzimuth)
}
HaltAzimuth::HaltAzimuth(
    ::google::protobuf::Arena* arena,
    const HaltAzimuth& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  HaltAzimuth* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.RotaryPlatform.HaltAzimuth)
}









::google::protobuf::Metadata HaltAzimuth::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[25]);
}
// ===================================================================

class HaltElevation::_Internal {
 public:
};

HaltElevation::HaltElevation(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.HaltElevation)
}
HaltElevation::HaltElevation(
    ::google::protobuf::Arena* arena,
    const HaltElevation& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  HaltElevation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.RotaryPlatform.HaltElevation)
}









::google::protobuf::Metadata HaltElevation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[26]);
}
// ===================================================================

class ScanPrev::_Internal {
 public:
};

ScanPrev::ScanPrev(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.ScanPrev)
}
ScanPrev::ScanPrev(
    ::google::protobuf::Arena* arena,
    const ScanPrev& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  ScanPrev* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.RotaryPlatform.ScanPrev)
}









::google::protobuf::Metadata ScanPrev::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[27]);
}
// ===================================================================

class ScanNext::_Internal {
 public:
};

ScanNext::ScanNext(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.ScanNext)
}
ScanNext::ScanNext(
    ::google::protobuf::Arena* arena,
    const ScanNext& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  ScanNext* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.RotaryPlatform.ScanNext)
}









::google::protobuf::Metadata ScanNext::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[28]);
}
// ===================================================================

class ScanRefreshNodeList::_Internal {
 public:
};

ScanRefreshNodeList::ScanRefreshNodeList(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.ScanRefreshNodeList)
}
ScanRefreshNodeList::ScanRefreshNodeList(
    ::google::protobuf::Arena* arena,
    const ScanRefreshNodeList& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  ScanRefreshNodeList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.RotaryPlatform.ScanRefreshNodeList)
}









::google::protobuf::Metadata ScanRefreshNodeList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[29]);
}
// ===================================================================

class ScanSelectNode::_Internal {
 public:
};

ScanSelectNode::ScanSelectNode(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.ScanSelectNode)
}
ScanSelectNode::ScanSelectNode(
    ::google::protobuf::Arena* arena, const ScanSelectNode& from)
    : ScanSelectNode(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ScanSelectNode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ScanSelectNode::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.index_ = {};
}
ScanSelectNode::~ScanSelectNode() {
  // @@protoc_insertion_point(destructor:cmd.RotaryPlatform.ScanSelectNode)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ScanSelectNode::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ScanSelectNode::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.RotaryPlatform.ScanSelectNode)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.index_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ScanSelectNode::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ScanSelectNode::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ScanSelectNode_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ScanSelectNode, _impl_.index_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ScanSelectNode, _impl_.index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 index = 1;
    {PROTOBUF_FIELD_OFFSET(ScanSelectNode, _impl_.index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ScanSelectNode::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.RotaryPlatform.ScanSelectNode)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.RotaryPlatform.ScanSelectNode)
  return target;
}

::size_t ScanSelectNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.RotaryPlatform.ScanSelectNode)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ScanSelectNode::_class_data_ = {
    ScanSelectNode::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ScanSelectNode::GetClassData() const {
  return &_class_data_;
}

void ScanSelectNode::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ScanSelectNode*>(&to_msg);
  auto& from = static_cast<const ScanSelectNode&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.RotaryPlatform.ScanSelectNode)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_index() != 0) {
    _this->_internal_set_index(from._internal_index());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ScanSelectNode::CopyFrom(const ScanSelectNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.RotaryPlatform.ScanSelectNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ScanSelectNode::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ScanSelectNode::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ScanSelectNode::InternalSwap(ScanSelectNode* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.index_, other->_impl_.index_);
}

::google::protobuf::Metadata ScanSelectNode::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[30]);
}
// ===================================================================

class ScanDeleteNode::_Internal {
 public:
};

ScanDeleteNode::ScanDeleteNode(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.ScanDeleteNode)
}
ScanDeleteNode::ScanDeleteNode(
    ::google::protobuf::Arena* arena, const ScanDeleteNode& from)
    : ScanDeleteNode(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ScanDeleteNode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ScanDeleteNode::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.index_ = {};
}
ScanDeleteNode::~ScanDeleteNode() {
  // @@protoc_insertion_point(destructor:cmd.RotaryPlatform.ScanDeleteNode)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ScanDeleteNode::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ScanDeleteNode::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.RotaryPlatform.ScanDeleteNode)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.index_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ScanDeleteNode::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ScanDeleteNode::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ScanDeleteNode_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ScanDeleteNode, _impl_.index_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ScanDeleteNode, _impl_.index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 index = 1;
    {PROTOBUF_FIELD_OFFSET(ScanDeleteNode, _impl_.index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ScanDeleteNode::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.RotaryPlatform.ScanDeleteNode)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.RotaryPlatform.ScanDeleteNode)
  return target;
}

::size_t ScanDeleteNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.RotaryPlatform.ScanDeleteNode)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ScanDeleteNode::_class_data_ = {
    ScanDeleteNode::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ScanDeleteNode::GetClassData() const {
  return &_class_data_;
}

void ScanDeleteNode::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ScanDeleteNode*>(&to_msg);
  auto& from = static_cast<const ScanDeleteNode&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.RotaryPlatform.ScanDeleteNode)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_index() != 0) {
    _this->_internal_set_index(from._internal_index());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ScanDeleteNode::CopyFrom(const ScanDeleteNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.RotaryPlatform.ScanDeleteNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ScanDeleteNode::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ScanDeleteNode::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ScanDeleteNode::InternalSwap(ScanDeleteNode* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.index_, other->_impl_.index_);
}

::google::protobuf::Metadata ScanDeleteNode::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[31]);
}
// ===================================================================

class ScanUpdateNode::_Internal {
 public:
};

ScanUpdateNode::ScanUpdateNode(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.ScanUpdateNode)
}
ScanUpdateNode::ScanUpdateNode(
    ::google::protobuf::Arena* arena, const ScanUpdateNode& from)
    : ScanUpdateNode(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ScanUpdateNode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ScanUpdateNode::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, index_),
           0,
           offsetof(Impl_, heatzoomtablevalue_) -
               offsetof(Impl_, index_) +
               sizeof(Impl_::heatzoomtablevalue_));
}
ScanUpdateNode::~ScanUpdateNode() {
  // @@protoc_insertion_point(destructor:cmd.RotaryPlatform.ScanUpdateNode)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ScanUpdateNode::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ScanUpdateNode::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.RotaryPlatform.ScanUpdateNode)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.index_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.heatzoomtablevalue_) -
      reinterpret_cast<char*>(&_impl_.index_)) + sizeof(_impl_.heatzoomtablevalue_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ScanUpdateNode::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2> ScanUpdateNode::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ScanUpdateNode_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ScanUpdateNode, _impl_.index_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ScanUpdateNode, _impl_.index_)}},
    // int32 DayZoomTableValue = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ScanUpdateNode, _impl_.dayzoomtablevalue_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ScanUpdateNode, _impl_.dayzoomtablevalue_)}},
    // int32 HeatZoomTableValue = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ScanUpdateNode, _impl_.heatzoomtablevalue_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ScanUpdateNode, _impl_.heatzoomtablevalue_)}},
    // double azimuth = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(ScanUpdateNode, _impl_.azimuth_)}},
    // double elevation = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(ScanUpdateNode, _impl_.elevation_)}},
    // double linger = 6;
    {::_pbi::TcParser::FastF64S1,
     {49, 63, 0, PROTOBUF_FIELD_OFFSET(ScanUpdateNode, _impl_.linger_)}},
    // double speed = 7;
    {::_pbi::TcParser::FastF64S1,
     {57, 63, 0, PROTOBUF_FIELD_OFFSET(ScanUpdateNode, _impl_.speed_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 index = 1;
    {PROTOBUF_FIELD_OFFSET(ScanUpdateNode, _impl_.index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 DayZoomTableValue = 2;
    {PROTOBUF_FIELD_OFFSET(ScanUpdateNode, _impl_.dayzoomtablevalue_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 HeatZoomTableValue = 3;
    {PROTOBUF_FIELD_OFFSET(ScanUpdateNode, _impl_.heatzoomtablevalue_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // double azimuth = 4;
    {PROTOBUF_FIELD_OFFSET(ScanUpdateNode, _impl_.azimuth_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double elevation = 5;
    {PROTOBUF_FIELD_OFFSET(ScanUpdateNode, _impl_.elevation_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double linger = 6;
    {PROTOBUF_FIELD_OFFSET(ScanUpdateNode, _impl_.linger_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double speed = 7;
    {PROTOBUF_FIELD_OFFSET(ScanUpdateNode, _impl_.speed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ScanUpdateNode::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.RotaryPlatform.ScanUpdateNode)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_index(), target);
  }

  // int32 DayZoomTableValue = 2;
  if (this->_internal_dayzoomtablevalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_dayzoomtablevalue(), target);
  }

  // int32 HeatZoomTableValue = 3;
  if (this->_internal_heatzoomtablevalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_heatzoomtablevalue(), target);
  }

  // double azimuth = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_azimuth = this->_internal_azimuth();
  ::uint64_t raw_azimuth;
  memcpy(&raw_azimuth, &tmp_azimuth, sizeof(tmp_azimuth));
  if (raw_azimuth != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_azimuth(), target);
  }

  // double elevation = 5;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_elevation = this->_internal_elevation();
  ::uint64_t raw_elevation;
  memcpy(&raw_elevation, &tmp_elevation, sizeof(tmp_elevation));
  if (raw_elevation != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        5, this->_internal_elevation(), target);
  }

  // double linger = 6;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_linger = this->_internal_linger();
  ::uint64_t raw_linger;
  memcpy(&raw_linger, &tmp_linger, sizeof(tmp_linger));
  if (raw_linger != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        6, this->_internal_linger(), target);
  }

  // double speed = 7;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_speed = this->_internal_speed();
  ::uint64_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        7, this->_internal_speed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.RotaryPlatform.ScanUpdateNode)
  return target;
}

::size_t ScanUpdateNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.RotaryPlatform.ScanUpdateNode)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_index());
  }

  // int32 DayZoomTableValue = 2;
  if (this->_internal_dayzoomtablevalue() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_dayzoomtablevalue());
  }

  // double azimuth = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_azimuth = this->_internal_azimuth();
  ::uint64_t raw_azimuth;
  memcpy(&raw_azimuth, &tmp_azimuth, sizeof(tmp_azimuth));
  if (raw_azimuth != 0) {
    total_size += 9;
  }

  // double elevation = 5;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_elevation = this->_internal_elevation();
  ::uint64_t raw_elevation;
  memcpy(&raw_elevation, &tmp_elevation, sizeof(tmp_elevation));
  if (raw_elevation != 0) {
    total_size += 9;
  }

  // double linger = 6;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_linger = this->_internal_linger();
  ::uint64_t raw_linger;
  memcpy(&raw_linger, &tmp_linger, sizeof(tmp_linger));
  if (raw_linger != 0) {
    total_size += 9;
  }

  // double speed = 7;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_speed = this->_internal_speed();
  ::uint64_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    total_size += 9;
  }

  // int32 HeatZoomTableValue = 3;
  if (this->_internal_heatzoomtablevalue() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_heatzoomtablevalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ScanUpdateNode::_class_data_ = {
    ScanUpdateNode::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ScanUpdateNode::GetClassData() const {
  return &_class_data_;
}

void ScanUpdateNode::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ScanUpdateNode*>(&to_msg);
  auto& from = static_cast<const ScanUpdateNode&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.RotaryPlatform.ScanUpdateNode)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_index() != 0) {
    _this->_internal_set_index(from._internal_index());
  }
  if (from._internal_dayzoomtablevalue() != 0) {
    _this->_internal_set_dayzoomtablevalue(from._internal_dayzoomtablevalue());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_azimuth = from._internal_azimuth();
  ::uint64_t raw_azimuth;
  memcpy(&raw_azimuth, &tmp_azimuth, sizeof(tmp_azimuth));
  if (raw_azimuth != 0) {
    _this->_internal_set_azimuth(from._internal_azimuth());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_elevation = from._internal_elevation();
  ::uint64_t raw_elevation;
  memcpy(&raw_elevation, &tmp_elevation, sizeof(tmp_elevation));
  if (raw_elevation != 0) {
    _this->_internal_set_elevation(from._internal_elevation());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_linger = from._internal_linger();
  ::uint64_t raw_linger;
  memcpy(&raw_linger, &tmp_linger, sizeof(tmp_linger));
  if (raw_linger != 0) {
    _this->_internal_set_linger(from._internal_linger());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_speed = from._internal_speed();
  ::uint64_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    _this->_internal_set_speed(from._internal_speed());
  }
  if (from._internal_heatzoomtablevalue() != 0) {
    _this->_internal_set_heatzoomtablevalue(from._internal_heatzoomtablevalue());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ScanUpdateNode::CopyFrom(const ScanUpdateNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.RotaryPlatform.ScanUpdateNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ScanUpdateNode::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ScanUpdateNode::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ScanUpdateNode::InternalSwap(ScanUpdateNode* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ScanUpdateNode, _impl_.heatzoomtablevalue_)
      + sizeof(ScanUpdateNode::_impl_.heatzoomtablevalue_)
      - PROTOBUF_FIELD_OFFSET(ScanUpdateNode, _impl_.index_)>(
          reinterpret_cast<char*>(&_impl_.index_),
          reinterpret_cast<char*>(&other->_impl_.index_));
}

::google::protobuf::Metadata ScanUpdateNode::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[32]);
}
// ===================================================================

class ScanAddNode::_Internal {
 public:
};

ScanAddNode::ScanAddNode(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.ScanAddNode)
}
ScanAddNode::ScanAddNode(
    ::google::protobuf::Arena* arena, const ScanAddNode& from)
    : ScanAddNode(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ScanAddNode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ScanAddNode::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, index_),
           0,
           offsetof(Impl_, heatzoomtablevalue_) -
               offsetof(Impl_, index_) +
               sizeof(Impl_::heatzoomtablevalue_));
}
ScanAddNode::~ScanAddNode() {
  // @@protoc_insertion_point(destructor:cmd.RotaryPlatform.ScanAddNode)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ScanAddNode::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ScanAddNode::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.RotaryPlatform.ScanAddNode)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.index_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.heatzoomtablevalue_) -
      reinterpret_cast<char*>(&_impl_.index_)) + sizeof(_impl_.heatzoomtablevalue_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ScanAddNode::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2> ScanAddNode::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ScanAddNode_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ScanAddNode, _impl_.index_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ScanAddNode, _impl_.index_)}},
    // int32 DayZoomTableValue = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ScanAddNode, _impl_.dayzoomtablevalue_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ScanAddNode, _impl_.dayzoomtablevalue_)}},
    // int32 HeatZoomTableValue = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ScanAddNode, _impl_.heatzoomtablevalue_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ScanAddNode, _impl_.heatzoomtablevalue_)}},
    // double azimuth = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(ScanAddNode, _impl_.azimuth_)}},
    // double elevation = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(ScanAddNode, _impl_.elevation_)}},
    // double linger = 6;
    {::_pbi::TcParser::FastF64S1,
     {49, 63, 0, PROTOBUF_FIELD_OFFSET(ScanAddNode, _impl_.linger_)}},
    // double speed = 7;
    {::_pbi::TcParser::FastF64S1,
     {57, 63, 0, PROTOBUF_FIELD_OFFSET(ScanAddNode, _impl_.speed_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 index = 1;
    {PROTOBUF_FIELD_OFFSET(ScanAddNode, _impl_.index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 DayZoomTableValue = 2;
    {PROTOBUF_FIELD_OFFSET(ScanAddNode, _impl_.dayzoomtablevalue_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 HeatZoomTableValue = 3;
    {PROTOBUF_FIELD_OFFSET(ScanAddNode, _impl_.heatzoomtablevalue_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // double azimuth = 4;
    {PROTOBUF_FIELD_OFFSET(ScanAddNode, _impl_.azimuth_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double elevation = 5;
    {PROTOBUF_FIELD_OFFSET(ScanAddNode, _impl_.elevation_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double linger = 6;
    {PROTOBUF_FIELD_OFFSET(ScanAddNode, _impl_.linger_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double speed = 7;
    {PROTOBUF_FIELD_OFFSET(ScanAddNode, _impl_.speed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ScanAddNode::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.RotaryPlatform.ScanAddNode)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_index(), target);
  }

  // int32 DayZoomTableValue = 2;
  if (this->_internal_dayzoomtablevalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_dayzoomtablevalue(), target);
  }

  // int32 HeatZoomTableValue = 3;
  if (this->_internal_heatzoomtablevalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_heatzoomtablevalue(), target);
  }

  // double azimuth = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_azimuth = this->_internal_azimuth();
  ::uint64_t raw_azimuth;
  memcpy(&raw_azimuth, &tmp_azimuth, sizeof(tmp_azimuth));
  if (raw_azimuth != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_azimuth(), target);
  }

  // double elevation = 5;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_elevation = this->_internal_elevation();
  ::uint64_t raw_elevation;
  memcpy(&raw_elevation, &tmp_elevation, sizeof(tmp_elevation));
  if (raw_elevation != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        5, this->_internal_elevation(), target);
  }

  // double linger = 6;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_linger = this->_internal_linger();
  ::uint64_t raw_linger;
  memcpy(&raw_linger, &tmp_linger, sizeof(tmp_linger));
  if (raw_linger != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        6, this->_internal_linger(), target);
  }

  // double speed = 7;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_speed = this->_internal_speed();
  ::uint64_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        7, this->_internal_speed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.RotaryPlatform.ScanAddNode)
  return target;
}

::size_t ScanAddNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.RotaryPlatform.ScanAddNode)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_index());
  }

  // int32 DayZoomTableValue = 2;
  if (this->_internal_dayzoomtablevalue() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_dayzoomtablevalue());
  }

  // double azimuth = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_azimuth = this->_internal_azimuth();
  ::uint64_t raw_azimuth;
  memcpy(&raw_azimuth, &tmp_azimuth, sizeof(tmp_azimuth));
  if (raw_azimuth != 0) {
    total_size += 9;
  }

  // double elevation = 5;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_elevation = this->_internal_elevation();
  ::uint64_t raw_elevation;
  memcpy(&raw_elevation, &tmp_elevation, sizeof(tmp_elevation));
  if (raw_elevation != 0) {
    total_size += 9;
  }

  // double linger = 6;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_linger = this->_internal_linger();
  ::uint64_t raw_linger;
  memcpy(&raw_linger, &tmp_linger, sizeof(tmp_linger));
  if (raw_linger != 0) {
    total_size += 9;
  }

  // double speed = 7;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_speed = this->_internal_speed();
  ::uint64_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    total_size += 9;
  }

  // int32 HeatZoomTableValue = 3;
  if (this->_internal_heatzoomtablevalue() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_heatzoomtablevalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ScanAddNode::_class_data_ = {
    ScanAddNode::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ScanAddNode::GetClassData() const {
  return &_class_data_;
}

void ScanAddNode::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ScanAddNode*>(&to_msg);
  auto& from = static_cast<const ScanAddNode&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.RotaryPlatform.ScanAddNode)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_index() != 0) {
    _this->_internal_set_index(from._internal_index());
  }
  if (from._internal_dayzoomtablevalue() != 0) {
    _this->_internal_set_dayzoomtablevalue(from._internal_dayzoomtablevalue());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_azimuth = from._internal_azimuth();
  ::uint64_t raw_azimuth;
  memcpy(&raw_azimuth, &tmp_azimuth, sizeof(tmp_azimuth));
  if (raw_azimuth != 0) {
    _this->_internal_set_azimuth(from._internal_azimuth());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_elevation = from._internal_elevation();
  ::uint64_t raw_elevation;
  memcpy(&raw_elevation, &tmp_elevation, sizeof(tmp_elevation));
  if (raw_elevation != 0) {
    _this->_internal_set_elevation(from._internal_elevation());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_linger = from._internal_linger();
  ::uint64_t raw_linger;
  memcpy(&raw_linger, &tmp_linger, sizeof(tmp_linger));
  if (raw_linger != 0) {
    _this->_internal_set_linger(from._internal_linger());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_speed = from._internal_speed();
  ::uint64_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    _this->_internal_set_speed(from._internal_speed());
  }
  if (from._internal_heatzoomtablevalue() != 0) {
    _this->_internal_set_heatzoomtablevalue(from._internal_heatzoomtablevalue());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ScanAddNode::CopyFrom(const ScanAddNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.RotaryPlatform.ScanAddNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ScanAddNode::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ScanAddNode::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ScanAddNode::InternalSwap(ScanAddNode* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ScanAddNode, _impl_.heatzoomtablevalue_)
      + sizeof(ScanAddNode::_impl_.heatzoomtablevalue_)
      - PROTOBUF_FIELD_OFFSET(ScanAddNode, _impl_.index_)>(
          reinterpret_cast<char*>(&_impl_.index_),
          reinterpret_cast<char*>(&other->_impl_.index_));
}

::google::protobuf::Metadata ScanAddNode::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[33]);
}
// ===================================================================

class Elevation::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::cmd::RotaryPlatform::Elevation, _impl_._oneof_case_);
  static const ::cmd::RotaryPlatform::SetElevationValue& set_value(const Elevation* msg);
  static const ::cmd::RotaryPlatform::RotateElevationTo& rotate_to(const Elevation* msg);
  static const ::cmd::RotaryPlatform::RotateElevation& rotate(const Elevation* msg);
  static const ::cmd::RotaryPlatform::RotateElevationRelative& relative(const Elevation* msg);
  static const ::cmd::RotaryPlatform::RotateElevationRelativeSet& relative_set(const Elevation* msg);
  static const ::cmd::RotaryPlatform::HaltElevation& halt(const Elevation* msg);
};

const ::cmd::RotaryPlatform::SetElevationValue& Elevation::_Internal::set_value(const Elevation* msg) {
  return *msg->_impl_.cmd_.set_value_;
}
const ::cmd::RotaryPlatform::RotateElevationTo& Elevation::_Internal::rotate_to(const Elevation* msg) {
  return *msg->_impl_.cmd_.rotate_to_;
}
const ::cmd::RotaryPlatform::RotateElevation& Elevation::_Internal::rotate(const Elevation* msg) {
  return *msg->_impl_.cmd_.rotate_;
}
const ::cmd::RotaryPlatform::RotateElevationRelative& Elevation::_Internal::relative(const Elevation* msg) {
  return *msg->_impl_.cmd_.relative_;
}
const ::cmd::RotaryPlatform::RotateElevationRelativeSet& Elevation::_Internal::relative_set(const Elevation* msg) {
  return *msg->_impl_.cmd_.relative_set_;
}
const ::cmd::RotaryPlatform::HaltElevation& Elevation::_Internal::halt(const Elevation* msg) {
  return *msg->_impl_.cmd_.halt_;
}
void Elevation::set_allocated_set_value(::cmd::RotaryPlatform::SetElevationValue* set_value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (set_value) {
    ::google::protobuf::Arena* submessage_arena = set_value->GetArena();
    if (message_arena != submessage_arena) {
      set_value = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_value, submessage_arena);
    }
    set_has_set_value();
    _impl_.cmd_.set_value_ = set_value;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Elevation.set_value)
}
void Elevation::set_allocated_rotate_to(::cmd::RotaryPlatform::RotateElevationTo* rotate_to) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (rotate_to) {
    ::google::protobuf::Arena* submessage_arena = rotate_to->GetArena();
    if (message_arena != submessage_arena) {
      rotate_to = ::google::protobuf::internal::GetOwnedMessage(message_arena, rotate_to, submessage_arena);
    }
    set_has_rotate_to();
    _impl_.cmd_.rotate_to_ = rotate_to;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Elevation.rotate_to)
}
void Elevation::set_allocated_rotate(::cmd::RotaryPlatform::RotateElevation* rotate) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (rotate) {
    ::google::protobuf::Arena* submessage_arena = rotate->GetArena();
    if (message_arena != submessage_arena) {
      rotate = ::google::protobuf::internal::GetOwnedMessage(message_arena, rotate, submessage_arena);
    }
    set_has_rotate();
    _impl_.cmd_.rotate_ = rotate;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Elevation.rotate)
}
void Elevation::set_allocated_relative(::cmd::RotaryPlatform::RotateElevationRelative* relative) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (relative) {
    ::google::protobuf::Arena* submessage_arena = relative->GetArena();
    if (message_arena != submessage_arena) {
      relative = ::google::protobuf::internal::GetOwnedMessage(message_arena, relative, submessage_arena);
    }
    set_has_relative();
    _impl_.cmd_.relative_ = relative;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Elevation.relative)
}
void Elevation::set_allocated_relative_set(::cmd::RotaryPlatform::RotateElevationRelativeSet* relative_set) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (relative_set) {
    ::google::protobuf::Arena* submessage_arena = relative_set->GetArena();
    if (message_arena != submessage_arena) {
      relative_set = ::google::protobuf::internal::GetOwnedMessage(message_arena, relative_set, submessage_arena);
    }
    set_has_relative_set();
    _impl_.cmd_.relative_set_ = relative_set;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Elevation.relative_set)
}
void Elevation::set_allocated_halt(::cmd::RotaryPlatform::HaltElevation* halt) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (halt) {
    ::google::protobuf::Arena* submessage_arena = halt->GetArena();
    if (message_arena != submessage_arena) {
      halt = ::google::protobuf::internal::GetOwnedMessage(message_arena, halt, submessage_arena);
    }
    set_has_halt();
    _impl_.cmd_.halt_ = halt;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Elevation.halt)
}
Elevation::Elevation(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.Elevation)
}
inline PROTOBUF_NDEBUG_INLINE Elevation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Elevation::Elevation(
    ::google::protobuf::Arena* arena,
    const Elevation& from)
    : ::google::protobuf::Message(arena) {
  Elevation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (cmd_case()) {
    case CMD_NOT_SET:
      break;
      case kSetValue:
        _impl_.cmd_.set_value_ = CreateMaybeMessage<::cmd::RotaryPlatform::SetElevationValue>(arena, *from._impl_.cmd_.set_value_);
        break;
      case kRotateTo:
        _impl_.cmd_.rotate_to_ = CreateMaybeMessage<::cmd::RotaryPlatform::RotateElevationTo>(arena, *from._impl_.cmd_.rotate_to_);
        break;
      case kRotate:
        _impl_.cmd_.rotate_ = CreateMaybeMessage<::cmd::RotaryPlatform::RotateElevation>(arena, *from._impl_.cmd_.rotate_);
        break;
      case kRelative:
        _impl_.cmd_.relative_ = CreateMaybeMessage<::cmd::RotaryPlatform::RotateElevationRelative>(arena, *from._impl_.cmd_.relative_);
        break;
      case kRelativeSet:
        _impl_.cmd_.relative_set_ = CreateMaybeMessage<::cmd::RotaryPlatform::RotateElevationRelativeSet>(arena, *from._impl_.cmd_.relative_set_);
        break;
      case kHalt:
        _impl_.cmd_.halt_ = CreateMaybeMessage<::cmd::RotaryPlatform::HaltElevation>(arena, *from._impl_.cmd_.halt_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:cmd.RotaryPlatform.Elevation)
}
inline PROTOBUF_NDEBUG_INLINE Elevation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Elevation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Elevation::~Elevation() {
  // @@protoc_insertion_point(destructor:cmd.RotaryPlatform.Elevation)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Elevation::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_cmd()) {
    clear_cmd();
  }
  _impl_.~Impl_();
}

void Elevation::clear_cmd() {
// @@protoc_insertion_point(one_of_clear_start:cmd.RotaryPlatform.Elevation)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (cmd_case()) {
    case kSetValue: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.set_value_;
      }
      break;
    }
    case kRotateTo: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.rotate_to_;
      }
      break;
    }
    case kRotate: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.rotate_;
      }
      break;
    }
    case kRelative: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.relative_;
      }
      break;
    }
    case kRelativeSet: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.relative_set_;
      }
      break;
    }
    case kHalt: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.halt_;
      }
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CMD_NOT_SET;
}


PROTOBUF_NOINLINE void Elevation::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.RotaryPlatform.Elevation)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_cmd();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Elevation::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 6, 6, 0, 2> Elevation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Elevation_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .cmd.RotaryPlatform.SetElevationValue set_value = 1;
    {PROTOBUF_FIELD_OFFSET(Elevation, _impl_.cmd_.set_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.RotaryPlatform.RotateElevationTo rotate_to = 2;
    {PROTOBUF_FIELD_OFFSET(Elevation, _impl_.cmd_.rotate_to_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.RotaryPlatform.RotateElevation rotate = 3;
    {PROTOBUF_FIELD_OFFSET(Elevation, _impl_.cmd_.rotate_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.RotaryPlatform.RotateElevationRelative relative = 4;
    {PROTOBUF_FIELD_OFFSET(Elevation, _impl_.cmd_.relative_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.RotaryPlatform.RotateElevationRelativeSet relative_set = 5;
    {PROTOBUF_FIELD_OFFSET(Elevation, _impl_.cmd_.relative_set_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.RotaryPlatform.HaltElevation halt = 6;
    {PROTOBUF_FIELD_OFFSET(Elevation, _impl_.cmd_.halt_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cmd::RotaryPlatform::SetElevationValue>()},
    {::_pbi::TcParser::GetTable<::cmd::RotaryPlatform::RotateElevationTo>()},
    {::_pbi::TcParser::GetTable<::cmd::RotaryPlatform::RotateElevation>()},
    {::_pbi::TcParser::GetTable<::cmd::RotaryPlatform::RotateElevationRelative>()},
    {::_pbi::TcParser::GetTable<::cmd::RotaryPlatform::RotateElevationRelativeSet>()},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::RotaryPlatform::_HaltElevation_default_instance_},
  }}, {{
  }},
};

::uint8_t* Elevation::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.RotaryPlatform.Elevation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (cmd_case()) {
    case kSetValue: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::set_value(this),
          _Internal::set_value(this).GetCachedSize(), target, stream);
      break;
    }
    case kRotateTo: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::rotate_to(this),
          _Internal::rotate_to(this).GetCachedSize(), target, stream);
      break;
    }
    case kRotate: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::rotate(this),
          _Internal::rotate(this).GetCachedSize(), target, stream);
      break;
    }
    case kRelative: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, _Internal::relative(this),
          _Internal::relative(this).GetCachedSize(), target, stream);
      break;
    }
    case kRelativeSet: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, _Internal::relative_set(this),
          _Internal::relative_set(this).GetCachedSize(), target, stream);
      break;
    }
    case kHalt: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, _Internal::halt(this),
          _Internal::halt(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.RotaryPlatform.Elevation)
  return target;
}

::size_t Elevation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.RotaryPlatform.Elevation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (cmd_case()) {
    // .cmd.RotaryPlatform.SetElevationValue set_value = 1;
    case kSetValue: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.set_value_);
      break;
    }
    // .cmd.RotaryPlatform.RotateElevationTo rotate_to = 2;
    case kRotateTo: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.rotate_to_);
      break;
    }
    // .cmd.RotaryPlatform.RotateElevation rotate = 3;
    case kRotate: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.rotate_);
      break;
    }
    // .cmd.RotaryPlatform.RotateElevationRelative relative = 4;
    case kRelative: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.relative_);
      break;
    }
    // .cmd.RotaryPlatform.RotateElevationRelativeSet relative_set = 5;
    case kRelativeSet: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.relative_set_);
      break;
    }
    // .cmd.RotaryPlatform.HaltElevation halt = 6;
    case kHalt: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.halt_);
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Elevation::_class_data_ = {
    Elevation::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Elevation::GetClassData() const {
  return &_class_data_;
}

void Elevation::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Elevation*>(&to_msg);
  auto& from = static_cast<const Elevation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.RotaryPlatform.Elevation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.cmd_case()) {
    case kSetValue: {
      _this->_internal_mutable_set_value()->::cmd::RotaryPlatform::SetElevationValue::MergeFrom(
          from._internal_set_value());
      break;
    }
    case kRotateTo: {
      _this->_internal_mutable_rotate_to()->::cmd::RotaryPlatform::RotateElevationTo::MergeFrom(
          from._internal_rotate_to());
      break;
    }
    case kRotate: {
      _this->_internal_mutable_rotate()->::cmd::RotaryPlatform::RotateElevation::MergeFrom(
          from._internal_rotate());
      break;
    }
    case kRelative: {
      _this->_internal_mutable_relative()->::cmd::RotaryPlatform::RotateElevationRelative::MergeFrom(
          from._internal_relative());
      break;
    }
    case kRelativeSet: {
      _this->_internal_mutable_relative_set()->::cmd::RotaryPlatform::RotateElevationRelativeSet::MergeFrom(
          from._internal_relative_set());
      break;
    }
    case kHalt: {
      _this->_internal_mutable_halt()->::cmd::RotaryPlatform::HaltElevation::MergeFrom(
          from._internal_halt());
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Elevation::CopyFrom(const Elevation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.RotaryPlatform.Elevation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Elevation::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Elevation::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Elevation::InternalSwap(Elevation* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.cmd_, other->_impl_.cmd_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Elevation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[34]);
}
// ===================================================================

class setUseRotaryAsCompass::_Internal {
 public:
};

setUseRotaryAsCompass::setUseRotaryAsCompass(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.setUseRotaryAsCompass)
}
setUseRotaryAsCompass::setUseRotaryAsCompass(
    ::google::protobuf::Arena* arena, const setUseRotaryAsCompass& from)
    : setUseRotaryAsCompass(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE setUseRotaryAsCompass::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void setUseRotaryAsCompass::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.flag_ = {};
}
setUseRotaryAsCompass::~setUseRotaryAsCompass() {
  // @@protoc_insertion_point(destructor:cmd.RotaryPlatform.setUseRotaryAsCompass)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void setUseRotaryAsCompass::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void setUseRotaryAsCompass::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.RotaryPlatform.setUseRotaryAsCompass)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.flag_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* setUseRotaryAsCompass::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> setUseRotaryAsCompass::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_setUseRotaryAsCompass_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool flag = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(setUseRotaryAsCompass, _impl_.flag_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(setUseRotaryAsCompass, _impl_.flag_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool flag = 1;
    {PROTOBUF_FIELD_OFFSET(setUseRotaryAsCompass, _impl_.flag_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* setUseRotaryAsCompass::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.RotaryPlatform.setUseRotaryAsCompass)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool flag = 1;
  if (this->_internal_flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.RotaryPlatform.setUseRotaryAsCompass)
  return target;
}

::size_t setUseRotaryAsCompass::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.RotaryPlatform.setUseRotaryAsCompass)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool flag = 1;
  if (this->_internal_flag() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData setUseRotaryAsCompass::_class_data_ = {
    setUseRotaryAsCompass::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* setUseRotaryAsCompass::GetClassData() const {
  return &_class_data_;
}

void setUseRotaryAsCompass::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<setUseRotaryAsCompass*>(&to_msg);
  auto& from = static_cast<const setUseRotaryAsCompass&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.RotaryPlatform.setUseRotaryAsCompass)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_flag() != 0) {
    _this->_internal_set_flag(from._internal_flag());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void setUseRotaryAsCompass::CopyFrom(const setUseRotaryAsCompass& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.RotaryPlatform.setUseRotaryAsCompass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool setUseRotaryAsCompass::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* setUseRotaryAsCompass::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void setUseRotaryAsCompass::InternalSwap(setUseRotaryAsCompass* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.flag_, other->_impl_.flag_);
}

::google::protobuf::Metadata setUseRotaryAsCompass::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[35]);
}
// ===================================================================

class RotateToGPS::_Internal {
 public:
};

RotateToGPS::RotateToGPS(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.RotateToGPS)
}
RotateToGPS::RotateToGPS(
    ::google::protobuf::Arena* arena, const RotateToGPS& from)
    : RotateToGPS(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RotateToGPS::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RotateToGPS::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, latitude_),
           0,
           offsetof(Impl_, altitude_) -
               offsetof(Impl_, latitude_) +
               sizeof(Impl_::altitude_));
}
RotateToGPS::~RotateToGPS() {
  // @@protoc_insertion_point(destructor:cmd.RotaryPlatform.RotateToGPS)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RotateToGPS::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RotateToGPS::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.RotaryPlatform.RotateToGPS)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.latitude_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.altitude_) -
      reinterpret_cast<char*>(&_impl_.latitude_)) + sizeof(_impl_.altitude_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RotateToGPS::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> RotateToGPS::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RotateToGPS_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float latitude = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(RotateToGPS, _impl_.latitude_)}},
    // float longitude = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(RotateToGPS, _impl_.longitude_)}},
    // float altitude = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(RotateToGPS, _impl_.altitude_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float latitude = 1;
    {PROTOBUF_FIELD_OFFSET(RotateToGPS, _impl_.latitude_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float longitude = 2;
    {PROTOBUF_FIELD_OFFSET(RotateToGPS, _impl_.longitude_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float altitude = 3;
    {PROTOBUF_FIELD_OFFSET(RotateToGPS, _impl_.altitude_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RotateToGPS::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.RotaryPlatform.RotateToGPS)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float latitude = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_latitude = this->_internal_latitude();
  ::uint32_t raw_latitude;
  memcpy(&raw_latitude, &tmp_latitude, sizeof(tmp_latitude));
  if (raw_latitude != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_latitude(), target);
  }

  // float longitude = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_longitude = this->_internal_longitude();
  ::uint32_t raw_longitude;
  memcpy(&raw_longitude, &tmp_longitude, sizeof(tmp_longitude));
  if (raw_longitude != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_longitude(), target);
  }

  // float altitude = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_altitude = this->_internal_altitude();
  ::uint32_t raw_altitude;
  memcpy(&raw_altitude, &tmp_altitude, sizeof(tmp_altitude));
  if (raw_altitude != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_altitude(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.RotaryPlatform.RotateToGPS)
  return target;
}

::size_t RotateToGPS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.RotaryPlatform.RotateToGPS)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float latitude = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_latitude = this->_internal_latitude();
  ::uint32_t raw_latitude;
  memcpy(&raw_latitude, &tmp_latitude, sizeof(tmp_latitude));
  if (raw_latitude != 0) {
    total_size += 5;
  }

  // float longitude = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_longitude = this->_internal_longitude();
  ::uint32_t raw_longitude;
  memcpy(&raw_longitude, &tmp_longitude, sizeof(tmp_longitude));
  if (raw_longitude != 0) {
    total_size += 5;
  }

  // float altitude = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_altitude = this->_internal_altitude();
  ::uint32_t raw_altitude;
  memcpy(&raw_altitude, &tmp_altitude, sizeof(tmp_altitude));
  if (raw_altitude != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RotateToGPS::_class_data_ = {
    RotateToGPS::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RotateToGPS::GetClassData() const {
  return &_class_data_;
}

void RotateToGPS::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RotateToGPS*>(&to_msg);
  auto& from = static_cast<const RotateToGPS&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.RotaryPlatform.RotateToGPS)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_latitude = from._internal_latitude();
  ::uint32_t raw_latitude;
  memcpy(&raw_latitude, &tmp_latitude, sizeof(tmp_latitude));
  if (raw_latitude != 0) {
    _this->_internal_set_latitude(from._internal_latitude());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_longitude = from._internal_longitude();
  ::uint32_t raw_longitude;
  memcpy(&raw_longitude, &tmp_longitude, sizeof(tmp_longitude));
  if (raw_longitude != 0) {
    _this->_internal_set_longitude(from._internal_longitude());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_altitude = from._internal_altitude();
  ::uint32_t raw_altitude;
  memcpy(&raw_altitude, &tmp_altitude, sizeof(tmp_altitude));
  if (raw_altitude != 0) {
    _this->_internal_set_altitude(from._internal_altitude());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RotateToGPS::CopyFrom(const RotateToGPS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.RotaryPlatform.RotateToGPS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RotateToGPS::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RotateToGPS::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RotateToGPS::InternalSwap(RotateToGPS* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RotateToGPS, _impl_.altitude_)
      + sizeof(RotateToGPS::_impl_.altitude_)
      - PROTOBUF_FIELD_OFFSET(RotateToGPS, _impl_.latitude_)>(
          reinterpret_cast<char*>(&_impl_.latitude_),
          reinterpret_cast<char*>(&other->_impl_.latitude_));
}

::google::protobuf::Metadata RotateToGPS::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[36]);
}
// ===================================================================

class SetOriginGPS::_Internal {
 public:
};

SetOriginGPS::SetOriginGPS(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.SetOriginGPS)
}
SetOriginGPS::SetOriginGPS(
    ::google::protobuf::Arena* arena, const SetOriginGPS& from)
    : SetOriginGPS(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetOriginGPS::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetOriginGPS::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, latitude_),
           0,
           offsetof(Impl_, altitude_) -
               offsetof(Impl_, latitude_) +
               sizeof(Impl_::altitude_));
}
SetOriginGPS::~SetOriginGPS() {
  // @@protoc_insertion_point(destructor:cmd.RotaryPlatform.SetOriginGPS)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetOriginGPS::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetOriginGPS::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.RotaryPlatform.SetOriginGPS)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.latitude_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.altitude_) -
      reinterpret_cast<char*>(&_impl_.latitude_)) + sizeof(_impl_.altitude_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetOriginGPS::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> SetOriginGPS::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetOriginGPS_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float latitude = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(SetOriginGPS, _impl_.latitude_)}},
    // float longitude = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(SetOriginGPS, _impl_.longitude_)}},
    // float altitude = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(SetOriginGPS, _impl_.altitude_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float latitude = 1;
    {PROTOBUF_FIELD_OFFSET(SetOriginGPS, _impl_.latitude_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float longitude = 2;
    {PROTOBUF_FIELD_OFFSET(SetOriginGPS, _impl_.longitude_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float altitude = 3;
    {PROTOBUF_FIELD_OFFSET(SetOriginGPS, _impl_.altitude_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetOriginGPS::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.RotaryPlatform.SetOriginGPS)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float latitude = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_latitude = this->_internal_latitude();
  ::uint32_t raw_latitude;
  memcpy(&raw_latitude, &tmp_latitude, sizeof(tmp_latitude));
  if (raw_latitude != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_latitude(), target);
  }

  // float longitude = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_longitude = this->_internal_longitude();
  ::uint32_t raw_longitude;
  memcpy(&raw_longitude, &tmp_longitude, sizeof(tmp_longitude));
  if (raw_longitude != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_longitude(), target);
  }

  // float altitude = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_altitude = this->_internal_altitude();
  ::uint32_t raw_altitude;
  memcpy(&raw_altitude, &tmp_altitude, sizeof(tmp_altitude));
  if (raw_altitude != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_altitude(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.RotaryPlatform.SetOriginGPS)
  return target;
}

::size_t SetOriginGPS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.RotaryPlatform.SetOriginGPS)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float latitude = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_latitude = this->_internal_latitude();
  ::uint32_t raw_latitude;
  memcpy(&raw_latitude, &tmp_latitude, sizeof(tmp_latitude));
  if (raw_latitude != 0) {
    total_size += 5;
  }

  // float longitude = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_longitude = this->_internal_longitude();
  ::uint32_t raw_longitude;
  memcpy(&raw_longitude, &tmp_longitude, sizeof(tmp_longitude));
  if (raw_longitude != 0) {
    total_size += 5;
  }

  // float altitude = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_altitude = this->_internal_altitude();
  ::uint32_t raw_altitude;
  memcpy(&raw_altitude, &tmp_altitude, sizeof(tmp_altitude));
  if (raw_altitude != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetOriginGPS::_class_data_ = {
    SetOriginGPS::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetOriginGPS::GetClassData() const {
  return &_class_data_;
}

void SetOriginGPS::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetOriginGPS*>(&to_msg);
  auto& from = static_cast<const SetOriginGPS&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.RotaryPlatform.SetOriginGPS)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_latitude = from._internal_latitude();
  ::uint32_t raw_latitude;
  memcpy(&raw_latitude, &tmp_latitude, sizeof(tmp_latitude));
  if (raw_latitude != 0) {
    _this->_internal_set_latitude(from._internal_latitude());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_longitude = from._internal_longitude();
  ::uint32_t raw_longitude;
  memcpy(&raw_longitude, &tmp_longitude, sizeof(tmp_longitude));
  if (raw_longitude != 0) {
    _this->_internal_set_longitude(from._internal_longitude());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_altitude = from._internal_altitude();
  ::uint32_t raw_altitude;
  memcpy(&raw_altitude, &tmp_altitude, sizeof(tmp_altitude));
  if (raw_altitude != 0) {
    _this->_internal_set_altitude(from._internal_altitude());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetOriginGPS::CopyFrom(const SetOriginGPS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.RotaryPlatform.SetOriginGPS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetOriginGPS::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetOriginGPS::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetOriginGPS::InternalSwap(SetOriginGPS* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetOriginGPS, _impl_.altitude_)
      + sizeof(SetOriginGPS::_impl_.altitude_)
      - PROTOBUF_FIELD_OFFSET(SetOriginGPS, _impl_.latitude_)>(
          reinterpret_cast<char*>(&_impl_.latitude_),
          reinterpret_cast<char*>(&other->_impl_.latitude_));
}

::google::protobuf::Metadata SetOriginGPS::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[37]);
}
// ===================================================================

class RotateToNDC::_Internal {
 public:
};

RotateToNDC::RotateToNDC(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.RotaryPlatform.RotateToNDC)
}
RotateToNDC::RotateToNDC(
    ::google::protobuf::Arena* arena, const RotateToNDC& from)
    : RotateToNDC(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RotateToNDC::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RotateToNDC::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, channel_),
           0,
           offsetof(Impl_, y_) -
               offsetof(Impl_, channel_) +
               sizeof(Impl_::y_));
}
RotateToNDC::~RotateToNDC() {
  // @@protoc_insertion_point(destructor:cmd.RotaryPlatform.RotateToNDC)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RotateToNDC::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RotateToNDC::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.RotaryPlatform.RotateToNDC)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.channel_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.y_) -
      reinterpret_cast<char*>(&_impl_.channel_)) + sizeof(_impl_.y_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RotateToNDC::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> RotateToNDC::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RotateToNDC_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .ser.JonGuiDataVideoChannel channel = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RotateToNDC, _impl_.channel_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RotateToNDC, _impl_.channel_)}},
    // float x = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(RotateToNDC, _impl_.x_)}},
    // float y = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(RotateToNDC, _impl_.y_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .ser.JonGuiDataVideoChannel channel = 1;
    {PROTOBUF_FIELD_OFFSET(RotateToNDC, _impl_.channel_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // float x = 2;
    {PROTOBUF_FIELD_OFFSET(RotateToNDC, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float y = 3;
    {PROTOBUF_FIELD_OFFSET(RotateToNDC, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RotateToNDC::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.RotaryPlatform.RotateToNDC)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .ser.JonGuiDataVideoChannel channel = 1;
  if (this->_internal_channel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_channel(), target);
  }

  // float x = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_x(), target);
  }

  // float y = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_y(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.RotaryPlatform.RotateToNDC)
  return target;
}

::size_t RotateToNDC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.RotaryPlatform.RotateToNDC)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ser.JonGuiDataVideoChannel channel = 1;
  if (this->_internal_channel() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_channel());
  }

  // float x = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    total_size += 5;
  }

  // float y = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RotateToNDC::_class_data_ = {
    RotateToNDC::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RotateToNDC::GetClassData() const {
  return &_class_data_;
}

void RotateToNDC::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RotateToNDC*>(&to_msg);
  auto& from = static_cast<const RotateToNDC&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.RotaryPlatform.RotateToNDC)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_channel() != 0) {
    _this->_internal_set_channel(from._internal_channel());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = from._internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    _this->_internal_set_x(from._internal_x());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = from._internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    _this->_internal_set_y(from._internal_y());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RotateToNDC::CopyFrom(const RotateToNDC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.RotaryPlatform.RotateToNDC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RotateToNDC::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RotateToNDC::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RotateToNDC::InternalSwap(RotateToNDC* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RotateToNDC, _impl_.y_)
      + sizeof(RotateToNDC::_impl_.y_)
      - PROTOBUF_FIELD_OFFSET(RotateToNDC, _impl_.channel_)>(
          reinterpret_cast<char*>(&_impl_.channel_),
          reinterpret_cast<char*>(&other->_impl_.channel_));
}

::google::protobuf::Metadata RotateToNDC::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5frotary_2eproto[38]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace RotaryPlatform
}  // namespace cmd
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
