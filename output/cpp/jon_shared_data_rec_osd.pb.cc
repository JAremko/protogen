// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jon_shared_data_rec_osd.proto

#include "jon_shared_data_rec_osd.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ser {

inline constexpr JonGuiDataRecOsd::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : screen_{static_cast< ::ser::JonGuiDataRecOsdScreen >(0)},
        heat_osd_enabled_{false},
        day_osd_enabled_{false},
        heat_crosshair_offset_horizontal_{0},
        heat_crosshair_offset_vertical_{0},
        day_crosshair_offset_horizontal_{0},
        day_crosshair_offset_vertical_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR JonGuiDataRecOsd::JonGuiDataRecOsd(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct JonGuiDataRecOsdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JonGuiDataRecOsdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JonGuiDataRecOsdDefaultTypeInternal() {}
  union {
    JonGuiDataRecOsd _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JonGuiDataRecOsdDefaultTypeInternal _JonGuiDataRecOsd_default_instance_;
}  // namespace ser
static ::_pb::Metadata file_level_metadata_jon_5fshared_5fdata_5frec_5fosd_2eproto[1];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_jon_5fshared_5fdata_5frec_5fosd_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_jon_5fshared_5fdata_5frec_5fosd_2eproto = nullptr;
const ::uint32_t TableStruct_jon_5fshared_5fdata_5frec_5fosd_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ser::JonGuiDataRecOsd, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ser::JonGuiDataRecOsd, _impl_.screen_),
    PROTOBUF_FIELD_OFFSET(::ser::JonGuiDataRecOsd, _impl_.heat_osd_enabled_),
    PROTOBUF_FIELD_OFFSET(::ser::JonGuiDataRecOsd, _impl_.day_osd_enabled_),
    PROTOBUF_FIELD_OFFSET(::ser::JonGuiDataRecOsd, _impl_.heat_crosshair_offset_horizontal_),
    PROTOBUF_FIELD_OFFSET(::ser::JonGuiDataRecOsd, _impl_.heat_crosshair_offset_vertical_),
    PROTOBUF_FIELD_OFFSET(::ser::JonGuiDataRecOsd, _impl_.day_crosshair_offset_horizontal_),
    PROTOBUF_FIELD_OFFSET(::ser::JonGuiDataRecOsd, _impl_.day_crosshair_offset_vertical_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::ser::JonGuiDataRecOsd)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::ser::_JonGuiDataRecOsd_default_instance_._instance,
};
const char descriptor_table_protodef_jon_5fshared_5fdata_5frec_5fosd_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\035jon_shared_data_rec_osd.proto\022\003ser\032\033jo"
    "n_shared_data_types.proto\"\224\002\n\020JonGuiData"
    "RecOsd\022+\n\006screen\030\001 \001(\0162\033.ser.JonGuiDataR"
    "ecOsdScreen\022\030\n\020heat_osd_enabled\030\002 \001(\010\022\027\n"
    "\017day_osd_enabled\030\003 \001(\010\022(\n heat_crosshair"
    "_offset_horizontal\030\004 \001(\005\022&\n\036heat_crossha"
    "ir_offset_vertical\030\005 \001(\005\022\'\n\037day_crosshai"
    "r_offset_horizontal\030\006 \001(\005\022%\n\035day_crossha"
    "ir_offset_vertical\030\007 \001(\005BOZMgit-codecomm"
    "it.eu-central-1.amazonaws.com/v1/repos/j"
    "ettison/jonp/data/rec_osdb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_jon_5fshared_5fdata_5frec_5fosd_2eproto_deps[1] =
    {
        &::descriptor_table_jon_5fshared_5fdata_5ftypes_2eproto,
};
static ::absl::once_flag descriptor_table_jon_5fshared_5fdata_5frec_5fosd_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_jon_5fshared_5fdata_5frec_5fosd_2eproto = {
    false,
    false,
    433,
    descriptor_table_protodef_jon_5fshared_5fdata_5frec_5fosd_2eproto,
    "jon_shared_data_rec_osd.proto",
    &descriptor_table_jon_5fshared_5fdata_5frec_5fosd_2eproto_once,
    descriptor_table_jon_5fshared_5fdata_5frec_5fosd_2eproto_deps,
    1,
    1,
    schemas,
    file_default_instances,
    TableStruct_jon_5fshared_5fdata_5frec_5fosd_2eproto::offsets,
    file_level_metadata_jon_5fshared_5fdata_5frec_5fosd_2eproto,
    file_level_enum_descriptors_jon_5fshared_5fdata_5frec_5fosd_2eproto,
    file_level_service_descriptors_jon_5fshared_5fdata_5frec_5fosd_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_jon_5fshared_5fdata_5frec_5fosd_2eproto_getter() {
  return &descriptor_table_jon_5fshared_5fdata_5frec_5fosd_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_jon_5fshared_5fdata_5frec_5fosd_2eproto(&descriptor_table_jon_5fshared_5fdata_5frec_5fosd_2eproto);
namespace ser {
// ===================================================================

class JonGuiDataRecOsd::_Internal {
 public:
};

JonGuiDataRecOsd::JonGuiDataRecOsd(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ser.JonGuiDataRecOsd)
}
JonGuiDataRecOsd::JonGuiDataRecOsd(
    ::google::protobuf::Arena* arena, const JonGuiDataRecOsd& from)
    : JonGuiDataRecOsd(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE JonGuiDataRecOsd::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void JonGuiDataRecOsd::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, screen_),
           0,
           offsetof(Impl_, day_crosshair_offset_vertical_) -
               offsetof(Impl_, screen_) +
               sizeof(Impl_::day_crosshair_offset_vertical_));
}
JonGuiDataRecOsd::~JonGuiDataRecOsd() {
  // @@protoc_insertion_point(destructor:ser.JonGuiDataRecOsd)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void JonGuiDataRecOsd::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void JonGuiDataRecOsd::Clear() {
// @@protoc_insertion_point(message_clear_start:ser.JonGuiDataRecOsd)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.screen_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.day_crosshair_offset_vertical_) -
      reinterpret_cast<char*>(&_impl_.screen_)) + sizeof(_impl_.day_crosshair_offset_vertical_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* JonGuiDataRecOsd::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2> JonGuiDataRecOsd::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_JonGuiDataRecOsd_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .ser.JonGuiDataRecOsdScreen screen = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(JonGuiDataRecOsd, _impl_.screen_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(JonGuiDataRecOsd, _impl_.screen_)}},
    // bool heat_osd_enabled = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(JonGuiDataRecOsd, _impl_.heat_osd_enabled_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(JonGuiDataRecOsd, _impl_.heat_osd_enabled_)}},
    // bool day_osd_enabled = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(JonGuiDataRecOsd, _impl_.day_osd_enabled_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(JonGuiDataRecOsd, _impl_.day_osd_enabled_)}},
    // int32 heat_crosshair_offset_horizontal = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(JonGuiDataRecOsd, _impl_.heat_crosshair_offset_horizontal_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(JonGuiDataRecOsd, _impl_.heat_crosshair_offset_horizontal_)}},
    // int32 heat_crosshair_offset_vertical = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(JonGuiDataRecOsd, _impl_.heat_crosshair_offset_vertical_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(JonGuiDataRecOsd, _impl_.heat_crosshair_offset_vertical_)}},
    // int32 day_crosshair_offset_horizontal = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(JonGuiDataRecOsd, _impl_.day_crosshair_offset_horizontal_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(JonGuiDataRecOsd, _impl_.day_crosshair_offset_horizontal_)}},
    // int32 day_crosshair_offset_vertical = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(JonGuiDataRecOsd, _impl_.day_crosshair_offset_vertical_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(JonGuiDataRecOsd, _impl_.day_crosshair_offset_vertical_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .ser.JonGuiDataRecOsdScreen screen = 1;
    {PROTOBUF_FIELD_OFFSET(JonGuiDataRecOsd, _impl_.screen_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bool heat_osd_enabled = 2;
    {PROTOBUF_FIELD_OFFSET(JonGuiDataRecOsd, _impl_.heat_osd_enabled_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool day_osd_enabled = 3;
    {PROTOBUF_FIELD_OFFSET(JonGuiDataRecOsd, _impl_.day_osd_enabled_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 heat_crosshair_offset_horizontal = 4;
    {PROTOBUF_FIELD_OFFSET(JonGuiDataRecOsd, _impl_.heat_crosshair_offset_horizontal_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 heat_crosshair_offset_vertical = 5;
    {PROTOBUF_FIELD_OFFSET(JonGuiDataRecOsd, _impl_.heat_crosshair_offset_vertical_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 day_crosshair_offset_horizontal = 6;
    {PROTOBUF_FIELD_OFFSET(JonGuiDataRecOsd, _impl_.day_crosshair_offset_horizontal_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 day_crosshair_offset_vertical = 7;
    {PROTOBUF_FIELD_OFFSET(JonGuiDataRecOsd, _impl_.day_crosshair_offset_vertical_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* JonGuiDataRecOsd::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ser.JonGuiDataRecOsd)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .ser.JonGuiDataRecOsdScreen screen = 1;
  if (this->_internal_screen() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_screen(), target);
  }

  // bool heat_osd_enabled = 2;
  if (this->_internal_heat_osd_enabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_heat_osd_enabled(), target);
  }

  // bool day_osd_enabled = 3;
  if (this->_internal_day_osd_enabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_day_osd_enabled(), target);
  }

  // int32 heat_crosshair_offset_horizontal = 4;
  if (this->_internal_heat_crosshair_offset_horizontal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_heat_crosshair_offset_horizontal(), target);
  }

  // int32 heat_crosshair_offset_vertical = 5;
  if (this->_internal_heat_crosshair_offset_vertical() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_heat_crosshair_offset_vertical(), target);
  }

  // int32 day_crosshair_offset_horizontal = 6;
  if (this->_internal_day_crosshair_offset_horizontal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_day_crosshair_offset_horizontal(), target);
  }

  // int32 day_crosshair_offset_vertical = 7;
  if (this->_internal_day_crosshair_offset_vertical() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_day_crosshair_offset_vertical(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ser.JonGuiDataRecOsd)
  return target;
}

::size_t JonGuiDataRecOsd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ser.JonGuiDataRecOsd)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ser.JonGuiDataRecOsdScreen screen = 1;
  if (this->_internal_screen() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_screen());
  }

  // bool heat_osd_enabled = 2;
  if (this->_internal_heat_osd_enabled() != 0) {
    total_size += 2;
  }

  // bool day_osd_enabled = 3;
  if (this->_internal_day_osd_enabled() != 0) {
    total_size += 2;
  }

  // int32 heat_crosshair_offset_horizontal = 4;
  if (this->_internal_heat_crosshair_offset_horizontal() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_heat_crosshair_offset_horizontal());
  }

  // int32 heat_crosshair_offset_vertical = 5;
  if (this->_internal_heat_crosshair_offset_vertical() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_heat_crosshair_offset_vertical());
  }

  // int32 day_crosshair_offset_horizontal = 6;
  if (this->_internal_day_crosshair_offset_horizontal() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_day_crosshair_offset_horizontal());
  }

  // int32 day_crosshair_offset_vertical = 7;
  if (this->_internal_day_crosshair_offset_vertical() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_day_crosshair_offset_vertical());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData JonGuiDataRecOsd::_class_data_ = {
    JonGuiDataRecOsd::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* JonGuiDataRecOsd::GetClassData() const {
  return &_class_data_;
}

void JonGuiDataRecOsd::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<JonGuiDataRecOsd*>(&to_msg);
  auto& from = static_cast<const JonGuiDataRecOsd&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ser.JonGuiDataRecOsd)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_screen() != 0) {
    _this->_internal_set_screen(from._internal_screen());
  }
  if (from._internal_heat_osd_enabled() != 0) {
    _this->_internal_set_heat_osd_enabled(from._internal_heat_osd_enabled());
  }
  if (from._internal_day_osd_enabled() != 0) {
    _this->_internal_set_day_osd_enabled(from._internal_day_osd_enabled());
  }
  if (from._internal_heat_crosshair_offset_horizontal() != 0) {
    _this->_internal_set_heat_crosshair_offset_horizontal(from._internal_heat_crosshair_offset_horizontal());
  }
  if (from._internal_heat_crosshair_offset_vertical() != 0) {
    _this->_internal_set_heat_crosshair_offset_vertical(from._internal_heat_crosshair_offset_vertical());
  }
  if (from._internal_day_crosshair_offset_horizontal() != 0) {
    _this->_internal_set_day_crosshair_offset_horizontal(from._internal_day_crosshair_offset_horizontal());
  }
  if (from._internal_day_crosshair_offset_vertical() != 0) {
    _this->_internal_set_day_crosshair_offset_vertical(from._internal_day_crosshair_offset_vertical());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void JonGuiDataRecOsd::CopyFrom(const JonGuiDataRecOsd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ser.JonGuiDataRecOsd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool JonGuiDataRecOsd::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* JonGuiDataRecOsd::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void JonGuiDataRecOsd::InternalSwap(JonGuiDataRecOsd* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JonGuiDataRecOsd, _impl_.day_crosshair_offset_vertical_)
      + sizeof(JonGuiDataRecOsd::_impl_.day_crosshair_offset_vertical_)
      - PROTOBUF_FIELD_OFFSET(JonGuiDataRecOsd, _impl_.screen_)>(
          reinterpret_cast<char*>(&_impl_.screen_),
          reinterpret_cast<char*>(&other->_impl_.screen_));
}

::google::protobuf::Metadata JonGuiDataRecOsd::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fdata_5frec_5fosd_2eproto_getter, &descriptor_table_jon_5fshared_5fdata_5frec_5fosd_2eproto_once,
      file_level_metadata_jon_5fshared_5fdata_5frec_5fosd_2eproto[0]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace ser
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
