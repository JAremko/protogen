// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jon_shared_cmd_day_cam_glass_heater.proto

#include "jon_shared_cmd_day_cam_glass_heater.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cmd {
namespace DayCamGlassHeater {
      template <typename>
PROTOBUF_CONSTEXPR TurnOn::TurnOn(::_pbi::ConstantInitialized) {}
struct TurnOnDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TurnOnDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TurnOnDefaultTypeInternal() {}
  union {
    TurnOn _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TurnOnDefaultTypeInternal _TurnOn_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TurnOff::TurnOff(::_pbi::ConstantInitialized) {}
struct TurnOffDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TurnOffDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TurnOffDefaultTypeInternal() {}
  union {
    TurnOff _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TurnOffDefaultTypeInternal _TurnOff_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR Stop::Stop(::_pbi::ConstantInitialized) {}
struct StopDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopDefaultTypeInternal() {}
  union {
    Stop _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopDefaultTypeInternal _Stop_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR Start::Start(::_pbi::ConstantInitialized) {}
struct StartDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartDefaultTypeInternal() {}
  union {
    Start _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartDefaultTypeInternal _Start_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR GetMeteo::GetMeteo(::_pbi::ConstantInitialized) {}
struct GetMeteoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetMeteoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetMeteoDefaultTypeInternal() {}
  union {
    GetMeteo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetMeteoDefaultTypeInternal _GetMeteo_default_instance_;

inline constexpr Root::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Root::Root(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RootDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RootDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RootDefaultTypeInternal() {}
  union {
    Root _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RootDefaultTypeInternal _Root_default_instance_;
}  // namespace DayCamGlassHeater
}  // namespace cmd
static ::_pb::Metadata file_level_metadata_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto[6];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto = nullptr;
const ::uint32_t TableStruct_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamGlassHeater::Root, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamGlassHeater::Root, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamGlassHeater::Root, _impl_.cmd_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamGlassHeater::Start, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamGlassHeater::Stop, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamGlassHeater::TurnOn, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamGlassHeater::TurnOff, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamGlassHeater::GetMeteo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::cmd::DayCamGlassHeater::Root)},
        {14, -1, -1, sizeof(::cmd::DayCamGlassHeater::Start)},
        {22, -1, -1, sizeof(::cmd::DayCamGlassHeater::Stop)},
        {30, -1, -1, sizeof(::cmd::DayCamGlassHeater::TurnOn)},
        {38, -1, -1, sizeof(::cmd::DayCamGlassHeater::TurnOff)},
        {46, -1, -1, sizeof(::cmd::DayCamGlassHeater::GetMeteo)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::cmd::DayCamGlassHeater::_Root_default_instance_._instance,
    &::cmd::DayCamGlassHeater::_Start_default_instance_._instance,
    &::cmd::DayCamGlassHeater::_Stop_default_instance_._instance,
    &::cmd::DayCamGlassHeater::_TurnOn_default_instance_._instance,
    &::cmd::DayCamGlassHeater::_TurnOff_default_instance_._instance,
    &::cmd::DayCamGlassHeater::_GetMeteo_default_instance_._instance,
};
const char descriptor_table_protodef_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n)jon_shared_cmd_day_cam_glass_heater.pr"
    "oto\022\025cmd.DayCamGlassHeater\"\205\002\n\004Root\022-\n\005s"
    "tart\030\001 \001(\0132\034.cmd.DayCamGlassHeater.Start"
    "H\000\022+\n\004stop\030\002 \001(\0132\033.cmd.DayCamGlassHeater"
    ".StopH\000\0220\n\007turn_on\030\003 \001(\0132\035.cmd.DayCamGla"
    "ssHeater.TurnOnH\000\0222\n\010turn_off\030\004 \001(\0132\036.cm"
    "d.DayCamGlassHeater.TurnOffH\000\0224\n\tget_met"
    "eo\030\005 \001(\0132\037.cmd.DayCamGlassHeater.GetMete"
    "oH\000B\005\n\003cmd\"\007\n\005Start\"\006\n\004Stop\"\010\n\006TurnOn\"\t\n"
    "\007TurnOff\"\n\n\010GetMeteoB[ZYgit-codecommit.e"
    "u-central-1.amazonaws.com/v1/repos/jetti"
    "son/jonp/cmd/day_cam_glass_heaterb\006proto"
    "3"
};
static ::absl::once_flag descriptor_table_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto = {
    false,
    false,
    481,
    descriptor_table_protodef_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto,
    "jon_shared_cmd_day_cam_glass_heater.proto",
    &descriptor_table_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto_once,
    nullptr,
    0,
    6,
    schemas,
    file_default_instances,
    TableStruct_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto::offsets,
    file_level_metadata_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto,
    file_level_enum_descriptors_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto,
    file_level_service_descriptors_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto_getter() {
  return &descriptor_table_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto(&descriptor_table_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto);
namespace cmd {
namespace DayCamGlassHeater {
// ===================================================================

class Root::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamGlassHeater::Root, _impl_._oneof_case_);
  static const ::cmd::DayCamGlassHeater::Start& start(const Root* msg);
  static const ::cmd::DayCamGlassHeater::Stop& stop(const Root* msg);
  static const ::cmd::DayCamGlassHeater::TurnOn& turn_on(const Root* msg);
  static const ::cmd::DayCamGlassHeater::TurnOff& turn_off(const Root* msg);
  static const ::cmd::DayCamGlassHeater::GetMeteo& get_meteo(const Root* msg);
};

const ::cmd::DayCamGlassHeater::Start& Root::_Internal::start(const Root* msg) {
  return *msg->_impl_.cmd_.start_;
}
const ::cmd::DayCamGlassHeater::Stop& Root::_Internal::stop(const Root* msg) {
  return *msg->_impl_.cmd_.stop_;
}
const ::cmd::DayCamGlassHeater::TurnOn& Root::_Internal::turn_on(const Root* msg) {
  return *msg->_impl_.cmd_.turn_on_;
}
const ::cmd::DayCamGlassHeater::TurnOff& Root::_Internal::turn_off(const Root* msg) {
  return *msg->_impl_.cmd_.turn_off_;
}
const ::cmd::DayCamGlassHeater::GetMeteo& Root::_Internal::get_meteo(const Root* msg) {
  return *msg->_impl_.cmd_.get_meteo_;
}
void Root::set_allocated_start(::cmd::DayCamGlassHeater::Start* start) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (start) {
    ::google::protobuf::Arena* submessage_arena = start->GetArena();
    if (message_arena != submessage_arena) {
      start = ::google::protobuf::internal::GetOwnedMessage(message_arena, start, submessage_arena);
    }
    set_has_start();
    _impl_.cmd_.start_ = start;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamGlassHeater.Root.start)
}
void Root::set_allocated_stop(::cmd::DayCamGlassHeater::Stop* stop) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (stop) {
    ::google::protobuf::Arena* submessage_arena = stop->GetArena();
    if (message_arena != submessage_arena) {
      stop = ::google::protobuf::internal::GetOwnedMessage(message_arena, stop, submessage_arena);
    }
    set_has_stop();
    _impl_.cmd_.stop_ = stop;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamGlassHeater.Root.stop)
}
void Root::set_allocated_turn_on(::cmd::DayCamGlassHeater::TurnOn* turn_on) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (turn_on) {
    ::google::protobuf::Arena* submessage_arena = turn_on->GetArena();
    if (message_arena != submessage_arena) {
      turn_on = ::google::protobuf::internal::GetOwnedMessage(message_arena, turn_on, submessage_arena);
    }
    set_has_turn_on();
    _impl_.cmd_.turn_on_ = turn_on;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamGlassHeater.Root.turn_on)
}
void Root::set_allocated_turn_off(::cmd::DayCamGlassHeater::TurnOff* turn_off) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (turn_off) {
    ::google::protobuf::Arena* submessage_arena = turn_off->GetArena();
    if (message_arena != submessage_arena) {
      turn_off = ::google::protobuf::internal::GetOwnedMessage(message_arena, turn_off, submessage_arena);
    }
    set_has_turn_off();
    _impl_.cmd_.turn_off_ = turn_off;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamGlassHeater.Root.turn_off)
}
void Root::set_allocated_get_meteo(::cmd::DayCamGlassHeater::GetMeteo* get_meteo) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (get_meteo) {
    ::google::protobuf::Arena* submessage_arena = get_meteo->GetArena();
    if (message_arena != submessage_arena) {
      get_meteo = ::google::protobuf::internal::GetOwnedMessage(message_arena, get_meteo, submessage_arena);
    }
    set_has_get_meteo();
    _impl_.cmd_.get_meteo_ = get_meteo;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamGlassHeater.Root.get_meteo)
}
Root::Root(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamGlassHeater.Root)
}
inline PROTOBUF_NDEBUG_INLINE Root::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Root::Root(
    ::google::protobuf::Arena* arena,
    const Root& from)
    : ::google::protobuf::Message(arena) {
  Root* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (cmd_case()) {
    case CMD_NOT_SET:
      break;
      case kStart:
        _impl_.cmd_.start_ = CreateMaybeMessage<::cmd::DayCamGlassHeater::Start>(arena, *from._impl_.cmd_.start_);
        break;
      case kStop:
        _impl_.cmd_.stop_ = CreateMaybeMessage<::cmd::DayCamGlassHeater::Stop>(arena, *from._impl_.cmd_.stop_);
        break;
      case kTurnOn:
        _impl_.cmd_.turn_on_ = CreateMaybeMessage<::cmd::DayCamGlassHeater::TurnOn>(arena, *from._impl_.cmd_.turn_on_);
        break;
      case kTurnOff:
        _impl_.cmd_.turn_off_ = CreateMaybeMessage<::cmd::DayCamGlassHeater::TurnOff>(arena, *from._impl_.cmd_.turn_off_);
        break;
      case kGetMeteo:
        _impl_.cmd_.get_meteo_ = CreateMaybeMessage<::cmd::DayCamGlassHeater::GetMeteo>(arena, *from._impl_.cmd_.get_meteo_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:cmd.DayCamGlassHeater.Root)
}
inline PROTOBUF_NDEBUG_INLINE Root::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Root::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Root::~Root() {
  // @@protoc_insertion_point(destructor:cmd.DayCamGlassHeater.Root)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Root::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_cmd()) {
    clear_cmd();
  }
  _impl_.~Impl_();
}

void Root::clear_cmd() {
// @@protoc_insertion_point(one_of_clear_start:cmd.DayCamGlassHeater.Root)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (cmd_case()) {
    case kStart: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.start_;
      }
      break;
    }
    case kStop: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.stop_;
      }
      break;
    }
    case kTurnOn: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.turn_on_;
      }
      break;
    }
    case kTurnOff: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.turn_off_;
      }
      break;
    }
    case kGetMeteo: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.get_meteo_;
      }
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CMD_NOT_SET;
}


PROTOBUF_NOINLINE void Root::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.DayCamGlassHeater.Root)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_cmd();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Root::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 5, 5, 0, 2> Root::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Root_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .cmd.DayCamGlassHeater.Start start = 1;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.start_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.DayCamGlassHeater.Stop stop = 2;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.stop_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.DayCamGlassHeater.TurnOn turn_on = 3;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.turn_on_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.DayCamGlassHeater.TurnOff turn_off = 4;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.turn_off_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.DayCamGlassHeater.GetMeteo get_meteo = 5;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.get_meteo_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
  }}, {{
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::DayCamGlassHeater::_Start_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::DayCamGlassHeater::_Stop_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::DayCamGlassHeater::_TurnOn_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::DayCamGlassHeater::_TurnOff_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::DayCamGlassHeater::_GetMeteo_default_instance_},
  }}, {{
  }},
};

::uint8_t* Root::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.DayCamGlassHeater.Root)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (cmd_case()) {
    case kStart: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::start(this),
          _Internal::start(this).GetCachedSize(), target, stream);
      break;
    }
    case kStop: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::stop(this),
          _Internal::stop(this).GetCachedSize(), target, stream);
      break;
    }
    case kTurnOn: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::turn_on(this),
          _Internal::turn_on(this).GetCachedSize(), target, stream);
      break;
    }
    case kTurnOff: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, _Internal::turn_off(this),
          _Internal::turn_off(this).GetCachedSize(), target, stream);
      break;
    }
    case kGetMeteo: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, _Internal::get_meteo(this),
          _Internal::get_meteo(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.DayCamGlassHeater.Root)
  return target;
}

::size_t Root::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.DayCamGlassHeater.Root)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (cmd_case()) {
    // .cmd.DayCamGlassHeater.Start start = 1;
    case kStart: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.start_);
      break;
    }
    // .cmd.DayCamGlassHeater.Stop stop = 2;
    case kStop: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.stop_);
      break;
    }
    // .cmd.DayCamGlassHeater.TurnOn turn_on = 3;
    case kTurnOn: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.turn_on_);
      break;
    }
    // .cmd.DayCamGlassHeater.TurnOff turn_off = 4;
    case kTurnOff: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.turn_off_);
      break;
    }
    // .cmd.DayCamGlassHeater.GetMeteo get_meteo = 5;
    case kGetMeteo: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.get_meteo_);
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Root::_class_data_ = {
    Root::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Root::GetClassData() const {
  return &_class_data_;
}

void Root::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Root*>(&to_msg);
  auto& from = static_cast<const Root&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.DayCamGlassHeater.Root)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.cmd_case()) {
    case kStart: {
      _this->_internal_mutable_start()->::cmd::DayCamGlassHeater::Start::MergeFrom(
          from._internal_start());
      break;
    }
    case kStop: {
      _this->_internal_mutable_stop()->::cmd::DayCamGlassHeater::Stop::MergeFrom(
          from._internal_stop());
      break;
    }
    case kTurnOn: {
      _this->_internal_mutable_turn_on()->::cmd::DayCamGlassHeater::TurnOn::MergeFrom(
          from._internal_turn_on());
      break;
    }
    case kTurnOff: {
      _this->_internal_mutable_turn_off()->::cmd::DayCamGlassHeater::TurnOff::MergeFrom(
          from._internal_turn_off());
      break;
    }
    case kGetMeteo: {
      _this->_internal_mutable_get_meteo()->::cmd::DayCamGlassHeater::GetMeteo::MergeFrom(
          from._internal_get_meteo());
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Root::CopyFrom(const Root& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.DayCamGlassHeater.Root)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Root::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Root::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Root::InternalSwap(Root* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.cmd_, other->_impl_.cmd_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Root::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto[0]);
}
// ===================================================================

class Start::_Internal {
 public:
};

Start::Start(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamGlassHeater.Start)
}
Start::Start(
    ::google::protobuf::Arena* arena,
    const Start& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  Start* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.DayCamGlassHeater.Start)
}









::google::protobuf::Metadata Start::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto[1]);
}
// ===================================================================

class Stop::_Internal {
 public:
};

Stop::Stop(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamGlassHeater.Stop)
}
Stop::Stop(
    ::google::protobuf::Arena* arena,
    const Stop& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  Stop* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.DayCamGlassHeater.Stop)
}









::google::protobuf::Metadata Stop::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto[2]);
}
// ===================================================================

class TurnOn::_Internal {
 public:
};

TurnOn::TurnOn(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamGlassHeater.TurnOn)
}
TurnOn::TurnOn(
    ::google::protobuf::Arena* arena,
    const TurnOn& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  TurnOn* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.DayCamGlassHeater.TurnOn)
}









::google::protobuf::Metadata TurnOn::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto[3]);
}
// ===================================================================

class TurnOff::_Internal {
 public:
};

TurnOff::TurnOff(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamGlassHeater.TurnOff)
}
TurnOff::TurnOff(
    ::google::protobuf::Arena* arena,
    const TurnOff& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  TurnOff* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.DayCamGlassHeater.TurnOff)
}









::google::protobuf::Metadata TurnOff::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto[4]);
}
// ===================================================================

class GetMeteo::_Internal {
 public:
};

GetMeteo::GetMeteo(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamGlassHeater.GetMeteo)
}
GetMeteo::GetMeteo(
    ::google::protobuf::Arena* arena,
    const GetMeteo& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  GetMeteo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.DayCamGlassHeater.GetMeteo)
}









::google::protobuf::Metadata GetMeteo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcam_5fglass_5fheater_2eproto[5]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace DayCamGlassHeater
}  // namespace cmd
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
