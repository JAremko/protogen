// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jon_shared_cmd_compass.proto

#include "jon_shared_cmd_compass.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cmd {
namespace Compass {
      template <typename>
PROTOBUF_CONSTEXPR Stop::Stop(::_pbi::ConstantInitialized) {}
struct StopDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopDefaultTypeInternal() {}
  union {
    Stop _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopDefaultTypeInternal _Stop_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR Start::Start(::_pbi::ConstantInitialized) {}
struct StartDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartDefaultTypeInternal() {}
  union {
    Start _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartDefaultTypeInternal _Start_default_instance_;

inline constexpr SetUseRotaryPosition::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : flag_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetUseRotaryPosition::SetUseRotaryPosition(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetUseRotaryPositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetUseRotaryPositionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetUseRotaryPositionDefaultTypeInternal() {}
  union {
    SetUseRotaryPosition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetUseRotaryPositionDefaultTypeInternal _SetUseRotaryPosition_default_instance_;

inline constexpr SetOffsetAngleElevation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetOffsetAngleElevation::SetOffsetAngleElevation(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetOffsetAngleElevationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetOffsetAngleElevationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetOffsetAngleElevationDefaultTypeInternal() {}
  union {
    SetOffsetAngleElevation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetOffsetAngleElevationDefaultTypeInternal _SetOffsetAngleElevation_default_instance_;

inline constexpr SetOffsetAngleAzimuth::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetOffsetAngleAzimuth::SetOffsetAngleAzimuth(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetOffsetAngleAzimuthDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetOffsetAngleAzimuthDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetOffsetAngleAzimuthDefaultTypeInternal() {}
  union {
    SetOffsetAngleAzimuth _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetOffsetAngleAzimuthDefaultTypeInternal _SetOffsetAngleAzimuth_default_instance_;

inline constexpr SetMagneticDeclination::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetMagneticDeclination::SetMagneticDeclination(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetMagneticDeclinationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetMagneticDeclinationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetMagneticDeclinationDefaultTypeInternal() {}
  union {
    SetMagneticDeclination _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetMagneticDeclinationDefaultTypeInternal _SetMagneticDeclination_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR Next::Next(::_pbi::ConstantInitialized) {}
struct NextDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NextDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NextDefaultTypeInternal() {}
  union {
    Next _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NextDefaultTypeInternal _Next_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR GetMeteo::GetMeteo(::_pbi::ConstantInitialized) {}
struct GetMeteoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetMeteoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetMeteoDefaultTypeInternal() {}
  union {
    GetMeteo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetMeteoDefaultTypeInternal _GetMeteo_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR CalibrateStartShort::CalibrateStartShort(::_pbi::ConstantInitialized) {}
struct CalibrateStartShortDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalibrateStartShortDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalibrateStartShortDefaultTypeInternal() {}
  union {
    CalibrateStartShort _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalibrateStartShortDefaultTypeInternal _CalibrateStartShort_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR CalibrateStartLong::CalibrateStartLong(::_pbi::ConstantInitialized) {}
struct CalibrateStartLongDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalibrateStartLongDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalibrateStartLongDefaultTypeInternal() {}
  union {
    CalibrateStartLong _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalibrateStartLongDefaultTypeInternal _CalibrateStartLong_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR CalibrateNext::CalibrateNext(::_pbi::ConstantInitialized) {}
struct CalibrateNextDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalibrateNextDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalibrateNextDefaultTypeInternal() {}
  union {
    CalibrateNext _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalibrateNextDefaultTypeInternal _CalibrateNext_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR CalibrateCencel::CalibrateCencel(::_pbi::ConstantInitialized) {}
struct CalibrateCencelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalibrateCencelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalibrateCencelDefaultTypeInternal() {}
  union {
    CalibrateCencel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalibrateCencelDefaultTypeInternal _CalibrateCencel_default_instance_;

inline constexpr Root::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Root::Root(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RootDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RootDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RootDefaultTypeInternal() {}
  union {
    Root _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RootDefaultTypeInternal _Root_default_instance_;
}  // namespace Compass
}  // namespace cmd
static ::_pb::Metadata file_level_metadata_jon_5fshared_5fcmd_5fcompass_2eproto[13];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_jon_5fshared_5fcmd_5fcompass_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_jon_5fshared_5fcmd_5fcompass_2eproto = nullptr;
const ::uint32_t TableStruct_jon_5fshared_5fcmd_5fcompass_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::Compass::Root, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::cmd::Compass::Root, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::cmd::Compass::Root, _impl_.cmd_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::Compass::Start, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::Compass::Stop, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::Compass::Next, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::Compass::CalibrateStartLong, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::Compass::CalibrateStartShort, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::Compass::CalibrateNext, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::Compass::CalibrateCencel, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::Compass::GetMeteo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::Compass::SetMagneticDeclination, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::Compass::SetMagneticDeclination, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::Compass::SetOffsetAngleAzimuth, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::Compass::SetOffsetAngleAzimuth, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::Compass::SetOffsetAngleElevation, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::Compass::SetOffsetAngleElevation, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::Compass::SetUseRotaryPosition, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::Compass::SetUseRotaryPosition, _impl_.flag_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::cmd::Compass::Root)},
        {20, -1, -1, sizeof(::cmd::Compass::Start)},
        {28, -1, -1, sizeof(::cmd::Compass::Stop)},
        {36, -1, -1, sizeof(::cmd::Compass::Next)},
        {44, -1, -1, sizeof(::cmd::Compass::CalibrateStartLong)},
        {52, -1, -1, sizeof(::cmd::Compass::CalibrateStartShort)},
        {60, -1, -1, sizeof(::cmd::Compass::CalibrateNext)},
        {68, -1, -1, sizeof(::cmd::Compass::CalibrateCencel)},
        {76, -1, -1, sizeof(::cmd::Compass::GetMeteo)},
        {84, -1, -1, sizeof(::cmd::Compass::SetMagneticDeclination)},
        {93, -1, -1, sizeof(::cmd::Compass::SetOffsetAngleAzimuth)},
        {102, -1, -1, sizeof(::cmd::Compass::SetOffsetAngleElevation)},
        {111, -1, -1, sizeof(::cmd::Compass::SetUseRotaryPosition)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::cmd::Compass::_Root_default_instance_._instance,
    &::cmd::Compass::_Start_default_instance_._instance,
    &::cmd::Compass::_Stop_default_instance_._instance,
    &::cmd::Compass::_Next_default_instance_._instance,
    &::cmd::Compass::_CalibrateStartLong_default_instance_._instance,
    &::cmd::Compass::_CalibrateStartShort_default_instance_._instance,
    &::cmd::Compass::_CalibrateNext_default_instance_._instance,
    &::cmd::Compass::_CalibrateCencel_default_instance_._instance,
    &::cmd::Compass::_GetMeteo_default_instance_._instance,
    &::cmd::Compass::_SetMagneticDeclination_default_instance_._instance,
    &::cmd::Compass::_SetOffsetAngleAzimuth_default_instance_._instance,
    &::cmd::Compass::_SetOffsetAngleElevation_default_instance_._instance,
    &::cmd::Compass::_SetUseRotaryPosition_default_instance_._instance,
};
const char descriptor_table_protodef_jon_5fshared_5fcmd_5fcompass_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\034jon_shared_cmd_compass.proto\022\013cmd.Comp"
    "ass\"\230\005\n\004Root\022#\n\005start\030\001 \001(\0132\022.cmd.Compas"
    "s.StartH\000\022!\n\004stop\030\002 \001(\0132\021.cmd.Compass.St"
    "opH\000\022G\n\030set_magnetic_declination\030\003 \001(\0132#"
    ".cmd.Compass.SetMagneticDeclinationH\000\022F\n"
    "\030set_offset_angle_azimuth\030\004 \001(\0132\".cmd.Co"
    "mpass.SetOffsetAngleAzimuthH\000\022J\n\032set_off"
    "set_angle_elevation\030\005 \001(\0132$.cmd.Compass."
    "SetOffsetAngleElevationH\000\022D\n\027set_use_rot"
    "ary_position\030\006 \001(\0132!.cmd.Compass.SetUseR"
    "otaryPositionH\000\022\?\n\024start_calibrate_long\030"
    "\007 \001(\0132\037.cmd.Compass.CalibrateStartLongH\000"
    "\022A\n\025start_calibrate_short\030\010 \001(\0132 .cmd.Co"
    "mpass.CalibrateStartShortH\000\0224\n\016calibrate"
    "_next\030\t \001(\0132\032.cmd.Compass.CalibrateNextH"
    "\000\0228\n\020calibrate_cencel\030\n \001(\0132\034.cmd.Compas"
    "s.CalibrateCencelH\000\022*\n\tget_meteo\030\013 \001(\0132\025"
    ".cmd.Compass.GetMeteoH\000B\005\n\003cmd\"\007\n\005Start\""
    "\006\n\004Stop\"\006\n\004Next\"\024\n\022CalibrateStartLong\"\025\n"
    "\023CalibrateStartShort\"\017\n\rCalibrateNext\"\021\n"
    "\017CalibrateCencel\"\n\n\010GetMeteo\"\'\n\026SetMagne"
    "ticDeclination\022\r\n\005value\030\001 \001(\002\"&\n\025SetOffs"
    "etAngleAzimuth\022\r\n\005value\030\001 \001(\002\"(\n\027SetOffs"
    "etAngleElevation\022\r\n\005value\030\001 \001(\002\"$\n\024SetUs"
    "eRotaryPosition\022\014\n\004flag\030\001 \001(\010BNZLgit-cod"
    "ecommit.eu-central-1.amazonaws.com/v1/re"
    "pos/jettison/jonp/cmd/compassb\006proto3"
};
static ::absl::once_flag descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto = {
    false,
    false,
    1077,
    descriptor_table_protodef_jon_5fshared_5fcmd_5fcompass_2eproto,
    "jon_shared_cmd_compass.proto",
    &descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto_once,
    nullptr,
    0,
    13,
    schemas,
    file_default_instances,
    TableStruct_jon_5fshared_5fcmd_5fcompass_2eproto::offsets,
    file_level_metadata_jon_5fshared_5fcmd_5fcompass_2eproto,
    file_level_enum_descriptors_jon_5fshared_5fcmd_5fcompass_2eproto,
    file_level_service_descriptors_jon_5fshared_5fcmd_5fcompass_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto_getter() {
  return &descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_jon_5fshared_5fcmd_5fcompass_2eproto(&descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto);
namespace cmd {
namespace Compass {
// ===================================================================

class Root::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::cmd::Compass::Root, _impl_._oneof_case_);
  static const ::cmd::Compass::Start& start(const Root* msg);
  static const ::cmd::Compass::Stop& stop(const Root* msg);
  static const ::cmd::Compass::SetMagneticDeclination& set_magnetic_declination(const Root* msg);
  static const ::cmd::Compass::SetOffsetAngleAzimuth& set_offset_angle_azimuth(const Root* msg);
  static const ::cmd::Compass::SetOffsetAngleElevation& set_offset_angle_elevation(const Root* msg);
  static const ::cmd::Compass::SetUseRotaryPosition& set_use_rotary_position(const Root* msg);
  static const ::cmd::Compass::CalibrateStartLong& start_calibrate_long(const Root* msg);
  static const ::cmd::Compass::CalibrateStartShort& start_calibrate_short(const Root* msg);
  static const ::cmd::Compass::CalibrateNext& calibrate_next(const Root* msg);
  static const ::cmd::Compass::CalibrateCencel& calibrate_cencel(const Root* msg);
  static const ::cmd::Compass::GetMeteo& get_meteo(const Root* msg);
};

const ::cmd::Compass::Start& Root::_Internal::start(const Root* msg) {
  return *msg->_impl_.cmd_.start_;
}
const ::cmd::Compass::Stop& Root::_Internal::stop(const Root* msg) {
  return *msg->_impl_.cmd_.stop_;
}
const ::cmd::Compass::SetMagneticDeclination& Root::_Internal::set_magnetic_declination(const Root* msg) {
  return *msg->_impl_.cmd_.set_magnetic_declination_;
}
const ::cmd::Compass::SetOffsetAngleAzimuth& Root::_Internal::set_offset_angle_azimuth(const Root* msg) {
  return *msg->_impl_.cmd_.set_offset_angle_azimuth_;
}
const ::cmd::Compass::SetOffsetAngleElevation& Root::_Internal::set_offset_angle_elevation(const Root* msg) {
  return *msg->_impl_.cmd_.set_offset_angle_elevation_;
}
const ::cmd::Compass::SetUseRotaryPosition& Root::_Internal::set_use_rotary_position(const Root* msg) {
  return *msg->_impl_.cmd_.set_use_rotary_position_;
}
const ::cmd::Compass::CalibrateStartLong& Root::_Internal::start_calibrate_long(const Root* msg) {
  return *msg->_impl_.cmd_.start_calibrate_long_;
}
const ::cmd::Compass::CalibrateStartShort& Root::_Internal::start_calibrate_short(const Root* msg) {
  return *msg->_impl_.cmd_.start_calibrate_short_;
}
const ::cmd::Compass::CalibrateNext& Root::_Internal::calibrate_next(const Root* msg) {
  return *msg->_impl_.cmd_.calibrate_next_;
}
const ::cmd::Compass::CalibrateCencel& Root::_Internal::calibrate_cencel(const Root* msg) {
  return *msg->_impl_.cmd_.calibrate_cencel_;
}
const ::cmd::Compass::GetMeteo& Root::_Internal::get_meteo(const Root* msg) {
  return *msg->_impl_.cmd_.get_meteo_;
}
void Root::set_allocated_start(::cmd::Compass::Start* start) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (start) {
    ::google::protobuf::Arena* submessage_arena = start->GetArena();
    if (message_arena != submessage_arena) {
      start = ::google::protobuf::internal::GetOwnedMessage(message_arena, start, submessage_arena);
    }
    set_has_start();
    _impl_.cmd_.start_ = start;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.Compass.Root.start)
}
void Root::set_allocated_stop(::cmd::Compass::Stop* stop) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (stop) {
    ::google::protobuf::Arena* submessage_arena = stop->GetArena();
    if (message_arena != submessage_arena) {
      stop = ::google::protobuf::internal::GetOwnedMessage(message_arena, stop, submessage_arena);
    }
    set_has_stop();
    _impl_.cmd_.stop_ = stop;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.Compass.Root.stop)
}
void Root::set_allocated_set_magnetic_declination(::cmd::Compass::SetMagneticDeclination* set_magnetic_declination) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (set_magnetic_declination) {
    ::google::protobuf::Arena* submessage_arena = set_magnetic_declination->GetArena();
    if (message_arena != submessage_arena) {
      set_magnetic_declination = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_magnetic_declination, submessage_arena);
    }
    set_has_set_magnetic_declination();
    _impl_.cmd_.set_magnetic_declination_ = set_magnetic_declination;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.Compass.Root.set_magnetic_declination)
}
void Root::set_allocated_set_offset_angle_azimuth(::cmd::Compass::SetOffsetAngleAzimuth* set_offset_angle_azimuth) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (set_offset_angle_azimuth) {
    ::google::protobuf::Arena* submessage_arena = set_offset_angle_azimuth->GetArena();
    if (message_arena != submessage_arena) {
      set_offset_angle_azimuth = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_offset_angle_azimuth, submessage_arena);
    }
    set_has_set_offset_angle_azimuth();
    _impl_.cmd_.set_offset_angle_azimuth_ = set_offset_angle_azimuth;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.Compass.Root.set_offset_angle_azimuth)
}
void Root::set_allocated_set_offset_angle_elevation(::cmd::Compass::SetOffsetAngleElevation* set_offset_angle_elevation) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (set_offset_angle_elevation) {
    ::google::protobuf::Arena* submessage_arena = set_offset_angle_elevation->GetArena();
    if (message_arena != submessage_arena) {
      set_offset_angle_elevation = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_offset_angle_elevation, submessage_arena);
    }
    set_has_set_offset_angle_elevation();
    _impl_.cmd_.set_offset_angle_elevation_ = set_offset_angle_elevation;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.Compass.Root.set_offset_angle_elevation)
}
void Root::set_allocated_set_use_rotary_position(::cmd::Compass::SetUseRotaryPosition* set_use_rotary_position) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (set_use_rotary_position) {
    ::google::protobuf::Arena* submessage_arena = set_use_rotary_position->GetArena();
    if (message_arena != submessage_arena) {
      set_use_rotary_position = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_use_rotary_position, submessage_arena);
    }
    set_has_set_use_rotary_position();
    _impl_.cmd_.set_use_rotary_position_ = set_use_rotary_position;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.Compass.Root.set_use_rotary_position)
}
void Root::set_allocated_start_calibrate_long(::cmd::Compass::CalibrateStartLong* start_calibrate_long) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (start_calibrate_long) {
    ::google::protobuf::Arena* submessage_arena = start_calibrate_long->GetArena();
    if (message_arena != submessage_arena) {
      start_calibrate_long = ::google::protobuf::internal::GetOwnedMessage(message_arena, start_calibrate_long, submessage_arena);
    }
    set_has_start_calibrate_long();
    _impl_.cmd_.start_calibrate_long_ = start_calibrate_long;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.Compass.Root.start_calibrate_long)
}
void Root::set_allocated_start_calibrate_short(::cmd::Compass::CalibrateStartShort* start_calibrate_short) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (start_calibrate_short) {
    ::google::protobuf::Arena* submessage_arena = start_calibrate_short->GetArena();
    if (message_arena != submessage_arena) {
      start_calibrate_short = ::google::protobuf::internal::GetOwnedMessage(message_arena, start_calibrate_short, submessage_arena);
    }
    set_has_start_calibrate_short();
    _impl_.cmd_.start_calibrate_short_ = start_calibrate_short;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.Compass.Root.start_calibrate_short)
}
void Root::set_allocated_calibrate_next(::cmd::Compass::CalibrateNext* calibrate_next) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (calibrate_next) {
    ::google::protobuf::Arena* submessage_arena = calibrate_next->GetArena();
    if (message_arena != submessage_arena) {
      calibrate_next = ::google::protobuf::internal::GetOwnedMessage(message_arena, calibrate_next, submessage_arena);
    }
    set_has_calibrate_next();
    _impl_.cmd_.calibrate_next_ = calibrate_next;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.Compass.Root.calibrate_next)
}
void Root::set_allocated_calibrate_cencel(::cmd::Compass::CalibrateCencel* calibrate_cencel) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (calibrate_cencel) {
    ::google::protobuf::Arena* submessage_arena = calibrate_cencel->GetArena();
    if (message_arena != submessage_arena) {
      calibrate_cencel = ::google::protobuf::internal::GetOwnedMessage(message_arena, calibrate_cencel, submessage_arena);
    }
    set_has_calibrate_cencel();
    _impl_.cmd_.calibrate_cencel_ = calibrate_cencel;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.Compass.Root.calibrate_cencel)
}
void Root::set_allocated_get_meteo(::cmd::Compass::GetMeteo* get_meteo) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (get_meteo) {
    ::google::protobuf::Arena* submessage_arena = get_meteo->GetArena();
    if (message_arena != submessage_arena) {
      get_meteo = ::google::protobuf::internal::GetOwnedMessage(message_arena, get_meteo, submessage_arena);
    }
    set_has_get_meteo();
    _impl_.cmd_.get_meteo_ = get_meteo;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.Compass.Root.get_meteo)
}
Root::Root(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.Compass.Root)
}
inline PROTOBUF_NDEBUG_INLINE Root::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Root::Root(
    ::google::protobuf::Arena* arena,
    const Root& from)
    : ::google::protobuf::Message(arena) {
  Root* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (cmd_case()) {
    case CMD_NOT_SET:
      break;
      case kStart:
        _impl_.cmd_.start_ = CreateMaybeMessage<::cmd::Compass::Start>(arena, *from._impl_.cmd_.start_);
        break;
      case kStop:
        _impl_.cmd_.stop_ = CreateMaybeMessage<::cmd::Compass::Stop>(arena, *from._impl_.cmd_.stop_);
        break;
      case kSetMagneticDeclination:
        _impl_.cmd_.set_magnetic_declination_ = CreateMaybeMessage<::cmd::Compass::SetMagneticDeclination>(arena, *from._impl_.cmd_.set_magnetic_declination_);
        break;
      case kSetOffsetAngleAzimuth:
        _impl_.cmd_.set_offset_angle_azimuth_ = CreateMaybeMessage<::cmd::Compass::SetOffsetAngleAzimuth>(arena, *from._impl_.cmd_.set_offset_angle_azimuth_);
        break;
      case kSetOffsetAngleElevation:
        _impl_.cmd_.set_offset_angle_elevation_ = CreateMaybeMessage<::cmd::Compass::SetOffsetAngleElevation>(arena, *from._impl_.cmd_.set_offset_angle_elevation_);
        break;
      case kSetUseRotaryPosition:
        _impl_.cmd_.set_use_rotary_position_ = CreateMaybeMessage<::cmd::Compass::SetUseRotaryPosition>(arena, *from._impl_.cmd_.set_use_rotary_position_);
        break;
      case kStartCalibrateLong:
        _impl_.cmd_.start_calibrate_long_ = CreateMaybeMessage<::cmd::Compass::CalibrateStartLong>(arena, *from._impl_.cmd_.start_calibrate_long_);
        break;
      case kStartCalibrateShort:
        _impl_.cmd_.start_calibrate_short_ = CreateMaybeMessage<::cmd::Compass::CalibrateStartShort>(arena, *from._impl_.cmd_.start_calibrate_short_);
        break;
      case kCalibrateNext:
        _impl_.cmd_.calibrate_next_ = CreateMaybeMessage<::cmd::Compass::CalibrateNext>(arena, *from._impl_.cmd_.calibrate_next_);
        break;
      case kCalibrateCencel:
        _impl_.cmd_.calibrate_cencel_ = CreateMaybeMessage<::cmd::Compass::CalibrateCencel>(arena, *from._impl_.cmd_.calibrate_cencel_);
        break;
      case kGetMeteo:
        _impl_.cmd_.get_meteo_ = CreateMaybeMessage<::cmd::Compass::GetMeteo>(arena, *from._impl_.cmd_.get_meteo_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:cmd.Compass.Root)
}
inline PROTOBUF_NDEBUG_INLINE Root::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Root::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Root::~Root() {
  // @@protoc_insertion_point(destructor:cmd.Compass.Root)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Root::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_cmd()) {
    clear_cmd();
  }
  _impl_.~Impl_();
}

void Root::clear_cmd() {
// @@protoc_insertion_point(one_of_clear_start:cmd.Compass.Root)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (cmd_case()) {
    case kStart: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.start_;
      }
      break;
    }
    case kStop: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.stop_;
      }
      break;
    }
    case kSetMagneticDeclination: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.set_magnetic_declination_;
      }
      break;
    }
    case kSetOffsetAngleAzimuth: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.set_offset_angle_azimuth_;
      }
      break;
    }
    case kSetOffsetAngleElevation: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.set_offset_angle_elevation_;
      }
      break;
    }
    case kSetUseRotaryPosition: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.set_use_rotary_position_;
      }
      break;
    }
    case kStartCalibrateLong: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.start_calibrate_long_;
      }
      break;
    }
    case kStartCalibrateShort: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.start_calibrate_short_;
      }
      break;
    }
    case kCalibrateNext: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.calibrate_next_;
      }
      break;
    }
    case kCalibrateCencel: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.calibrate_cencel_;
      }
      break;
    }
    case kGetMeteo: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.get_meteo_;
      }
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CMD_NOT_SET;
}


PROTOBUF_NOINLINE void Root::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.Compass.Root)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_cmd();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Root::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 11, 11, 0, 2> Root::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    11, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    11,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Root_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .cmd.Compass.Start start = 1;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.start_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.Compass.Stop stop = 2;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.stop_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.Compass.SetMagneticDeclination set_magnetic_declination = 3;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.set_magnetic_declination_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.Compass.SetOffsetAngleAzimuth set_offset_angle_azimuth = 4;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.set_offset_angle_azimuth_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.Compass.SetOffsetAngleElevation set_offset_angle_elevation = 5;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.set_offset_angle_elevation_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.Compass.SetUseRotaryPosition set_use_rotary_position = 6;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.set_use_rotary_position_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.Compass.CalibrateStartLong start_calibrate_long = 7;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.start_calibrate_long_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.Compass.CalibrateStartShort start_calibrate_short = 8;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.start_calibrate_short_), _Internal::kOneofCaseOffset + 0, 7,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.Compass.CalibrateNext calibrate_next = 9;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.calibrate_next_), _Internal::kOneofCaseOffset + 0, 8,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.Compass.CalibrateCencel calibrate_cencel = 10;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.calibrate_cencel_), _Internal::kOneofCaseOffset + 0, 9,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.Compass.GetMeteo get_meteo = 11;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.get_meteo_), _Internal::kOneofCaseOffset + 0, 10,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
  }}, {{
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::Compass::_Start_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::Compass::_Stop_default_instance_},
    {::_pbi::TcParser::GetTable<::cmd::Compass::SetMagneticDeclination>()},
    {::_pbi::TcParser::GetTable<::cmd::Compass::SetOffsetAngleAzimuth>()},
    {::_pbi::TcParser::GetTable<::cmd::Compass::SetOffsetAngleElevation>()},
    {::_pbi::TcParser::GetTable<::cmd::Compass::SetUseRotaryPosition>()},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::Compass::_CalibrateStartLong_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::Compass::_CalibrateStartShort_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::Compass::_CalibrateNext_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::Compass::_CalibrateCencel_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::Compass::_GetMeteo_default_instance_},
  }}, {{
  }},
};

::uint8_t* Root::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.Compass.Root)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (cmd_case()) {
    case kStart: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::start(this),
          _Internal::start(this).GetCachedSize(), target, stream);
      break;
    }
    case kStop: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::stop(this),
          _Internal::stop(this).GetCachedSize(), target, stream);
      break;
    }
    case kSetMagneticDeclination: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::set_magnetic_declination(this),
          _Internal::set_magnetic_declination(this).GetCachedSize(), target, stream);
      break;
    }
    case kSetOffsetAngleAzimuth: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, _Internal::set_offset_angle_azimuth(this),
          _Internal::set_offset_angle_azimuth(this).GetCachedSize(), target, stream);
      break;
    }
    case kSetOffsetAngleElevation: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, _Internal::set_offset_angle_elevation(this),
          _Internal::set_offset_angle_elevation(this).GetCachedSize(), target, stream);
      break;
    }
    case kSetUseRotaryPosition: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, _Internal::set_use_rotary_position(this),
          _Internal::set_use_rotary_position(this).GetCachedSize(), target, stream);
      break;
    }
    case kStartCalibrateLong: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, _Internal::start_calibrate_long(this),
          _Internal::start_calibrate_long(this).GetCachedSize(), target, stream);
      break;
    }
    case kStartCalibrateShort: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          8, _Internal::start_calibrate_short(this),
          _Internal::start_calibrate_short(this).GetCachedSize(), target, stream);
      break;
    }
    case kCalibrateNext: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          9, _Internal::calibrate_next(this),
          _Internal::calibrate_next(this).GetCachedSize(), target, stream);
      break;
    }
    case kCalibrateCencel: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          10, _Internal::calibrate_cencel(this),
          _Internal::calibrate_cencel(this).GetCachedSize(), target, stream);
      break;
    }
    case kGetMeteo: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          11, _Internal::get_meteo(this),
          _Internal::get_meteo(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.Compass.Root)
  return target;
}

::size_t Root::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.Compass.Root)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (cmd_case()) {
    // .cmd.Compass.Start start = 1;
    case kStart: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.start_);
      break;
    }
    // .cmd.Compass.Stop stop = 2;
    case kStop: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.stop_);
      break;
    }
    // .cmd.Compass.SetMagneticDeclination set_magnetic_declination = 3;
    case kSetMagneticDeclination: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.set_magnetic_declination_);
      break;
    }
    // .cmd.Compass.SetOffsetAngleAzimuth set_offset_angle_azimuth = 4;
    case kSetOffsetAngleAzimuth: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.set_offset_angle_azimuth_);
      break;
    }
    // .cmd.Compass.SetOffsetAngleElevation set_offset_angle_elevation = 5;
    case kSetOffsetAngleElevation: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.set_offset_angle_elevation_);
      break;
    }
    // .cmd.Compass.SetUseRotaryPosition set_use_rotary_position = 6;
    case kSetUseRotaryPosition: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.set_use_rotary_position_);
      break;
    }
    // .cmd.Compass.CalibrateStartLong start_calibrate_long = 7;
    case kStartCalibrateLong: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.start_calibrate_long_);
      break;
    }
    // .cmd.Compass.CalibrateStartShort start_calibrate_short = 8;
    case kStartCalibrateShort: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.start_calibrate_short_);
      break;
    }
    // .cmd.Compass.CalibrateNext calibrate_next = 9;
    case kCalibrateNext: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.calibrate_next_);
      break;
    }
    // .cmd.Compass.CalibrateCencel calibrate_cencel = 10;
    case kCalibrateCencel: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.calibrate_cencel_);
      break;
    }
    // .cmd.Compass.GetMeteo get_meteo = 11;
    case kGetMeteo: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.get_meteo_);
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Root::_class_data_ = {
    Root::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Root::GetClassData() const {
  return &_class_data_;
}

void Root::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Root*>(&to_msg);
  auto& from = static_cast<const Root&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.Compass.Root)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.cmd_case()) {
    case kStart: {
      _this->_internal_mutable_start()->::cmd::Compass::Start::MergeFrom(
          from._internal_start());
      break;
    }
    case kStop: {
      _this->_internal_mutable_stop()->::cmd::Compass::Stop::MergeFrom(
          from._internal_stop());
      break;
    }
    case kSetMagneticDeclination: {
      _this->_internal_mutable_set_magnetic_declination()->::cmd::Compass::SetMagneticDeclination::MergeFrom(
          from._internal_set_magnetic_declination());
      break;
    }
    case kSetOffsetAngleAzimuth: {
      _this->_internal_mutable_set_offset_angle_azimuth()->::cmd::Compass::SetOffsetAngleAzimuth::MergeFrom(
          from._internal_set_offset_angle_azimuth());
      break;
    }
    case kSetOffsetAngleElevation: {
      _this->_internal_mutable_set_offset_angle_elevation()->::cmd::Compass::SetOffsetAngleElevation::MergeFrom(
          from._internal_set_offset_angle_elevation());
      break;
    }
    case kSetUseRotaryPosition: {
      _this->_internal_mutable_set_use_rotary_position()->::cmd::Compass::SetUseRotaryPosition::MergeFrom(
          from._internal_set_use_rotary_position());
      break;
    }
    case kStartCalibrateLong: {
      _this->_internal_mutable_start_calibrate_long()->::cmd::Compass::CalibrateStartLong::MergeFrom(
          from._internal_start_calibrate_long());
      break;
    }
    case kStartCalibrateShort: {
      _this->_internal_mutable_start_calibrate_short()->::cmd::Compass::CalibrateStartShort::MergeFrom(
          from._internal_start_calibrate_short());
      break;
    }
    case kCalibrateNext: {
      _this->_internal_mutable_calibrate_next()->::cmd::Compass::CalibrateNext::MergeFrom(
          from._internal_calibrate_next());
      break;
    }
    case kCalibrateCencel: {
      _this->_internal_mutable_calibrate_cencel()->::cmd::Compass::CalibrateCencel::MergeFrom(
          from._internal_calibrate_cencel());
      break;
    }
    case kGetMeteo: {
      _this->_internal_mutable_get_meteo()->::cmd::Compass::GetMeteo::MergeFrom(
          from._internal_get_meteo());
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Root::CopyFrom(const Root& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.Compass.Root)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Root::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Root::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Root::InternalSwap(Root* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.cmd_, other->_impl_.cmd_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Root::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fcompass_2eproto[0]);
}
// ===================================================================

class Start::_Internal {
 public:
};

Start::Start(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.Compass.Start)
}
Start::Start(
    ::google::protobuf::Arena* arena,
    const Start& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  Start* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.Compass.Start)
}









::google::protobuf::Metadata Start::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fcompass_2eproto[1]);
}
// ===================================================================

class Stop::_Internal {
 public:
};

Stop::Stop(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.Compass.Stop)
}
Stop::Stop(
    ::google::protobuf::Arena* arena,
    const Stop& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  Stop* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.Compass.Stop)
}









::google::protobuf::Metadata Stop::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fcompass_2eproto[2]);
}
// ===================================================================

class Next::_Internal {
 public:
};

Next::Next(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.Compass.Next)
}
Next::Next(
    ::google::protobuf::Arena* arena,
    const Next& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  Next* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.Compass.Next)
}









::google::protobuf::Metadata Next::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fcompass_2eproto[3]);
}
// ===================================================================

class CalibrateStartLong::_Internal {
 public:
};

CalibrateStartLong::CalibrateStartLong(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.Compass.CalibrateStartLong)
}
CalibrateStartLong::CalibrateStartLong(
    ::google::protobuf::Arena* arena,
    const CalibrateStartLong& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  CalibrateStartLong* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.Compass.CalibrateStartLong)
}









::google::protobuf::Metadata CalibrateStartLong::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fcompass_2eproto[4]);
}
// ===================================================================

class CalibrateStartShort::_Internal {
 public:
};

CalibrateStartShort::CalibrateStartShort(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.Compass.CalibrateStartShort)
}
CalibrateStartShort::CalibrateStartShort(
    ::google::protobuf::Arena* arena,
    const CalibrateStartShort& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  CalibrateStartShort* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.Compass.CalibrateStartShort)
}









::google::protobuf::Metadata CalibrateStartShort::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fcompass_2eproto[5]);
}
// ===================================================================

class CalibrateNext::_Internal {
 public:
};

CalibrateNext::CalibrateNext(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.Compass.CalibrateNext)
}
CalibrateNext::CalibrateNext(
    ::google::protobuf::Arena* arena,
    const CalibrateNext& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  CalibrateNext* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.Compass.CalibrateNext)
}









::google::protobuf::Metadata CalibrateNext::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fcompass_2eproto[6]);
}
// ===================================================================

class CalibrateCencel::_Internal {
 public:
};

CalibrateCencel::CalibrateCencel(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.Compass.CalibrateCencel)
}
CalibrateCencel::CalibrateCencel(
    ::google::protobuf::Arena* arena,
    const CalibrateCencel& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  CalibrateCencel* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.Compass.CalibrateCencel)
}









::google::protobuf::Metadata CalibrateCencel::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fcompass_2eproto[7]);
}
// ===================================================================

class GetMeteo::_Internal {
 public:
};

GetMeteo::GetMeteo(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.Compass.GetMeteo)
}
GetMeteo::GetMeteo(
    ::google::protobuf::Arena* arena,
    const GetMeteo& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  GetMeteo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.Compass.GetMeteo)
}









::google::protobuf::Metadata GetMeteo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fcompass_2eproto[8]);
}
// ===================================================================

class SetMagneticDeclination::_Internal {
 public:
};

SetMagneticDeclination::SetMagneticDeclination(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.Compass.SetMagneticDeclination)
}
SetMagneticDeclination::SetMagneticDeclination(
    ::google::protobuf::Arena* arena, const SetMagneticDeclination& from)
    : SetMagneticDeclination(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetMagneticDeclination::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetMagneticDeclination::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
SetMagneticDeclination::~SetMagneticDeclination() {
  // @@protoc_insertion_point(destructor:cmd.Compass.SetMagneticDeclination)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetMagneticDeclination::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetMagneticDeclination::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.Compass.SetMagneticDeclination)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetMagneticDeclination::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetMagneticDeclination::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetMagneticDeclination_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float value = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(SetMagneticDeclination, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float value = 1;
    {PROTOBUF_FIELD_OFFSET(SetMagneticDeclination, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetMagneticDeclination::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.Compass.SetMagneticDeclination)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.Compass.SetMagneticDeclination)
  return target;
}

::size_t SetMagneticDeclination::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.Compass.SetMagneticDeclination)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetMagneticDeclination::_class_data_ = {
    SetMagneticDeclination::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetMagneticDeclination::GetClassData() const {
  return &_class_data_;
}

void SetMagneticDeclination::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetMagneticDeclination*>(&to_msg);
  auto& from = static_cast<const SetMagneticDeclination&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.Compass.SetMagneticDeclination)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = from._internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetMagneticDeclination::CopyFrom(const SetMagneticDeclination& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.Compass.SetMagneticDeclination)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetMagneticDeclination::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetMagneticDeclination::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetMagneticDeclination::InternalSwap(SetMagneticDeclination* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata SetMagneticDeclination::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fcompass_2eproto[9]);
}
// ===================================================================

class SetOffsetAngleAzimuth::_Internal {
 public:
};

SetOffsetAngleAzimuth::SetOffsetAngleAzimuth(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.Compass.SetOffsetAngleAzimuth)
}
SetOffsetAngleAzimuth::SetOffsetAngleAzimuth(
    ::google::protobuf::Arena* arena, const SetOffsetAngleAzimuth& from)
    : SetOffsetAngleAzimuth(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetOffsetAngleAzimuth::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetOffsetAngleAzimuth::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
SetOffsetAngleAzimuth::~SetOffsetAngleAzimuth() {
  // @@protoc_insertion_point(destructor:cmd.Compass.SetOffsetAngleAzimuth)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetOffsetAngleAzimuth::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetOffsetAngleAzimuth::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.Compass.SetOffsetAngleAzimuth)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetOffsetAngleAzimuth::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetOffsetAngleAzimuth::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetOffsetAngleAzimuth_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float value = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(SetOffsetAngleAzimuth, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float value = 1;
    {PROTOBUF_FIELD_OFFSET(SetOffsetAngleAzimuth, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetOffsetAngleAzimuth::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.Compass.SetOffsetAngleAzimuth)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.Compass.SetOffsetAngleAzimuth)
  return target;
}

::size_t SetOffsetAngleAzimuth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.Compass.SetOffsetAngleAzimuth)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetOffsetAngleAzimuth::_class_data_ = {
    SetOffsetAngleAzimuth::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetOffsetAngleAzimuth::GetClassData() const {
  return &_class_data_;
}

void SetOffsetAngleAzimuth::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetOffsetAngleAzimuth*>(&to_msg);
  auto& from = static_cast<const SetOffsetAngleAzimuth&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.Compass.SetOffsetAngleAzimuth)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = from._internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetOffsetAngleAzimuth::CopyFrom(const SetOffsetAngleAzimuth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.Compass.SetOffsetAngleAzimuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetOffsetAngleAzimuth::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetOffsetAngleAzimuth::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetOffsetAngleAzimuth::InternalSwap(SetOffsetAngleAzimuth* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata SetOffsetAngleAzimuth::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fcompass_2eproto[10]);
}
// ===================================================================

class SetOffsetAngleElevation::_Internal {
 public:
};

SetOffsetAngleElevation::SetOffsetAngleElevation(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.Compass.SetOffsetAngleElevation)
}
SetOffsetAngleElevation::SetOffsetAngleElevation(
    ::google::protobuf::Arena* arena, const SetOffsetAngleElevation& from)
    : SetOffsetAngleElevation(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetOffsetAngleElevation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetOffsetAngleElevation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
SetOffsetAngleElevation::~SetOffsetAngleElevation() {
  // @@protoc_insertion_point(destructor:cmd.Compass.SetOffsetAngleElevation)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetOffsetAngleElevation::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetOffsetAngleElevation::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.Compass.SetOffsetAngleElevation)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetOffsetAngleElevation::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetOffsetAngleElevation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetOffsetAngleElevation_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float value = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(SetOffsetAngleElevation, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float value = 1;
    {PROTOBUF_FIELD_OFFSET(SetOffsetAngleElevation, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetOffsetAngleElevation::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.Compass.SetOffsetAngleElevation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.Compass.SetOffsetAngleElevation)
  return target;
}

::size_t SetOffsetAngleElevation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.Compass.SetOffsetAngleElevation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetOffsetAngleElevation::_class_data_ = {
    SetOffsetAngleElevation::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetOffsetAngleElevation::GetClassData() const {
  return &_class_data_;
}

void SetOffsetAngleElevation::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetOffsetAngleElevation*>(&to_msg);
  auto& from = static_cast<const SetOffsetAngleElevation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.Compass.SetOffsetAngleElevation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = from._internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetOffsetAngleElevation::CopyFrom(const SetOffsetAngleElevation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.Compass.SetOffsetAngleElevation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetOffsetAngleElevation::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetOffsetAngleElevation::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetOffsetAngleElevation::InternalSwap(SetOffsetAngleElevation* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata SetOffsetAngleElevation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fcompass_2eproto[11]);
}
// ===================================================================

class SetUseRotaryPosition::_Internal {
 public:
};

SetUseRotaryPosition::SetUseRotaryPosition(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.Compass.SetUseRotaryPosition)
}
SetUseRotaryPosition::SetUseRotaryPosition(
    ::google::protobuf::Arena* arena, const SetUseRotaryPosition& from)
    : SetUseRotaryPosition(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetUseRotaryPosition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetUseRotaryPosition::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.flag_ = {};
}
SetUseRotaryPosition::~SetUseRotaryPosition() {
  // @@protoc_insertion_point(destructor:cmd.Compass.SetUseRotaryPosition)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetUseRotaryPosition::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetUseRotaryPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.Compass.SetUseRotaryPosition)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.flag_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetUseRotaryPosition::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetUseRotaryPosition::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetUseRotaryPosition_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool flag = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SetUseRotaryPosition, _impl_.flag_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetUseRotaryPosition, _impl_.flag_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool flag = 1;
    {PROTOBUF_FIELD_OFFSET(SetUseRotaryPosition, _impl_.flag_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetUseRotaryPosition::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.Compass.SetUseRotaryPosition)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool flag = 1;
  if (this->_internal_flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.Compass.SetUseRotaryPosition)
  return target;
}

::size_t SetUseRotaryPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.Compass.SetUseRotaryPosition)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool flag = 1;
  if (this->_internal_flag() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetUseRotaryPosition::_class_data_ = {
    SetUseRotaryPosition::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetUseRotaryPosition::GetClassData() const {
  return &_class_data_;
}

void SetUseRotaryPosition::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetUseRotaryPosition*>(&to_msg);
  auto& from = static_cast<const SetUseRotaryPosition&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.Compass.SetUseRotaryPosition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_flag() != 0) {
    _this->_internal_set_flag(from._internal_flag());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetUseRotaryPosition::CopyFrom(const SetUseRotaryPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.Compass.SetUseRotaryPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetUseRotaryPosition::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetUseRotaryPosition::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetUseRotaryPosition::InternalSwap(SetUseRotaryPosition* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.flag_, other->_impl_.flag_);
}

::google::protobuf::Metadata SetUseRotaryPosition::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fcompass_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fcompass_2eproto[12]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Compass
}  // namespace cmd
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
