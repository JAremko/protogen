// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jon_shared_cmd_lrf_align.proto

#include "jon_shared_cmd_lrf_align.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cmd {
namespace Lrf_calib {

inline constexpr ShiftOffsetsBy::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ShiftOffsetsBy::ShiftOffsetsBy(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ShiftOffsetsByDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShiftOffsetsByDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShiftOffsetsByDefaultTypeInternal() {}
  union {
    ShiftOffsetsBy _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShiftOffsetsByDefaultTypeInternal _ShiftOffsetsBy_default_instance_;

inline constexpr SetOffsets::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetOffsets::SetOffsets(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetOffsetsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetOffsetsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetOffsetsDefaultTypeInternal() {}
  union {
    SetOffsets _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetOffsetsDefaultTypeInternal _SetOffsets_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SaveOffsets::SaveOffsets(::_pbi::ConstantInitialized) {}
struct SaveOffsetsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SaveOffsetsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SaveOffsetsDefaultTypeInternal() {}
  union {
    SaveOffsets _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SaveOffsetsDefaultTypeInternal _SaveOffsets_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ResetOffsets::ResetOffsets(::_pbi::ConstantInitialized) {}
struct ResetOffsetsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResetOffsetsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResetOffsetsDefaultTypeInternal() {}
  union {
    ResetOffsets _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResetOffsetsDefaultTypeInternal _ResetOffsets_default_instance_;

inline constexpr Offsets::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Offsets::Offsets(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OffsetsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OffsetsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OffsetsDefaultTypeInternal() {}
  union {
    Offsets _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OffsetsDefaultTypeInternal _Offsets_default_instance_;

inline constexpr Root::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : channel_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Root::Root(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RootDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RootDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RootDefaultTypeInternal() {}
  union {
    Root _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RootDefaultTypeInternal _Root_default_instance_;
}  // namespace Lrf_calib
}  // namespace cmd
static ::_pb::Metadata file_level_metadata_jon_5fshared_5fcmd_5flrf_5falign_2eproto[6];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_jon_5fshared_5fcmd_5flrf_5falign_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_jon_5fshared_5fcmd_5flrf_5falign_2eproto = nullptr;
const ::uint32_t TableStruct_jon_5fshared_5fcmd_5flrf_5falign_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::Lrf_calib::Root, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::cmd::Lrf_calib::Root, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::cmd::Lrf_calib::Root, _impl_.channel_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::Lrf_calib::Offsets, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::cmd::Lrf_calib::Offsets, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::cmd::Lrf_calib::Offsets, _impl_.cmd_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::Lrf_calib::SetOffsets, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::Lrf_calib::SetOffsets, _impl_.x_),
    PROTOBUF_FIELD_OFFSET(::cmd::Lrf_calib::SetOffsets, _impl_.y_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::Lrf_calib::ShiftOffsetsBy, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::Lrf_calib::ShiftOffsetsBy, _impl_.x_),
    PROTOBUF_FIELD_OFFSET(::cmd::Lrf_calib::ShiftOffsetsBy, _impl_.y_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::Lrf_calib::ResetOffsets, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::Lrf_calib::SaveOffsets, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::cmd::Lrf_calib::Root)},
        {11, -1, -1, sizeof(::cmd::Lrf_calib::Offsets)},
        {24, -1, -1, sizeof(::cmd::Lrf_calib::SetOffsets)},
        {34, -1, -1, sizeof(::cmd::Lrf_calib::ShiftOffsetsBy)},
        {44, -1, -1, sizeof(::cmd::Lrf_calib::ResetOffsets)},
        {52, -1, -1, sizeof(::cmd::Lrf_calib::SaveOffsets)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::cmd::Lrf_calib::_Root_default_instance_._instance,
    &::cmd::Lrf_calib::_Offsets_default_instance_._instance,
    &::cmd::Lrf_calib::_SetOffsets_default_instance_._instance,
    &::cmd::Lrf_calib::_ShiftOffsetsBy_default_instance_._instance,
    &::cmd::Lrf_calib::_ResetOffsets_default_instance_._instance,
    &::cmd::Lrf_calib::_SaveOffsets_default_instance_._instance,
};
const char descriptor_table_protodef_jon_5fshared_5fcmd_5flrf_5falign_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\036jon_shared_cmd_lrf_align.proto\022\rcmd.Lr"
    "f_calib\"`\n\004Root\022%\n\003day\030\001 \001(\0132\026.cmd.Lrf_c"
    "alib.OffsetsH\000\022&\n\004heat\030\002 \001(\0132\026.cmd.Lrf_c"
    "alib.OffsetsH\000B\t\n\007channel\"\304\001\n\007Offsets\022(\n"
    "\003set\030\001 \001(\0132\031.cmd.Lrf_calib.SetOffsetsH\000\022"
    "*\n\004save\030\002 \001(\0132\032.cmd.Lrf_calib.SaveOffset"
    "sH\000\022,\n\005reset\030\003 \001(\0132\033.cmd.Lrf_calib.Reset"
    "OffsetsH\000\022.\n\005shift\030\004 \001(\0132\035.cmd.Lrf_calib"
    ".ShiftOffsetsByH\000B\005\n\003cmd\"\"\n\nSetOffsets\022\t"
    "\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\"&\n\016ShiftOffsetsBy\022\t"
    "\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\"\016\n\014ResetOffsets\"\r\n\013"
    "SaveOffsetsBPZNgit-codecommit.eu-central"
    "-1.amazonaws.com/v1/repos/jettison/jonp/"
    "cmd/lrf_alignb\006proto3"
};
static ::absl::once_flag descriptor_table_jon_5fshared_5fcmd_5flrf_5falign_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_jon_5fshared_5fcmd_5flrf_5falign_2eproto = {
    false,
    false,
    541,
    descriptor_table_protodef_jon_5fshared_5fcmd_5flrf_5falign_2eproto,
    "jon_shared_cmd_lrf_align.proto",
    &descriptor_table_jon_5fshared_5fcmd_5flrf_5falign_2eproto_once,
    nullptr,
    0,
    6,
    schemas,
    file_default_instances,
    TableStruct_jon_5fshared_5fcmd_5flrf_5falign_2eproto::offsets,
    file_level_metadata_jon_5fshared_5fcmd_5flrf_5falign_2eproto,
    file_level_enum_descriptors_jon_5fshared_5fcmd_5flrf_5falign_2eproto,
    file_level_service_descriptors_jon_5fshared_5fcmd_5flrf_5falign_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_jon_5fshared_5fcmd_5flrf_5falign_2eproto_getter() {
  return &descriptor_table_jon_5fshared_5fcmd_5flrf_5falign_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_jon_5fshared_5fcmd_5flrf_5falign_2eproto(&descriptor_table_jon_5fshared_5fcmd_5flrf_5falign_2eproto);
namespace cmd {
namespace Lrf_calib {
// ===================================================================

class Root::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::cmd::Lrf_calib::Root, _impl_._oneof_case_);
  static const ::cmd::Lrf_calib::Offsets& day(const Root* msg);
  static const ::cmd::Lrf_calib::Offsets& heat(const Root* msg);
};

const ::cmd::Lrf_calib::Offsets& Root::_Internal::day(const Root* msg) {
  return *msg->_impl_.channel_.day_;
}
const ::cmd::Lrf_calib::Offsets& Root::_Internal::heat(const Root* msg) {
  return *msg->_impl_.channel_.heat_;
}
void Root::set_allocated_day(::cmd::Lrf_calib::Offsets* day) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_channel();
  if (day) {
    ::google::protobuf::Arena* submessage_arena = day->GetArena();
    if (message_arena != submessage_arena) {
      day = ::google::protobuf::internal::GetOwnedMessage(message_arena, day, submessage_arena);
    }
    set_has_day();
    _impl_.channel_.day_ = day;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.Lrf_calib.Root.day)
}
void Root::set_allocated_heat(::cmd::Lrf_calib::Offsets* heat) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_channel();
  if (heat) {
    ::google::protobuf::Arena* submessage_arena = heat->GetArena();
    if (message_arena != submessage_arena) {
      heat = ::google::protobuf::internal::GetOwnedMessage(message_arena, heat, submessage_arena);
    }
    set_has_heat();
    _impl_.channel_.heat_ = heat;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.Lrf_calib.Root.heat)
}
Root::Root(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.Lrf_calib.Root)
}
inline PROTOBUF_NDEBUG_INLINE Root::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : channel_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Root::Root(
    ::google::protobuf::Arena* arena,
    const Root& from)
    : ::google::protobuf::Message(arena) {
  Root* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (channel_case()) {
    case CHANNEL_NOT_SET:
      break;
      case kDay:
        _impl_.channel_.day_ = CreateMaybeMessage<::cmd::Lrf_calib::Offsets>(arena, *from._impl_.channel_.day_);
        break;
      case kHeat:
        _impl_.channel_.heat_ = CreateMaybeMessage<::cmd::Lrf_calib::Offsets>(arena, *from._impl_.channel_.heat_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:cmd.Lrf_calib.Root)
}
inline PROTOBUF_NDEBUG_INLINE Root::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : channel_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Root::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Root::~Root() {
  // @@protoc_insertion_point(destructor:cmd.Lrf_calib.Root)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Root::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_channel()) {
    clear_channel();
  }
  _impl_.~Impl_();
}

void Root::clear_channel() {
// @@protoc_insertion_point(one_of_clear_start:cmd.Lrf_calib.Root)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (channel_case()) {
    case kDay: {
      if (GetArena() == nullptr) {
        delete _impl_.channel_.day_;
      }
      break;
    }
    case kHeat: {
      if (GetArena() == nullptr) {
        delete _impl_.channel_.heat_;
      }
      break;
    }
    case CHANNEL_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CHANNEL_NOT_SET;
}


PROTOBUF_NOINLINE void Root::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.Lrf_calib.Root)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_channel();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Root::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> Root::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Root_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .cmd.Lrf_calib.Offsets day = 1;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.channel_.day_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.Lrf_calib.Offsets heat = 2;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.channel_.heat_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cmd::Lrf_calib::Offsets>()},
    {::_pbi::TcParser::GetTable<::cmd::Lrf_calib::Offsets>()},
  }}, {{
  }},
};

::uint8_t* Root::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.Lrf_calib.Root)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (channel_case()) {
    case kDay: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::day(this),
          _Internal::day(this).GetCachedSize(), target, stream);
      break;
    }
    case kHeat: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::heat(this),
          _Internal::heat(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.Lrf_calib.Root)
  return target;
}

::size_t Root::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.Lrf_calib.Root)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (channel_case()) {
    // .cmd.Lrf_calib.Offsets day = 1;
    case kDay: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.channel_.day_);
      break;
    }
    // .cmd.Lrf_calib.Offsets heat = 2;
    case kHeat: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.channel_.heat_);
      break;
    }
    case CHANNEL_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Root::_class_data_ = {
    Root::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Root::GetClassData() const {
  return &_class_data_;
}

void Root::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Root*>(&to_msg);
  auto& from = static_cast<const Root&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.Lrf_calib.Root)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.channel_case()) {
    case kDay: {
      _this->_internal_mutable_day()->::cmd::Lrf_calib::Offsets::MergeFrom(
          from._internal_day());
      break;
    }
    case kHeat: {
      _this->_internal_mutable_heat()->::cmd::Lrf_calib::Offsets::MergeFrom(
          from._internal_heat());
      break;
    }
    case CHANNEL_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Root::CopyFrom(const Root& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.Lrf_calib.Root)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Root::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Root::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Root::InternalSwap(Root* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.channel_, other->_impl_.channel_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Root::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5flrf_5falign_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5flrf_5falign_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5flrf_5falign_2eproto[0]);
}
// ===================================================================

class Offsets::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::cmd::Lrf_calib::Offsets, _impl_._oneof_case_);
  static const ::cmd::Lrf_calib::SetOffsets& set(const Offsets* msg);
  static const ::cmd::Lrf_calib::SaveOffsets& save(const Offsets* msg);
  static const ::cmd::Lrf_calib::ResetOffsets& reset(const Offsets* msg);
  static const ::cmd::Lrf_calib::ShiftOffsetsBy& shift(const Offsets* msg);
};

const ::cmd::Lrf_calib::SetOffsets& Offsets::_Internal::set(const Offsets* msg) {
  return *msg->_impl_.cmd_.set_;
}
const ::cmd::Lrf_calib::SaveOffsets& Offsets::_Internal::save(const Offsets* msg) {
  return *msg->_impl_.cmd_.save_;
}
const ::cmd::Lrf_calib::ResetOffsets& Offsets::_Internal::reset(const Offsets* msg) {
  return *msg->_impl_.cmd_.reset_;
}
const ::cmd::Lrf_calib::ShiftOffsetsBy& Offsets::_Internal::shift(const Offsets* msg) {
  return *msg->_impl_.cmd_.shift_;
}
void Offsets::set_allocated_set(::cmd::Lrf_calib::SetOffsets* set) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (set) {
    ::google::protobuf::Arena* submessage_arena = set->GetArena();
    if (message_arena != submessage_arena) {
      set = ::google::protobuf::internal::GetOwnedMessage(message_arena, set, submessage_arena);
    }
    set_has_set();
    _impl_.cmd_.set_ = set;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.Lrf_calib.Offsets.set)
}
void Offsets::set_allocated_save(::cmd::Lrf_calib::SaveOffsets* save) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (save) {
    ::google::protobuf::Arena* submessage_arena = save->GetArena();
    if (message_arena != submessage_arena) {
      save = ::google::protobuf::internal::GetOwnedMessage(message_arena, save, submessage_arena);
    }
    set_has_save();
    _impl_.cmd_.save_ = save;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.Lrf_calib.Offsets.save)
}
void Offsets::set_allocated_reset(::cmd::Lrf_calib::ResetOffsets* reset) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (reset) {
    ::google::protobuf::Arena* submessage_arena = reset->GetArena();
    if (message_arena != submessage_arena) {
      reset = ::google::protobuf::internal::GetOwnedMessage(message_arena, reset, submessage_arena);
    }
    set_has_reset();
    _impl_.cmd_.reset_ = reset;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.Lrf_calib.Offsets.reset)
}
void Offsets::set_allocated_shift(::cmd::Lrf_calib::ShiftOffsetsBy* shift) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (shift) {
    ::google::protobuf::Arena* submessage_arena = shift->GetArena();
    if (message_arena != submessage_arena) {
      shift = ::google::protobuf::internal::GetOwnedMessage(message_arena, shift, submessage_arena);
    }
    set_has_shift();
    _impl_.cmd_.shift_ = shift;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.Lrf_calib.Offsets.shift)
}
Offsets::Offsets(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.Lrf_calib.Offsets)
}
inline PROTOBUF_NDEBUG_INLINE Offsets::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Offsets::Offsets(
    ::google::protobuf::Arena* arena,
    const Offsets& from)
    : ::google::protobuf::Message(arena) {
  Offsets* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (cmd_case()) {
    case CMD_NOT_SET:
      break;
      case kSet:
        _impl_.cmd_.set_ = CreateMaybeMessage<::cmd::Lrf_calib::SetOffsets>(arena, *from._impl_.cmd_.set_);
        break;
      case kSave:
        _impl_.cmd_.save_ = CreateMaybeMessage<::cmd::Lrf_calib::SaveOffsets>(arena, *from._impl_.cmd_.save_);
        break;
      case kReset:
        _impl_.cmd_.reset_ = CreateMaybeMessage<::cmd::Lrf_calib::ResetOffsets>(arena, *from._impl_.cmd_.reset_);
        break;
      case kShift:
        _impl_.cmd_.shift_ = CreateMaybeMessage<::cmd::Lrf_calib::ShiftOffsetsBy>(arena, *from._impl_.cmd_.shift_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:cmd.Lrf_calib.Offsets)
}
inline PROTOBUF_NDEBUG_INLINE Offsets::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Offsets::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Offsets::~Offsets() {
  // @@protoc_insertion_point(destructor:cmd.Lrf_calib.Offsets)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Offsets::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_cmd()) {
    clear_cmd();
  }
  _impl_.~Impl_();
}

void Offsets::clear_cmd() {
// @@protoc_insertion_point(one_of_clear_start:cmd.Lrf_calib.Offsets)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (cmd_case()) {
    case kSet: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.set_;
      }
      break;
    }
    case kSave: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.save_;
      }
      break;
    }
    case kReset: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.reset_;
      }
      break;
    }
    case kShift: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.shift_;
      }
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CMD_NOT_SET;
}


PROTOBUF_NOINLINE void Offsets::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.Lrf_calib.Offsets)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_cmd();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Offsets::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 4, 4, 0, 2> Offsets::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Offsets_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .cmd.Lrf_calib.SetOffsets set = 1;
    {PROTOBUF_FIELD_OFFSET(Offsets, _impl_.cmd_.set_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.Lrf_calib.SaveOffsets save = 2;
    {PROTOBUF_FIELD_OFFSET(Offsets, _impl_.cmd_.save_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.Lrf_calib.ResetOffsets reset = 3;
    {PROTOBUF_FIELD_OFFSET(Offsets, _impl_.cmd_.reset_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.Lrf_calib.ShiftOffsetsBy shift = 4;
    {PROTOBUF_FIELD_OFFSET(Offsets, _impl_.cmd_.shift_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cmd::Lrf_calib::SetOffsets>()},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::Lrf_calib::_SaveOffsets_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::Lrf_calib::_ResetOffsets_default_instance_},
    {::_pbi::TcParser::GetTable<::cmd::Lrf_calib::ShiftOffsetsBy>()},
  }}, {{
  }},
};

::uint8_t* Offsets::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.Lrf_calib.Offsets)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (cmd_case()) {
    case kSet: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::set(this),
          _Internal::set(this).GetCachedSize(), target, stream);
      break;
    }
    case kSave: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::save(this),
          _Internal::save(this).GetCachedSize(), target, stream);
      break;
    }
    case kReset: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::reset(this),
          _Internal::reset(this).GetCachedSize(), target, stream);
      break;
    }
    case kShift: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, _Internal::shift(this),
          _Internal::shift(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.Lrf_calib.Offsets)
  return target;
}

::size_t Offsets::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.Lrf_calib.Offsets)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (cmd_case()) {
    // .cmd.Lrf_calib.SetOffsets set = 1;
    case kSet: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.set_);
      break;
    }
    // .cmd.Lrf_calib.SaveOffsets save = 2;
    case kSave: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.save_);
      break;
    }
    // .cmd.Lrf_calib.ResetOffsets reset = 3;
    case kReset: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.reset_);
      break;
    }
    // .cmd.Lrf_calib.ShiftOffsetsBy shift = 4;
    case kShift: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.shift_);
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Offsets::_class_data_ = {
    Offsets::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Offsets::GetClassData() const {
  return &_class_data_;
}

void Offsets::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Offsets*>(&to_msg);
  auto& from = static_cast<const Offsets&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.Lrf_calib.Offsets)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.cmd_case()) {
    case kSet: {
      _this->_internal_mutable_set()->::cmd::Lrf_calib::SetOffsets::MergeFrom(
          from._internal_set());
      break;
    }
    case kSave: {
      _this->_internal_mutable_save()->::cmd::Lrf_calib::SaveOffsets::MergeFrom(
          from._internal_save());
      break;
    }
    case kReset: {
      _this->_internal_mutable_reset()->::cmd::Lrf_calib::ResetOffsets::MergeFrom(
          from._internal_reset());
      break;
    }
    case kShift: {
      _this->_internal_mutable_shift()->::cmd::Lrf_calib::ShiftOffsetsBy::MergeFrom(
          from._internal_shift());
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Offsets::CopyFrom(const Offsets& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.Lrf_calib.Offsets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Offsets::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Offsets::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Offsets::InternalSwap(Offsets* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.cmd_, other->_impl_.cmd_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Offsets::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5flrf_5falign_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5flrf_5falign_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5flrf_5falign_2eproto[1]);
}
// ===================================================================

class SetOffsets::_Internal {
 public:
};

SetOffsets::SetOffsets(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.Lrf_calib.SetOffsets)
}
SetOffsets::SetOffsets(
    ::google::protobuf::Arena* arena, const SetOffsets& from)
    : SetOffsets(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetOffsets::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetOffsets::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, y_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::y_));
}
SetOffsets::~SetOffsets() {
  // @@protoc_insertion_point(destructor:cmd.Lrf_calib.SetOffsets)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetOffsets::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetOffsets::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.Lrf_calib.SetOffsets)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.y_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.y_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetOffsets::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> SetOffsets::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetOffsets_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 y = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetOffsets, _impl_.y_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SetOffsets, _impl_.y_)}},
    // int32 x = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetOffsets, _impl_.x_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetOffsets, _impl_.x_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 x = 1;
    {PROTOBUF_FIELD_OFFSET(SetOffsets, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 y = 2;
    {PROTOBUF_FIELD_OFFSET(SetOffsets, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetOffsets::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.Lrf_calib.SetOffsets)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 x = 1;
  if (this->_internal_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_x(), target);
  }

  // int32 y = 2;
  if (this->_internal_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_y(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.Lrf_calib.SetOffsets)
  return target;
}

::size_t SetOffsets::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.Lrf_calib.SetOffsets)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->_internal_x() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_x());
  }

  // int32 y = 2;
  if (this->_internal_y() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_y());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetOffsets::_class_data_ = {
    SetOffsets::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetOffsets::GetClassData() const {
  return &_class_data_;
}

void SetOffsets::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetOffsets*>(&to_msg);
  auto& from = static_cast<const SetOffsets&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.Lrf_calib.SetOffsets)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_x() != 0) {
    _this->_internal_set_x(from._internal_x());
  }
  if (from._internal_y() != 0) {
    _this->_internal_set_y(from._internal_y());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetOffsets::CopyFrom(const SetOffsets& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.Lrf_calib.SetOffsets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetOffsets::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetOffsets::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetOffsets::InternalSwap(SetOffsets* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetOffsets, _impl_.y_)
      + sizeof(SetOffsets::_impl_.y_)
      - PROTOBUF_FIELD_OFFSET(SetOffsets, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata SetOffsets::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5flrf_5falign_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5flrf_5falign_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5flrf_5falign_2eproto[2]);
}
// ===================================================================

class ShiftOffsetsBy::_Internal {
 public:
};

ShiftOffsetsBy::ShiftOffsetsBy(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.Lrf_calib.ShiftOffsetsBy)
}
ShiftOffsetsBy::ShiftOffsetsBy(
    ::google::protobuf::Arena* arena, const ShiftOffsetsBy& from)
    : ShiftOffsetsBy(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ShiftOffsetsBy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ShiftOffsetsBy::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, y_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::y_));
}
ShiftOffsetsBy::~ShiftOffsetsBy() {
  // @@protoc_insertion_point(destructor:cmd.Lrf_calib.ShiftOffsetsBy)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ShiftOffsetsBy::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ShiftOffsetsBy::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.Lrf_calib.ShiftOffsetsBy)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.y_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.y_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ShiftOffsetsBy::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> ShiftOffsetsBy::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ShiftOffsetsBy_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 y = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ShiftOffsetsBy, _impl_.y_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ShiftOffsetsBy, _impl_.y_)}},
    // int32 x = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ShiftOffsetsBy, _impl_.x_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ShiftOffsetsBy, _impl_.x_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 x = 1;
    {PROTOBUF_FIELD_OFFSET(ShiftOffsetsBy, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 y = 2;
    {PROTOBUF_FIELD_OFFSET(ShiftOffsetsBy, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ShiftOffsetsBy::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.Lrf_calib.ShiftOffsetsBy)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 x = 1;
  if (this->_internal_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_x(), target);
  }

  // int32 y = 2;
  if (this->_internal_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_y(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.Lrf_calib.ShiftOffsetsBy)
  return target;
}

::size_t ShiftOffsetsBy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.Lrf_calib.ShiftOffsetsBy)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->_internal_x() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_x());
  }

  // int32 y = 2;
  if (this->_internal_y() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_y());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ShiftOffsetsBy::_class_data_ = {
    ShiftOffsetsBy::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ShiftOffsetsBy::GetClassData() const {
  return &_class_data_;
}

void ShiftOffsetsBy::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ShiftOffsetsBy*>(&to_msg);
  auto& from = static_cast<const ShiftOffsetsBy&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.Lrf_calib.ShiftOffsetsBy)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_x() != 0) {
    _this->_internal_set_x(from._internal_x());
  }
  if (from._internal_y() != 0) {
    _this->_internal_set_y(from._internal_y());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ShiftOffsetsBy::CopyFrom(const ShiftOffsetsBy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.Lrf_calib.ShiftOffsetsBy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ShiftOffsetsBy::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ShiftOffsetsBy::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ShiftOffsetsBy::InternalSwap(ShiftOffsetsBy* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ShiftOffsetsBy, _impl_.y_)
      + sizeof(ShiftOffsetsBy::_impl_.y_)
      - PROTOBUF_FIELD_OFFSET(ShiftOffsetsBy, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata ShiftOffsetsBy::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5flrf_5falign_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5flrf_5falign_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5flrf_5falign_2eproto[3]);
}
// ===================================================================

class ResetOffsets::_Internal {
 public:
};

ResetOffsets::ResetOffsets(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.Lrf_calib.ResetOffsets)
}
ResetOffsets::ResetOffsets(
    ::google::protobuf::Arena* arena,
    const ResetOffsets& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  ResetOffsets* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.Lrf_calib.ResetOffsets)
}









::google::protobuf::Metadata ResetOffsets::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5flrf_5falign_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5flrf_5falign_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5flrf_5falign_2eproto[4]);
}
// ===================================================================

class SaveOffsets::_Internal {
 public:
};

SaveOffsets::SaveOffsets(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.Lrf_calib.SaveOffsets)
}
SaveOffsets::SaveOffsets(
    ::google::protobuf::Arena* arena,
    const SaveOffsets& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SaveOffsets* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.Lrf_calib.SaveOffsets)
}









::google::protobuf::Metadata SaveOffsets::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5flrf_5falign_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5flrf_5falign_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5flrf_5falign_2eproto[5]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Lrf_calib
}  // namespace cmd
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
