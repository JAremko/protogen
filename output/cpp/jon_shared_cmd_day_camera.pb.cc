// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jon_shared_cmd_day_camera.proto

#include "jon_shared_cmd_day_camera.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cmd {
namespace DayCamera {
      template <typename>
PROTOBUF_CONSTEXPR Stop::Stop(::_pbi::ConstantInitialized) {}
struct StopDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopDefaultTypeInternal() {}
  union {
    Stop _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopDefaultTypeInternal _Stop_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR Start::Start(::_pbi::ConstantInitialized) {}
struct StartDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartDefaultTypeInternal() {}
  union {
    Start _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartDefaultTypeInternal _Start_default_instance_;

inline constexpr ShiftClaheLevel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ShiftClaheLevel::ShiftClaheLevel(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ShiftClaheLevelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShiftClaheLevelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShiftClaheLevelDefaultTypeInternal() {}
  union {
    ShiftClaheLevel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShiftClaheLevelDefaultTypeInternal _ShiftClaheLevel_default_instance_;

inline constexpr SetZoomTableValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetZoomTableValue::SetZoomTableValue(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetZoomTableValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetZoomTableValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetZoomTableValueDefaultTypeInternal() {}
  union {
    SetZoomTableValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetZoomTableValueDefaultTypeInternal _SetZoomTableValue_default_instance_;

inline constexpr SetValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetValue::SetValue(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetValueDefaultTypeInternal() {}
  union {
    SetValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetValueDefaultTypeInternal _SetValue_default_instance_;

inline constexpr SetIris::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetIris::SetIris(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetIrisDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetIrisDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetIrisDefaultTypeInternal() {}
  union {
    SetIris _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetIrisDefaultTypeInternal _SetIris_default_instance_;

inline constexpr SetInfraRedFilter::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetInfraRedFilter::SetInfraRedFilter(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetInfraRedFilterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetInfraRedFilterDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetInfraRedFilterDefaultTypeInternal() {}
  union {
    SetInfraRedFilter _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetInfraRedFilterDefaultTypeInternal _SetInfraRedFilter_default_instance_;

inline constexpr SetFxMode::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : mode_{static_cast< ::ser::JonGuiDataFxModeDay >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetFxMode::SetFxMode(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetFxModeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetFxModeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetFxModeDefaultTypeInternal() {}
  union {
    SetFxMode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetFxModeDefaultTypeInternal _SetFxMode_default_instance_;

inline constexpr SetDigitalZoomLevel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetDigitalZoomLevel::SetDigitalZoomLevel(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetDigitalZoomLevelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetDigitalZoomLevelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetDigitalZoomLevelDefaultTypeInternal() {}
  union {
    SetDigitalZoomLevel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetDigitalZoomLevelDefaultTypeInternal _SetDigitalZoomLevel_default_instance_;

inline constexpr SetClaheLevel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetClaheLevel::SetClaheLevel(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetClaheLevelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetClaheLevelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetClaheLevelDefaultTypeInternal() {}
  union {
    SetClaheLevel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetClaheLevelDefaultTypeInternal _SetClaheLevel_default_instance_;

inline constexpr SetAutoIris::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetAutoIris::SetAutoIris(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SetAutoIrisDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetAutoIrisDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetAutoIrisDefaultTypeInternal() {}
  union {
    SetAutoIris _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetAutoIrisDefaultTypeInternal _SetAutoIris_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SaveToTableFocus::SaveToTableFocus(::_pbi::ConstantInitialized) {}
struct SaveToTableFocusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SaveToTableFocusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SaveToTableFocusDefaultTypeInternal() {}
  union {
    SaveToTableFocus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SaveToTableFocusDefaultTypeInternal _SaveToTableFocus_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SaveToTable::SaveToTable(::_pbi::ConstantInitialized) {}
struct SaveToTableDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SaveToTableDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SaveToTableDefaultTypeInternal() {}
  union {
    SaveToTable _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SaveToTableDefaultTypeInternal _SaveToTable_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ResetZoom::ResetZoom(::_pbi::ConstantInitialized) {}
struct ResetZoomDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResetZoomDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResetZoomDefaultTypeInternal() {}
  union {
    ResetZoom _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResetZoomDefaultTypeInternal _ResetZoom_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ResetFocus::ResetFocus(::_pbi::ConstantInitialized) {}
struct ResetFocusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResetFocusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResetFocusDefaultTypeInternal() {}
  union {
    ResetFocus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResetFocusDefaultTypeInternal _ResetFocus_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR RefreshFxMode::RefreshFxMode(::_pbi::ConstantInitialized) {}
struct RefreshFxModeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshFxModeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshFxModeDefaultTypeInternal() {}
  union {
    RefreshFxMode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshFxModeDefaultTypeInternal _RefreshFxMode_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR PrevZoomTablePos::PrevZoomTablePos(::_pbi::ConstantInitialized) {}
struct PrevZoomTablePosDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PrevZoomTablePosDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PrevZoomTablePosDefaultTypeInternal() {}
  union {
    PrevZoomTablePos _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PrevZoomTablePosDefaultTypeInternal _PrevZoomTablePos_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR PrevFxMode::PrevFxMode(::_pbi::ConstantInitialized) {}
struct PrevFxModeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PrevFxModeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PrevFxModeDefaultTypeInternal() {}
  union {
    PrevFxMode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PrevFxModeDefaultTypeInternal _PrevFxMode_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR Photo::Photo(::_pbi::ConstantInitialized) {}
struct PhotoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PhotoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PhotoDefaultTypeInternal() {}
  union {
    Photo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PhotoDefaultTypeInternal _Photo_default_instance_;

inline constexpr Offset::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : offset_value_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Offset::Offset(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OffsetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OffsetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OffsetDefaultTypeInternal() {}
  union {
    Offset _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OffsetDefaultTypeInternal _Offset_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR NextZoomTablePos::NextZoomTablePos(::_pbi::ConstantInitialized) {}
struct NextZoomTablePosDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NextZoomTablePosDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NextZoomTablePosDefaultTypeInternal() {}
  union {
    NextZoomTablePos _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NextZoomTablePosDefaultTypeInternal _NextZoomTablePos_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR NextFxMode::NextFxMode(::_pbi::ConstantInitialized) {}
struct NextFxModeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NextFxModeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NextFxModeDefaultTypeInternal() {}
  union {
    NextFxMode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NextFxModeDefaultTypeInternal _NextFxMode_default_instance_;

inline constexpr Move::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : target_value_{0},
        speed_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Move::Move(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MoveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MoveDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MoveDefaultTypeInternal() {}
  union {
    Move _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MoveDefaultTypeInternal _Move_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR HaltAll::HaltAll(::_pbi::ConstantInitialized) {}
struct HaltAllDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HaltAllDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HaltAllDefaultTypeInternal() {}
  union {
    HaltAll _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HaltAllDefaultTypeInternal _HaltAll_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR Halt::Halt(::_pbi::ConstantInitialized) {}
struct HaltDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HaltDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HaltDefaultTypeInternal() {}
  union {
    Halt _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HaltDefaultTypeInternal _Halt_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR GetPos::GetPos(::_pbi::ConstantInitialized) {}
struct GetPosDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPosDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPosDefaultTypeInternal() {}
  union {
    GetPos _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPosDefaultTypeInternal _GetPos_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR GetMeteo::GetMeteo(::_pbi::ConstantInitialized) {}
struct GetMeteoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetMeteoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetMeteoDefaultTypeInternal() {}
  union {
    GetMeteo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetMeteoDefaultTypeInternal _GetMeteo_default_instance_;

inline constexpr Zoom::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Zoom::Zoom(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ZoomDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ZoomDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ZoomDefaultTypeInternal() {}
  union {
    Zoom _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ZoomDefaultTypeInternal _Zoom_default_instance_;

inline constexpr Focus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Focus::Focus(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FocusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FocusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FocusDefaultTypeInternal() {}
  union {
    Focus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FocusDefaultTypeInternal _Focus_default_instance_;

inline constexpr Root::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Root::Root(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RootDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RootDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RootDefaultTypeInternal() {}
  union {
    Root _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RootDefaultTypeInternal _Root_default_instance_;
}  // namespace DayCamera
}  // namespace cmd
static ::_pb::Metadata file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[30];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_jon_5fshared_5fcmd_5fday_5fcamera_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_jon_5fshared_5fcmd_5fday_5fcamera_2eproto = nullptr;
const ::uint32_t TableStruct_jon_5fshared_5fcmd_5fday_5fcamera_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::SetValue, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::SetValue, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::Move, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::Move, _impl_.target_value_),
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::Move, _impl_.speed_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::Offset, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::Offset, _impl_.offset_value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::SetClaheLevel, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::SetClaheLevel, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::ShiftClaheLevel, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::ShiftClaheLevel, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::Root, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::Root, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::Root, _impl_.cmd_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::GetPos, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::NextFxMode, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::PrevFxMode, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::RefreshFxMode, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::HaltAll, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::SetFxMode, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::SetFxMode, _impl_.mode_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::SetDigitalZoomLevel, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::SetDigitalZoomLevel, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::Focus, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::Focus, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::Focus, _impl_.cmd_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::Zoom, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::Zoom, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::Zoom, _impl_.cmd_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::NextZoomTablePos, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::PrevZoomTablePos, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::SetIris, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::SetIris, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::SetInfraRedFilter, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::SetInfraRedFilter, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::SetAutoIris, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::SetAutoIris, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::SetZoomTableValue, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::SetZoomTableValue, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::Stop, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::Start, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::Photo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::Halt, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::GetMeteo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::ResetZoom, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::ResetFocus, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::SaveToTable, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::SaveToTableFocus, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::cmd::DayCamera::SetValue)},
        {9, -1, -1, sizeof(::cmd::DayCamera::Move)},
        {19, -1, -1, sizeof(::cmd::DayCamera::Offset)},
        {28, -1, -1, sizeof(::cmd::DayCamera::SetClaheLevel)},
        {37, -1, -1, sizeof(::cmd::DayCamera::ShiftClaheLevel)},
        {46, -1, -1, sizeof(::cmd::DayCamera::Root)},
        {72, -1, -1, sizeof(::cmd::DayCamera::GetPos)},
        {80, -1, -1, sizeof(::cmd::DayCamera::NextFxMode)},
        {88, -1, -1, sizeof(::cmd::DayCamera::PrevFxMode)},
        {96, -1, -1, sizeof(::cmd::DayCamera::RefreshFxMode)},
        {104, -1, -1, sizeof(::cmd::DayCamera::HaltAll)},
        {112, -1, -1, sizeof(::cmd::DayCamera::SetFxMode)},
        {121, -1, -1, sizeof(::cmd::DayCamera::SetDigitalZoomLevel)},
        {130, -1, -1, sizeof(::cmd::DayCamera::Focus)},
        {145, -1, -1, sizeof(::cmd::DayCamera::Zoom)},
        {163, -1, -1, sizeof(::cmd::DayCamera::NextZoomTablePos)},
        {171, -1, -1, sizeof(::cmd::DayCamera::PrevZoomTablePos)},
        {179, -1, -1, sizeof(::cmd::DayCamera::SetIris)},
        {188, -1, -1, sizeof(::cmd::DayCamera::SetInfraRedFilter)},
        {197, -1, -1, sizeof(::cmd::DayCamera::SetAutoIris)},
        {206, -1, -1, sizeof(::cmd::DayCamera::SetZoomTableValue)},
        {215, -1, -1, sizeof(::cmd::DayCamera::Stop)},
        {223, -1, -1, sizeof(::cmd::DayCamera::Start)},
        {231, -1, -1, sizeof(::cmd::DayCamera::Photo)},
        {239, -1, -1, sizeof(::cmd::DayCamera::Halt)},
        {247, -1, -1, sizeof(::cmd::DayCamera::GetMeteo)},
        {255, -1, -1, sizeof(::cmd::DayCamera::ResetZoom)},
        {263, -1, -1, sizeof(::cmd::DayCamera::ResetFocus)},
        {271, -1, -1, sizeof(::cmd::DayCamera::SaveToTable)},
        {279, -1, -1, sizeof(::cmd::DayCamera::SaveToTableFocus)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::cmd::DayCamera::_SetValue_default_instance_._instance,
    &::cmd::DayCamera::_Move_default_instance_._instance,
    &::cmd::DayCamera::_Offset_default_instance_._instance,
    &::cmd::DayCamera::_SetClaheLevel_default_instance_._instance,
    &::cmd::DayCamera::_ShiftClaheLevel_default_instance_._instance,
    &::cmd::DayCamera::_Root_default_instance_._instance,
    &::cmd::DayCamera::_GetPos_default_instance_._instance,
    &::cmd::DayCamera::_NextFxMode_default_instance_._instance,
    &::cmd::DayCamera::_PrevFxMode_default_instance_._instance,
    &::cmd::DayCamera::_RefreshFxMode_default_instance_._instance,
    &::cmd::DayCamera::_HaltAll_default_instance_._instance,
    &::cmd::DayCamera::_SetFxMode_default_instance_._instance,
    &::cmd::DayCamera::_SetDigitalZoomLevel_default_instance_._instance,
    &::cmd::DayCamera::_Focus_default_instance_._instance,
    &::cmd::DayCamera::_Zoom_default_instance_._instance,
    &::cmd::DayCamera::_NextZoomTablePos_default_instance_._instance,
    &::cmd::DayCamera::_PrevZoomTablePos_default_instance_._instance,
    &::cmd::DayCamera::_SetIris_default_instance_._instance,
    &::cmd::DayCamera::_SetInfraRedFilter_default_instance_._instance,
    &::cmd::DayCamera::_SetAutoIris_default_instance_._instance,
    &::cmd::DayCamera::_SetZoomTableValue_default_instance_._instance,
    &::cmd::DayCamera::_Stop_default_instance_._instance,
    &::cmd::DayCamera::_Start_default_instance_._instance,
    &::cmd::DayCamera::_Photo_default_instance_._instance,
    &::cmd::DayCamera::_Halt_default_instance_._instance,
    &::cmd::DayCamera::_GetMeteo_default_instance_._instance,
    &::cmd::DayCamera::_ResetZoom_default_instance_._instance,
    &::cmd::DayCamera::_ResetFocus_default_instance_._instance,
    &::cmd::DayCamera::_SaveToTable_default_instance_._instance,
    &::cmd::DayCamera::_SaveToTableFocus_default_instance_._instance,
};
const char descriptor_table_protodef_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\037jon_shared_cmd_day_camera.proto\022\rcmd.D"
    "ayCamera\032\033jon_shared_data_types.proto\"\031\n"
    "\010SetValue\022\r\n\005value\030\001 \001(\002\"+\n\004Move\022\024\n\014targ"
    "et_value\030\001 \001(\002\022\r\n\005speed\030\002 \001(\002\"\036\n\006Offset\022"
    "\024\n\014offset_value\030\001 \001(\002\"\036\n\rSetClaheLevel\022\r"
    "\n\005value\030\001 \001(\002\" \n\017ShiftClaheLevel\022\r\n\005valu"
    "e\030\001 \001(\002\"\325\006\n\004Root\022%\n\005focus\030\001 \001(\0132\024.cmd.Da"
    "yCamera.FocusH\000\022#\n\004zoom\030\002 \001(\0132\023.cmd.DayC"
    "amera.ZoomH\000\022*\n\010set_iris\030\003 \001(\0132\026.cmd.Day"
    "Camera.SetIrisH\000\022@\n\024set_infra_red_filter"
    "\030\004 \001(\0132 .cmd.DayCamera.SetInfraRedFilter"
    "H\000\022%\n\005start\030\005 \001(\0132\024.cmd.DayCamera.StartH"
    "\000\022#\n\004stop\030\006 \001(\0132\023.cmd.DayCamera.StopH\000\022%"
    "\n\005photo\030\007 \001(\0132\024.cmd.DayCamera.PhotoH\000\0223\n"
    "\rset_auto_iris\030\010 \001(\0132\032.cmd.DayCamera.Set"
    "AutoIrisH\000\022*\n\010halt_all\030\t \001(\0132\026.cmd.DayCa"
    "mera.HaltAllH\000\022/\n\013set_fx_mode\030\n \001(\0132\030.cm"
    "d.DayCamera.SetFxModeH\000\0221\n\014next_fx_mode\030"
    "\013 \001(\0132\031.cmd.DayCamera.NextFxModeH\000\0221\n\014pr"
    "ev_fx_mode\030\014 \001(\0132\031.cmd.DayCamera.PrevFxM"
    "odeH\000\022,\n\tget_meteo\030\r \001(\0132\027.cmd.DayCamera"
    ".GetMeteoH\000\0227\n\017refresh_fx_mode\030\016 \001(\0132\034.c"
    "md.DayCamera.RefreshFxModeH\000\022D\n\026set_digi"
    "tal_zoom_level\030\017 \001(\0132\".cmd.DayCamera.Set"
    "DigitalZoomLevelH\000\0227\n\017set_clahe_level\030\020 "
    "\001(\0132\034.cmd.DayCamera.SetClaheLevelH\000\022;\n\021s"
    "hift_clahe_level\030\021 \001(\0132\036.cmd.DayCamera.S"
    "hiftClaheLevelH\000B\005\n\003cmd\"\010\n\006GetPos\"\014\n\nNex"
    "tFxMode\"\014\n\nPrevFxMode\"\017\n\rRefreshFxMode\"\t"
    "\n\007HaltAll\"3\n\tSetFxMode\022&\n\004mode\030\001 \001(\0162\030.s"
    "er.JonGuiDataFxModeDay\"$\n\023SetDigitalZoom"
    "Level\022\r\n\005value\030\001 \001(\002\"\241\002\n\005Focus\022,\n\tset_va"
    "lue\030\001 \001(\0132\027.cmd.DayCamera.SetValueH\000\022#\n\004"
    "move\030\002 \001(\0132\023.cmd.DayCamera.MoveH\000\022#\n\004hal"
    "t\030\003 \001(\0132\023.cmd.DayCamera.HaltH\000\022\'\n\006offset"
    "\030\004 \001(\0132\025.cmd.DayCamera.OffsetH\000\0220\n\013reset"
    "_focus\030\005 \001(\0132\031.cmd.DayCamera.ResetFocusH"
    "\000\022>\n\023save_to_table_focus\030\006 \001(\0132\037.cmd.Day"
    "Camera.SaveToTableFocusH\000B\005\n\003cmd\"\325\003\n\004Zoo"
    "m\022,\n\tset_value\030\001 \001(\0132\027.cmd.DayCamera.Set"
    "ValueH\000\022#\n\004move\030\002 \001(\0132\023.cmd.DayCamera.Mo"
    "veH\000\022#\n\004halt\030\003 \001(\0132\023.cmd.DayCamera.HaltH"
    "\000\022@\n\024set_zoom_table_value\030\004 \001(\0132 .cmd.Da"
    "yCamera.SetZoomTableValueH\000\022>\n\023next_zoom"
    "_table_pos\030\005 \001(\0132\037.cmd.DayCamera.NextZoo"
    "mTablePosH\000\022>\n\023prev_zoom_table_pos\030\006 \001(\013"
    "2\037.cmd.DayCamera.PrevZoomTablePosH\000\022\'\n\006o"
    "ffset\030\007 \001(\0132\025.cmd.DayCamera.OffsetH\000\022.\n\n"
    "reset_zoom\030\010 \001(\0132\030.cmd.DayCamera.ResetZo"
    "omH\000\0223\n\rsave_to_table\030\t \001(\0132\032.cmd.DayCam"
    "era.SaveToTableH\000B\005\n\003cmd\"\022\n\020NextZoomTabl"
    "ePos\"\022\n\020PrevZoomTablePos\"\030\n\007SetIris\022\r\n\005v"
    "alue\030\001 \001(\002\"\"\n\021SetInfraRedFilter\022\r\n\005value"
    "\030\001 \001(\010\"\034\n\013SetAutoIris\022\r\n\005value\030\001 \001(\010\"\"\n\021"
    "SetZoomTableValue\022\r\n\005value\030\001 \001(\005\"\006\n\004Stop"
    "\"\007\n\005Start\"\007\n\005Photo\"\006\n\004Halt\"\n\n\010GetMeteo\"\013"
    "\n\tResetZoom\"\014\n\nResetFocus\"\r\n\013SaveToTable"
    "\"\022\n\020SaveToTableFocusBQZOgit-codecommit.e"
    "u-central-1.amazonaws.com/v1/repos/jetti"
    "son/jonp/cmd/day_camerab\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_deps[1] =
    {
        &::descriptor_table_jon_5fshared_5fdata_5ftypes_2eproto,
};
static ::absl::once_flag descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto = {
    false,
    false,
    2391,
    descriptor_table_protodef_jon_5fshared_5fcmd_5fday_5fcamera_2eproto,
    "jon_shared_cmd_day_camera.proto",
    &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once,
    descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_deps,
    1,
    30,
    schemas,
    file_default_instances,
    TableStruct_jon_5fshared_5fcmd_5fday_5fcamera_2eproto::offsets,
    file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto,
    file_level_enum_descriptors_jon_5fshared_5fcmd_5fday_5fcamera_2eproto,
    file_level_service_descriptors_jon_5fshared_5fcmd_5fday_5fcamera_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_getter() {
  return &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_jon_5fshared_5fcmd_5fday_5fcamera_2eproto(&descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto);
namespace cmd {
namespace DayCamera {
// ===================================================================

class SetValue::_Internal {
 public:
};

SetValue::SetValue(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamera.SetValue)
}
SetValue::SetValue(
    ::google::protobuf::Arena* arena, const SetValue& from)
    : SetValue(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetValue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
SetValue::~SetValue() {
  // @@protoc_insertion_point(destructor:cmd.DayCamera.SetValue)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetValue::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetValue::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.DayCamera.SetValue)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetValue::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetValue::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetValue_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float value = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(SetValue, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float value = 1;
    {PROTOBUF_FIELD_OFFSET(SetValue, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetValue::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.DayCamera.SetValue)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.DayCamera.SetValue)
  return target;
}

::size_t SetValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.DayCamera.SetValue)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetValue::_class_data_ = {
    SetValue::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetValue::GetClassData() const {
  return &_class_data_;
}

void SetValue::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetValue*>(&to_msg);
  auto& from = static_cast<const SetValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.DayCamera.SetValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = from._internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetValue::CopyFrom(const SetValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.DayCamera.SetValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetValue::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetValue::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetValue::InternalSwap(SetValue* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata SetValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[0]);
}
// ===================================================================

class Move::_Internal {
 public:
};

Move::Move(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamera.Move)
}
Move::Move(
    ::google::protobuf::Arena* arena, const Move& from)
    : Move(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Move::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Move::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, target_value_),
           0,
           offsetof(Impl_, speed_) -
               offsetof(Impl_, target_value_) +
               sizeof(Impl_::speed_));
}
Move::~Move() {
  // @@protoc_insertion_point(destructor:cmd.DayCamera.Move)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Move::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Move::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.DayCamera.Move)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.target_value_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.speed_) -
      reinterpret_cast<char*>(&_impl_.target_value_)) + sizeof(_impl_.speed_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Move::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Move::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Move_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float speed = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Move, _impl_.speed_)}},
    // float target_value = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(Move, _impl_.target_value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float target_value = 1;
    {PROTOBUF_FIELD_OFFSET(Move, _impl_.target_value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float speed = 2;
    {PROTOBUF_FIELD_OFFSET(Move, _impl_.speed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Move::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.DayCamera.Move)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float target_value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_target_value = this->_internal_target_value();
  ::uint32_t raw_target_value;
  memcpy(&raw_target_value, &tmp_target_value, sizeof(tmp_target_value));
  if (raw_target_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_target_value(), target);
  }

  // float speed = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed = this->_internal_speed();
  ::uint32_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_speed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.DayCamera.Move)
  return target;
}

::size_t Move::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.DayCamera.Move)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float target_value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_target_value = this->_internal_target_value();
  ::uint32_t raw_target_value;
  memcpy(&raw_target_value, &tmp_target_value, sizeof(tmp_target_value));
  if (raw_target_value != 0) {
    total_size += 5;
  }

  // float speed = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed = this->_internal_speed();
  ::uint32_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Move::_class_data_ = {
    Move::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Move::GetClassData() const {
  return &_class_data_;
}

void Move::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Move*>(&to_msg);
  auto& from = static_cast<const Move&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.DayCamera.Move)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_target_value = from._internal_target_value();
  ::uint32_t raw_target_value;
  memcpy(&raw_target_value, &tmp_target_value, sizeof(tmp_target_value));
  if (raw_target_value != 0) {
    _this->_internal_set_target_value(from._internal_target_value());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed = from._internal_speed();
  ::uint32_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    _this->_internal_set_speed(from._internal_speed());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Move::CopyFrom(const Move& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.DayCamera.Move)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Move::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Move::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Move::InternalSwap(Move* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Move, _impl_.speed_)
      + sizeof(Move::_impl_.speed_)
      - PROTOBUF_FIELD_OFFSET(Move, _impl_.target_value_)>(
          reinterpret_cast<char*>(&_impl_.target_value_),
          reinterpret_cast<char*>(&other->_impl_.target_value_));
}

::google::protobuf::Metadata Move::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[1]);
}
// ===================================================================

class Offset::_Internal {
 public:
};

Offset::Offset(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamera.Offset)
}
Offset::Offset(
    ::google::protobuf::Arena* arena, const Offset& from)
    : Offset(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Offset::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Offset::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.offset_value_ = {};
}
Offset::~Offset() {
  // @@protoc_insertion_point(destructor:cmd.DayCamera.Offset)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Offset::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Offset::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.DayCamera.Offset)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.offset_value_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Offset::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Offset::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Offset_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float offset_value = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(Offset, _impl_.offset_value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float offset_value = 1;
    {PROTOBUF_FIELD_OFFSET(Offset, _impl_.offset_value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Offset::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.DayCamera.Offset)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float offset_value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_offset_value = this->_internal_offset_value();
  ::uint32_t raw_offset_value;
  memcpy(&raw_offset_value, &tmp_offset_value, sizeof(tmp_offset_value));
  if (raw_offset_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_offset_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.DayCamera.Offset)
  return target;
}

::size_t Offset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.DayCamera.Offset)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float offset_value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_offset_value = this->_internal_offset_value();
  ::uint32_t raw_offset_value;
  memcpy(&raw_offset_value, &tmp_offset_value, sizeof(tmp_offset_value));
  if (raw_offset_value != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Offset::_class_data_ = {
    Offset::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Offset::GetClassData() const {
  return &_class_data_;
}

void Offset::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Offset*>(&to_msg);
  auto& from = static_cast<const Offset&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.DayCamera.Offset)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_offset_value = from._internal_offset_value();
  ::uint32_t raw_offset_value;
  memcpy(&raw_offset_value, &tmp_offset_value, sizeof(tmp_offset_value));
  if (raw_offset_value != 0) {
    _this->_internal_set_offset_value(from._internal_offset_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Offset::CopyFrom(const Offset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.DayCamera.Offset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Offset::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Offset::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Offset::InternalSwap(Offset* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.offset_value_, other->_impl_.offset_value_);
}

::google::protobuf::Metadata Offset::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[2]);
}
// ===================================================================

class SetClaheLevel::_Internal {
 public:
};

SetClaheLevel::SetClaheLevel(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamera.SetClaheLevel)
}
SetClaheLevel::SetClaheLevel(
    ::google::protobuf::Arena* arena, const SetClaheLevel& from)
    : SetClaheLevel(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetClaheLevel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetClaheLevel::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
SetClaheLevel::~SetClaheLevel() {
  // @@protoc_insertion_point(destructor:cmd.DayCamera.SetClaheLevel)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetClaheLevel::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetClaheLevel::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.DayCamera.SetClaheLevel)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetClaheLevel::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetClaheLevel::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetClaheLevel_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float value = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(SetClaheLevel, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float value = 1;
    {PROTOBUF_FIELD_OFFSET(SetClaheLevel, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetClaheLevel::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.DayCamera.SetClaheLevel)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.DayCamera.SetClaheLevel)
  return target;
}

::size_t SetClaheLevel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.DayCamera.SetClaheLevel)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetClaheLevel::_class_data_ = {
    SetClaheLevel::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetClaheLevel::GetClassData() const {
  return &_class_data_;
}

void SetClaheLevel::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetClaheLevel*>(&to_msg);
  auto& from = static_cast<const SetClaheLevel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.DayCamera.SetClaheLevel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = from._internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetClaheLevel::CopyFrom(const SetClaheLevel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.DayCamera.SetClaheLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetClaheLevel::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetClaheLevel::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetClaheLevel::InternalSwap(SetClaheLevel* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata SetClaheLevel::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[3]);
}
// ===================================================================

class ShiftClaheLevel::_Internal {
 public:
};

ShiftClaheLevel::ShiftClaheLevel(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamera.ShiftClaheLevel)
}
ShiftClaheLevel::ShiftClaheLevel(
    ::google::protobuf::Arena* arena, const ShiftClaheLevel& from)
    : ShiftClaheLevel(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ShiftClaheLevel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ShiftClaheLevel::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
ShiftClaheLevel::~ShiftClaheLevel() {
  // @@protoc_insertion_point(destructor:cmd.DayCamera.ShiftClaheLevel)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ShiftClaheLevel::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ShiftClaheLevel::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.DayCamera.ShiftClaheLevel)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ShiftClaheLevel::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ShiftClaheLevel::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ShiftClaheLevel_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float value = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(ShiftClaheLevel, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float value = 1;
    {PROTOBUF_FIELD_OFFSET(ShiftClaheLevel, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ShiftClaheLevel::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.DayCamera.ShiftClaheLevel)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.DayCamera.ShiftClaheLevel)
  return target;
}

::size_t ShiftClaheLevel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.DayCamera.ShiftClaheLevel)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ShiftClaheLevel::_class_data_ = {
    ShiftClaheLevel::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ShiftClaheLevel::GetClassData() const {
  return &_class_data_;
}

void ShiftClaheLevel::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ShiftClaheLevel*>(&to_msg);
  auto& from = static_cast<const ShiftClaheLevel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.DayCamera.ShiftClaheLevel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = from._internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ShiftClaheLevel::CopyFrom(const ShiftClaheLevel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.DayCamera.ShiftClaheLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ShiftClaheLevel::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ShiftClaheLevel::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ShiftClaheLevel::InternalSwap(ShiftClaheLevel* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata ShiftClaheLevel::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[4]);
}
// ===================================================================

class Root::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::Root, _impl_._oneof_case_);
  static const ::cmd::DayCamera::Focus& focus(const Root* msg);
  static const ::cmd::DayCamera::Zoom& zoom(const Root* msg);
  static const ::cmd::DayCamera::SetIris& set_iris(const Root* msg);
  static const ::cmd::DayCamera::SetInfraRedFilter& set_infra_red_filter(const Root* msg);
  static const ::cmd::DayCamera::Start& start(const Root* msg);
  static const ::cmd::DayCamera::Stop& stop(const Root* msg);
  static const ::cmd::DayCamera::Photo& photo(const Root* msg);
  static const ::cmd::DayCamera::SetAutoIris& set_auto_iris(const Root* msg);
  static const ::cmd::DayCamera::HaltAll& halt_all(const Root* msg);
  static const ::cmd::DayCamera::SetFxMode& set_fx_mode(const Root* msg);
  static const ::cmd::DayCamera::NextFxMode& next_fx_mode(const Root* msg);
  static const ::cmd::DayCamera::PrevFxMode& prev_fx_mode(const Root* msg);
  static const ::cmd::DayCamera::GetMeteo& get_meteo(const Root* msg);
  static const ::cmd::DayCamera::RefreshFxMode& refresh_fx_mode(const Root* msg);
  static const ::cmd::DayCamera::SetDigitalZoomLevel& set_digital_zoom_level(const Root* msg);
  static const ::cmd::DayCamera::SetClaheLevel& set_clahe_level(const Root* msg);
  static const ::cmd::DayCamera::ShiftClaheLevel& shift_clahe_level(const Root* msg);
};

const ::cmd::DayCamera::Focus& Root::_Internal::focus(const Root* msg) {
  return *msg->_impl_.cmd_.focus_;
}
const ::cmd::DayCamera::Zoom& Root::_Internal::zoom(const Root* msg) {
  return *msg->_impl_.cmd_.zoom_;
}
const ::cmd::DayCamera::SetIris& Root::_Internal::set_iris(const Root* msg) {
  return *msg->_impl_.cmd_.set_iris_;
}
const ::cmd::DayCamera::SetInfraRedFilter& Root::_Internal::set_infra_red_filter(const Root* msg) {
  return *msg->_impl_.cmd_.set_infra_red_filter_;
}
const ::cmd::DayCamera::Start& Root::_Internal::start(const Root* msg) {
  return *msg->_impl_.cmd_.start_;
}
const ::cmd::DayCamera::Stop& Root::_Internal::stop(const Root* msg) {
  return *msg->_impl_.cmd_.stop_;
}
const ::cmd::DayCamera::Photo& Root::_Internal::photo(const Root* msg) {
  return *msg->_impl_.cmd_.photo_;
}
const ::cmd::DayCamera::SetAutoIris& Root::_Internal::set_auto_iris(const Root* msg) {
  return *msg->_impl_.cmd_.set_auto_iris_;
}
const ::cmd::DayCamera::HaltAll& Root::_Internal::halt_all(const Root* msg) {
  return *msg->_impl_.cmd_.halt_all_;
}
const ::cmd::DayCamera::SetFxMode& Root::_Internal::set_fx_mode(const Root* msg) {
  return *msg->_impl_.cmd_.set_fx_mode_;
}
const ::cmd::DayCamera::NextFxMode& Root::_Internal::next_fx_mode(const Root* msg) {
  return *msg->_impl_.cmd_.next_fx_mode_;
}
const ::cmd::DayCamera::PrevFxMode& Root::_Internal::prev_fx_mode(const Root* msg) {
  return *msg->_impl_.cmd_.prev_fx_mode_;
}
const ::cmd::DayCamera::GetMeteo& Root::_Internal::get_meteo(const Root* msg) {
  return *msg->_impl_.cmd_.get_meteo_;
}
const ::cmd::DayCamera::RefreshFxMode& Root::_Internal::refresh_fx_mode(const Root* msg) {
  return *msg->_impl_.cmd_.refresh_fx_mode_;
}
const ::cmd::DayCamera::SetDigitalZoomLevel& Root::_Internal::set_digital_zoom_level(const Root* msg) {
  return *msg->_impl_.cmd_.set_digital_zoom_level_;
}
const ::cmd::DayCamera::SetClaheLevel& Root::_Internal::set_clahe_level(const Root* msg) {
  return *msg->_impl_.cmd_.set_clahe_level_;
}
const ::cmd::DayCamera::ShiftClaheLevel& Root::_Internal::shift_clahe_level(const Root* msg) {
  return *msg->_impl_.cmd_.shift_clahe_level_;
}
void Root::set_allocated_focus(::cmd::DayCamera::Focus* focus) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (focus) {
    ::google::protobuf::Arena* submessage_arena = focus->GetArena();
    if (message_arena != submessage_arena) {
      focus = ::google::protobuf::internal::GetOwnedMessage(message_arena, focus, submessage_arena);
    }
    set_has_focus();
    _impl_.cmd_.focus_ = focus;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Root.focus)
}
void Root::set_allocated_zoom(::cmd::DayCamera::Zoom* zoom) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (zoom) {
    ::google::protobuf::Arena* submessage_arena = zoom->GetArena();
    if (message_arena != submessage_arena) {
      zoom = ::google::protobuf::internal::GetOwnedMessage(message_arena, zoom, submessage_arena);
    }
    set_has_zoom();
    _impl_.cmd_.zoom_ = zoom;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Root.zoom)
}
void Root::set_allocated_set_iris(::cmd::DayCamera::SetIris* set_iris) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (set_iris) {
    ::google::protobuf::Arena* submessage_arena = set_iris->GetArena();
    if (message_arena != submessage_arena) {
      set_iris = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_iris, submessage_arena);
    }
    set_has_set_iris();
    _impl_.cmd_.set_iris_ = set_iris;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Root.set_iris)
}
void Root::set_allocated_set_infra_red_filter(::cmd::DayCamera::SetInfraRedFilter* set_infra_red_filter) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (set_infra_red_filter) {
    ::google::protobuf::Arena* submessage_arena = set_infra_red_filter->GetArena();
    if (message_arena != submessage_arena) {
      set_infra_red_filter = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_infra_red_filter, submessage_arena);
    }
    set_has_set_infra_red_filter();
    _impl_.cmd_.set_infra_red_filter_ = set_infra_red_filter;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Root.set_infra_red_filter)
}
void Root::set_allocated_start(::cmd::DayCamera::Start* start) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (start) {
    ::google::protobuf::Arena* submessage_arena = start->GetArena();
    if (message_arena != submessage_arena) {
      start = ::google::protobuf::internal::GetOwnedMessage(message_arena, start, submessage_arena);
    }
    set_has_start();
    _impl_.cmd_.start_ = start;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Root.start)
}
void Root::set_allocated_stop(::cmd::DayCamera::Stop* stop) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (stop) {
    ::google::protobuf::Arena* submessage_arena = stop->GetArena();
    if (message_arena != submessage_arena) {
      stop = ::google::protobuf::internal::GetOwnedMessage(message_arena, stop, submessage_arena);
    }
    set_has_stop();
    _impl_.cmd_.stop_ = stop;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Root.stop)
}
void Root::set_allocated_photo(::cmd::DayCamera::Photo* photo) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (photo) {
    ::google::protobuf::Arena* submessage_arena = photo->GetArena();
    if (message_arena != submessage_arena) {
      photo = ::google::protobuf::internal::GetOwnedMessage(message_arena, photo, submessage_arena);
    }
    set_has_photo();
    _impl_.cmd_.photo_ = photo;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Root.photo)
}
void Root::set_allocated_set_auto_iris(::cmd::DayCamera::SetAutoIris* set_auto_iris) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (set_auto_iris) {
    ::google::protobuf::Arena* submessage_arena = set_auto_iris->GetArena();
    if (message_arena != submessage_arena) {
      set_auto_iris = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_auto_iris, submessage_arena);
    }
    set_has_set_auto_iris();
    _impl_.cmd_.set_auto_iris_ = set_auto_iris;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Root.set_auto_iris)
}
void Root::set_allocated_halt_all(::cmd::DayCamera::HaltAll* halt_all) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (halt_all) {
    ::google::protobuf::Arena* submessage_arena = halt_all->GetArena();
    if (message_arena != submessage_arena) {
      halt_all = ::google::protobuf::internal::GetOwnedMessage(message_arena, halt_all, submessage_arena);
    }
    set_has_halt_all();
    _impl_.cmd_.halt_all_ = halt_all;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Root.halt_all)
}
void Root::set_allocated_set_fx_mode(::cmd::DayCamera::SetFxMode* set_fx_mode) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (set_fx_mode) {
    ::google::protobuf::Arena* submessage_arena = set_fx_mode->GetArena();
    if (message_arena != submessage_arena) {
      set_fx_mode = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_fx_mode, submessage_arena);
    }
    set_has_set_fx_mode();
    _impl_.cmd_.set_fx_mode_ = set_fx_mode;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Root.set_fx_mode)
}
void Root::set_allocated_next_fx_mode(::cmd::DayCamera::NextFxMode* next_fx_mode) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (next_fx_mode) {
    ::google::protobuf::Arena* submessage_arena = next_fx_mode->GetArena();
    if (message_arena != submessage_arena) {
      next_fx_mode = ::google::protobuf::internal::GetOwnedMessage(message_arena, next_fx_mode, submessage_arena);
    }
    set_has_next_fx_mode();
    _impl_.cmd_.next_fx_mode_ = next_fx_mode;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Root.next_fx_mode)
}
void Root::set_allocated_prev_fx_mode(::cmd::DayCamera::PrevFxMode* prev_fx_mode) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (prev_fx_mode) {
    ::google::protobuf::Arena* submessage_arena = prev_fx_mode->GetArena();
    if (message_arena != submessage_arena) {
      prev_fx_mode = ::google::protobuf::internal::GetOwnedMessage(message_arena, prev_fx_mode, submessage_arena);
    }
    set_has_prev_fx_mode();
    _impl_.cmd_.prev_fx_mode_ = prev_fx_mode;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Root.prev_fx_mode)
}
void Root::set_allocated_get_meteo(::cmd::DayCamera::GetMeteo* get_meteo) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (get_meteo) {
    ::google::protobuf::Arena* submessage_arena = get_meteo->GetArena();
    if (message_arena != submessage_arena) {
      get_meteo = ::google::protobuf::internal::GetOwnedMessage(message_arena, get_meteo, submessage_arena);
    }
    set_has_get_meteo();
    _impl_.cmd_.get_meteo_ = get_meteo;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Root.get_meteo)
}
void Root::set_allocated_refresh_fx_mode(::cmd::DayCamera::RefreshFxMode* refresh_fx_mode) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (refresh_fx_mode) {
    ::google::protobuf::Arena* submessage_arena = refresh_fx_mode->GetArena();
    if (message_arena != submessage_arena) {
      refresh_fx_mode = ::google::protobuf::internal::GetOwnedMessage(message_arena, refresh_fx_mode, submessage_arena);
    }
    set_has_refresh_fx_mode();
    _impl_.cmd_.refresh_fx_mode_ = refresh_fx_mode;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Root.refresh_fx_mode)
}
void Root::set_allocated_set_digital_zoom_level(::cmd::DayCamera::SetDigitalZoomLevel* set_digital_zoom_level) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (set_digital_zoom_level) {
    ::google::protobuf::Arena* submessage_arena = set_digital_zoom_level->GetArena();
    if (message_arena != submessage_arena) {
      set_digital_zoom_level = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_digital_zoom_level, submessage_arena);
    }
    set_has_set_digital_zoom_level();
    _impl_.cmd_.set_digital_zoom_level_ = set_digital_zoom_level;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Root.set_digital_zoom_level)
}
void Root::set_allocated_set_clahe_level(::cmd::DayCamera::SetClaheLevel* set_clahe_level) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (set_clahe_level) {
    ::google::protobuf::Arena* submessage_arena = set_clahe_level->GetArena();
    if (message_arena != submessage_arena) {
      set_clahe_level = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_clahe_level, submessage_arena);
    }
    set_has_set_clahe_level();
    _impl_.cmd_.set_clahe_level_ = set_clahe_level;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Root.set_clahe_level)
}
void Root::set_allocated_shift_clahe_level(::cmd::DayCamera::ShiftClaheLevel* shift_clahe_level) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (shift_clahe_level) {
    ::google::protobuf::Arena* submessage_arena = shift_clahe_level->GetArena();
    if (message_arena != submessage_arena) {
      shift_clahe_level = ::google::protobuf::internal::GetOwnedMessage(message_arena, shift_clahe_level, submessage_arena);
    }
    set_has_shift_clahe_level();
    _impl_.cmd_.shift_clahe_level_ = shift_clahe_level;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Root.shift_clahe_level)
}
Root::Root(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamera.Root)
}
inline PROTOBUF_NDEBUG_INLINE Root::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Root::Root(
    ::google::protobuf::Arena* arena,
    const Root& from)
    : ::google::protobuf::Message(arena) {
  Root* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (cmd_case()) {
    case CMD_NOT_SET:
      break;
      case kFocus:
        _impl_.cmd_.focus_ = CreateMaybeMessage<::cmd::DayCamera::Focus>(arena, *from._impl_.cmd_.focus_);
        break;
      case kZoom:
        _impl_.cmd_.zoom_ = CreateMaybeMessage<::cmd::DayCamera::Zoom>(arena, *from._impl_.cmd_.zoom_);
        break;
      case kSetIris:
        _impl_.cmd_.set_iris_ = CreateMaybeMessage<::cmd::DayCamera::SetIris>(arena, *from._impl_.cmd_.set_iris_);
        break;
      case kSetInfraRedFilter:
        _impl_.cmd_.set_infra_red_filter_ = CreateMaybeMessage<::cmd::DayCamera::SetInfraRedFilter>(arena, *from._impl_.cmd_.set_infra_red_filter_);
        break;
      case kStart:
        _impl_.cmd_.start_ = CreateMaybeMessage<::cmd::DayCamera::Start>(arena, *from._impl_.cmd_.start_);
        break;
      case kStop:
        _impl_.cmd_.stop_ = CreateMaybeMessage<::cmd::DayCamera::Stop>(arena, *from._impl_.cmd_.stop_);
        break;
      case kPhoto:
        _impl_.cmd_.photo_ = CreateMaybeMessage<::cmd::DayCamera::Photo>(arena, *from._impl_.cmd_.photo_);
        break;
      case kSetAutoIris:
        _impl_.cmd_.set_auto_iris_ = CreateMaybeMessage<::cmd::DayCamera::SetAutoIris>(arena, *from._impl_.cmd_.set_auto_iris_);
        break;
      case kHaltAll:
        _impl_.cmd_.halt_all_ = CreateMaybeMessage<::cmd::DayCamera::HaltAll>(arena, *from._impl_.cmd_.halt_all_);
        break;
      case kSetFxMode:
        _impl_.cmd_.set_fx_mode_ = CreateMaybeMessage<::cmd::DayCamera::SetFxMode>(arena, *from._impl_.cmd_.set_fx_mode_);
        break;
      case kNextFxMode:
        _impl_.cmd_.next_fx_mode_ = CreateMaybeMessage<::cmd::DayCamera::NextFxMode>(arena, *from._impl_.cmd_.next_fx_mode_);
        break;
      case kPrevFxMode:
        _impl_.cmd_.prev_fx_mode_ = CreateMaybeMessage<::cmd::DayCamera::PrevFxMode>(arena, *from._impl_.cmd_.prev_fx_mode_);
        break;
      case kGetMeteo:
        _impl_.cmd_.get_meteo_ = CreateMaybeMessage<::cmd::DayCamera::GetMeteo>(arena, *from._impl_.cmd_.get_meteo_);
        break;
      case kRefreshFxMode:
        _impl_.cmd_.refresh_fx_mode_ = CreateMaybeMessage<::cmd::DayCamera::RefreshFxMode>(arena, *from._impl_.cmd_.refresh_fx_mode_);
        break;
      case kSetDigitalZoomLevel:
        _impl_.cmd_.set_digital_zoom_level_ = CreateMaybeMessage<::cmd::DayCamera::SetDigitalZoomLevel>(arena, *from._impl_.cmd_.set_digital_zoom_level_);
        break;
      case kSetClaheLevel:
        _impl_.cmd_.set_clahe_level_ = CreateMaybeMessage<::cmd::DayCamera::SetClaheLevel>(arena, *from._impl_.cmd_.set_clahe_level_);
        break;
      case kShiftClaheLevel:
        _impl_.cmd_.shift_clahe_level_ = CreateMaybeMessage<::cmd::DayCamera::ShiftClaheLevel>(arena, *from._impl_.cmd_.shift_clahe_level_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:cmd.DayCamera.Root)
}
inline PROTOBUF_NDEBUG_INLINE Root::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Root::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Root::~Root() {
  // @@protoc_insertion_point(destructor:cmd.DayCamera.Root)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Root::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_cmd()) {
    clear_cmd();
  }
  _impl_.~Impl_();
}

void Root::clear_cmd() {
// @@protoc_insertion_point(one_of_clear_start:cmd.DayCamera.Root)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (cmd_case()) {
    case kFocus: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.focus_;
      }
      break;
    }
    case kZoom: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.zoom_;
      }
      break;
    }
    case kSetIris: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.set_iris_;
      }
      break;
    }
    case kSetInfraRedFilter: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.set_infra_red_filter_;
      }
      break;
    }
    case kStart: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.start_;
      }
      break;
    }
    case kStop: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.stop_;
      }
      break;
    }
    case kPhoto: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.photo_;
      }
      break;
    }
    case kSetAutoIris: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.set_auto_iris_;
      }
      break;
    }
    case kHaltAll: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.halt_all_;
      }
      break;
    }
    case kSetFxMode: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.set_fx_mode_;
      }
      break;
    }
    case kNextFxMode: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.next_fx_mode_;
      }
      break;
    }
    case kPrevFxMode: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.prev_fx_mode_;
      }
      break;
    }
    case kGetMeteo: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.get_meteo_;
      }
      break;
    }
    case kRefreshFxMode: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.refresh_fx_mode_;
      }
      break;
    }
    case kSetDigitalZoomLevel: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.set_digital_zoom_level_;
      }
      break;
    }
    case kSetClaheLevel: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.set_clahe_level_;
      }
      break;
    }
    case kShiftClaheLevel: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.shift_clahe_level_;
      }
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CMD_NOT_SET;
}


PROTOBUF_NOINLINE void Root::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.DayCamera.Root)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_cmd();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Root::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 17, 17, 0, 2> Root::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    17, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294836224,  // skipmap
    offsetof(decltype(_table_), field_entries),
    17,  // num_field_entries
    17,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Root_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .cmd.DayCamera.Focus focus = 1;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.focus_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.DayCamera.Zoom zoom = 2;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.zoom_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.DayCamera.SetIris set_iris = 3;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.set_iris_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.DayCamera.SetInfraRedFilter set_infra_red_filter = 4;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.set_infra_red_filter_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.DayCamera.Start start = 5;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.start_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.DayCamera.Stop stop = 6;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.stop_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.DayCamera.Photo photo = 7;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.photo_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.DayCamera.SetAutoIris set_auto_iris = 8;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.set_auto_iris_), _Internal::kOneofCaseOffset + 0, 7,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.DayCamera.HaltAll halt_all = 9;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.halt_all_), _Internal::kOneofCaseOffset + 0, 8,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.DayCamera.SetFxMode set_fx_mode = 10;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.set_fx_mode_), _Internal::kOneofCaseOffset + 0, 9,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.DayCamera.NextFxMode next_fx_mode = 11;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.next_fx_mode_), _Internal::kOneofCaseOffset + 0, 10,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.DayCamera.PrevFxMode prev_fx_mode = 12;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.prev_fx_mode_), _Internal::kOneofCaseOffset + 0, 11,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.DayCamera.GetMeteo get_meteo = 13;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.get_meteo_), _Internal::kOneofCaseOffset + 0, 12,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.DayCamera.RefreshFxMode refresh_fx_mode = 14;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.refresh_fx_mode_), _Internal::kOneofCaseOffset + 0, 13,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.DayCamera.SetDigitalZoomLevel set_digital_zoom_level = 15;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.set_digital_zoom_level_), _Internal::kOneofCaseOffset + 0, 14,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.DayCamera.SetClaheLevel set_clahe_level = 16;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.set_clahe_level_), _Internal::kOneofCaseOffset + 0, 15,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.DayCamera.ShiftClaheLevel shift_clahe_level = 17;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.shift_clahe_level_), _Internal::kOneofCaseOffset + 0, 16,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cmd::DayCamera::Focus>()},
    {::_pbi::TcParser::GetTable<::cmd::DayCamera::Zoom>()},
    {::_pbi::TcParser::GetTable<::cmd::DayCamera::SetIris>()},
    {::_pbi::TcParser::GetTable<::cmd::DayCamera::SetInfraRedFilter>()},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::DayCamera::_Start_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::DayCamera::_Stop_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::DayCamera::_Photo_default_instance_},
    {::_pbi::TcParser::GetTable<::cmd::DayCamera::SetAutoIris>()},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::DayCamera::_HaltAll_default_instance_},
    {::_pbi::TcParser::GetTable<::cmd::DayCamera::SetFxMode>()},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::DayCamera::_NextFxMode_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::DayCamera::_PrevFxMode_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::DayCamera::_GetMeteo_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::DayCamera::_RefreshFxMode_default_instance_},
    {::_pbi::TcParser::GetTable<::cmd::DayCamera::SetDigitalZoomLevel>()},
    {::_pbi::TcParser::GetTable<::cmd::DayCamera::SetClaheLevel>()},
    {::_pbi::TcParser::GetTable<::cmd::DayCamera::ShiftClaheLevel>()},
  }}, {{
  }},
};

::uint8_t* Root::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.DayCamera.Root)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (cmd_case()) {
    case kFocus: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::focus(this),
          _Internal::focus(this).GetCachedSize(), target, stream);
      break;
    }
    case kZoom: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::zoom(this),
          _Internal::zoom(this).GetCachedSize(), target, stream);
      break;
    }
    case kSetIris: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::set_iris(this),
          _Internal::set_iris(this).GetCachedSize(), target, stream);
      break;
    }
    case kSetInfraRedFilter: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, _Internal::set_infra_red_filter(this),
          _Internal::set_infra_red_filter(this).GetCachedSize(), target, stream);
      break;
    }
    case kStart: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, _Internal::start(this),
          _Internal::start(this).GetCachedSize(), target, stream);
      break;
    }
    case kStop: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, _Internal::stop(this),
          _Internal::stop(this).GetCachedSize(), target, stream);
      break;
    }
    case kPhoto: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, _Internal::photo(this),
          _Internal::photo(this).GetCachedSize(), target, stream);
      break;
    }
    case kSetAutoIris: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          8, _Internal::set_auto_iris(this),
          _Internal::set_auto_iris(this).GetCachedSize(), target, stream);
      break;
    }
    case kHaltAll: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          9, _Internal::halt_all(this),
          _Internal::halt_all(this).GetCachedSize(), target, stream);
      break;
    }
    case kSetFxMode: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          10, _Internal::set_fx_mode(this),
          _Internal::set_fx_mode(this).GetCachedSize(), target, stream);
      break;
    }
    case kNextFxMode: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          11, _Internal::next_fx_mode(this),
          _Internal::next_fx_mode(this).GetCachedSize(), target, stream);
      break;
    }
    case kPrevFxMode: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          12, _Internal::prev_fx_mode(this),
          _Internal::prev_fx_mode(this).GetCachedSize(), target, stream);
      break;
    }
    case kGetMeteo: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          13, _Internal::get_meteo(this),
          _Internal::get_meteo(this).GetCachedSize(), target, stream);
      break;
    }
    case kRefreshFxMode: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          14, _Internal::refresh_fx_mode(this),
          _Internal::refresh_fx_mode(this).GetCachedSize(), target, stream);
      break;
    }
    case kSetDigitalZoomLevel: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          15, _Internal::set_digital_zoom_level(this),
          _Internal::set_digital_zoom_level(this).GetCachedSize(), target, stream);
      break;
    }
    case kSetClaheLevel: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          16, _Internal::set_clahe_level(this),
          _Internal::set_clahe_level(this).GetCachedSize(), target, stream);
      break;
    }
    case kShiftClaheLevel: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          17, _Internal::shift_clahe_level(this),
          _Internal::shift_clahe_level(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.DayCamera.Root)
  return target;
}

::size_t Root::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.DayCamera.Root)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (cmd_case()) {
    // .cmd.DayCamera.Focus focus = 1;
    case kFocus: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.focus_);
      break;
    }
    // .cmd.DayCamera.Zoom zoom = 2;
    case kZoom: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.zoom_);
      break;
    }
    // .cmd.DayCamera.SetIris set_iris = 3;
    case kSetIris: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.set_iris_);
      break;
    }
    // .cmd.DayCamera.SetInfraRedFilter set_infra_red_filter = 4;
    case kSetInfraRedFilter: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.set_infra_red_filter_);
      break;
    }
    // .cmd.DayCamera.Start start = 5;
    case kStart: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.start_);
      break;
    }
    // .cmd.DayCamera.Stop stop = 6;
    case kStop: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.stop_);
      break;
    }
    // .cmd.DayCamera.Photo photo = 7;
    case kPhoto: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.photo_);
      break;
    }
    // .cmd.DayCamera.SetAutoIris set_auto_iris = 8;
    case kSetAutoIris: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.set_auto_iris_);
      break;
    }
    // .cmd.DayCamera.HaltAll halt_all = 9;
    case kHaltAll: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.halt_all_);
      break;
    }
    // .cmd.DayCamera.SetFxMode set_fx_mode = 10;
    case kSetFxMode: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.set_fx_mode_);
      break;
    }
    // .cmd.DayCamera.NextFxMode next_fx_mode = 11;
    case kNextFxMode: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.next_fx_mode_);
      break;
    }
    // .cmd.DayCamera.PrevFxMode prev_fx_mode = 12;
    case kPrevFxMode: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.prev_fx_mode_);
      break;
    }
    // .cmd.DayCamera.GetMeteo get_meteo = 13;
    case kGetMeteo: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.get_meteo_);
      break;
    }
    // .cmd.DayCamera.RefreshFxMode refresh_fx_mode = 14;
    case kRefreshFxMode: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.refresh_fx_mode_);
      break;
    }
    // .cmd.DayCamera.SetDigitalZoomLevel set_digital_zoom_level = 15;
    case kSetDigitalZoomLevel: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.set_digital_zoom_level_);
      break;
    }
    // .cmd.DayCamera.SetClaheLevel set_clahe_level = 16;
    case kSetClaheLevel: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.set_clahe_level_);
      break;
    }
    // .cmd.DayCamera.ShiftClaheLevel shift_clahe_level = 17;
    case kShiftClaheLevel: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.shift_clahe_level_);
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Root::_class_data_ = {
    Root::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Root::GetClassData() const {
  return &_class_data_;
}

void Root::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Root*>(&to_msg);
  auto& from = static_cast<const Root&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.DayCamera.Root)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.cmd_case()) {
    case kFocus: {
      _this->_internal_mutable_focus()->::cmd::DayCamera::Focus::MergeFrom(
          from._internal_focus());
      break;
    }
    case kZoom: {
      _this->_internal_mutable_zoom()->::cmd::DayCamera::Zoom::MergeFrom(
          from._internal_zoom());
      break;
    }
    case kSetIris: {
      _this->_internal_mutable_set_iris()->::cmd::DayCamera::SetIris::MergeFrom(
          from._internal_set_iris());
      break;
    }
    case kSetInfraRedFilter: {
      _this->_internal_mutable_set_infra_red_filter()->::cmd::DayCamera::SetInfraRedFilter::MergeFrom(
          from._internal_set_infra_red_filter());
      break;
    }
    case kStart: {
      _this->_internal_mutable_start()->::cmd::DayCamera::Start::MergeFrom(
          from._internal_start());
      break;
    }
    case kStop: {
      _this->_internal_mutable_stop()->::cmd::DayCamera::Stop::MergeFrom(
          from._internal_stop());
      break;
    }
    case kPhoto: {
      _this->_internal_mutable_photo()->::cmd::DayCamera::Photo::MergeFrom(
          from._internal_photo());
      break;
    }
    case kSetAutoIris: {
      _this->_internal_mutable_set_auto_iris()->::cmd::DayCamera::SetAutoIris::MergeFrom(
          from._internal_set_auto_iris());
      break;
    }
    case kHaltAll: {
      _this->_internal_mutable_halt_all()->::cmd::DayCamera::HaltAll::MergeFrom(
          from._internal_halt_all());
      break;
    }
    case kSetFxMode: {
      _this->_internal_mutable_set_fx_mode()->::cmd::DayCamera::SetFxMode::MergeFrom(
          from._internal_set_fx_mode());
      break;
    }
    case kNextFxMode: {
      _this->_internal_mutable_next_fx_mode()->::cmd::DayCamera::NextFxMode::MergeFrom(
          from._internal_next_fx_mode());
      break;
    }
    case kPrevFxMode: {
      _this->_internal_mutable_prev_fx_mode()->::cmd::DayCamera::PrevFxMode::MergeFrom(
          from._internal_prev_fx_mode());
      break;
    }
    case kGetMeteo: {
      _this->_internal_mutable_get_meteo()->::cmd::DayCamera::GetMeteo::MergeFrom(
          from._internal_get_meteo());
      break;
    }
    case kRefreshFxMode: {
      _this->_internal_mutable_refresh_fx_mode()->::cmd::DayCamera::RefreshFxMode::MergeFrom(
          from._internal_refresh_fx_mode());
      break;
    }
    case kSetDigitalZoomLevel: {
      _this->_internal_mutable_set_digital_zoom_level()->::cmd::DayCamera::SetDigitalZoomLevel::MergeFrom(
          from._internal_set_digital_zoom_level());
      break;
    }
    case kSetClaheLevel: {
      _this->_internal_mutable_set_clahe_level()->::cmd::DayCamera::SetClaheLevel::MergeFrom(
          from._internal_set_clahe_level());
      break;
    }
    case kShiftClaheLevel: {
      _this->_internal_mutable_shift_clahe_level()->::cmd::DayCamera::ShiftClaheLevel::MergeFrom(
          from._internal_shift_clahe_level());
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Root::CopyFrom(const Root& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.DayCamera.Root)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Root::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Root::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Root::InternalSwap(Root* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.cmd_, other->_impl_.cmd_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Root::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[5]);
}
// ===================================================================

class GetPos::_Internal {
 public:
};

GetPos::GetPos(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamera.GetPos)
}
GetPos::GetPos(
    ::google::protobuf::Arena* arena,
    const GetPos& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  GetPos* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.DayCamera.GetPos)
}









::google::protobuf::Metadata GetPos::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[6]);
}
// ===================================================================

class NextFxMode::_Internal {
 public:
};

NextFxMode::NextFxMode(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamera.NextFxMode)
}
NextFxMode::NextFxMode(
    ::google::protobuf::Arena* arena,
    const NextFxMode& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  NextFxMode* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.DayCamera.NextFxMode)
}









::google::protobuf::Metadata NextFxMode::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[7]);
}
// ===================================================================

class PrevFxMode::_Internal {
 public:
};

PrevFxMode::PrevFxMode(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamera.PrevFxMode)
}
PrevFxMode::PrevFxMode(
    ::google::protobuf::Arena* arena,
    const PrevFxMode& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  PrevFxMode* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.DayCamera.PrevFxMode)
}









::google::protobuf::Metadata PrevFxMode::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[8]);
}
// ===================================================================

class RefreshFxMode::_Internal {
 public:
};

RefreshFxMode::RefreshFxMode(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamera.RefreshFxMode)
}
RefreshFxMode::RefreshFxMode(
    ::google::protobuf::Arena* arena,
    const RefreshFxMode& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  RefreshFxMode* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.DayCamera.RefreshFxMode)
}









::google::protobuf::Metadata RefreshFxMode::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[9]);
}
// ===================================================================

class HaltAll::_Internal {
 public:
};

HaltAll::HaltAll(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamera.HaltAll)
}
HaltAll::HaltAll(
    ::google::protobuf::Arena* arena,
    const HaltAll& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  HaltAll* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.DayCamera.HaltAll)
}









::google::protobuf::Metadata HaltAll::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[10]);
}
// ===================================================================

class SetFxMode::_Internal {
 public:
};

SetFxMode::SetFxMode(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamera.SetFxMode)
}
SetFxMode::SetFxMode(
    ::google::protobuf::Arena* arena, const SetFxMode& from)
    : SetFxMode(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetFxMode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetFxMode::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.mode_ = {};
}
SetFxMode::~SetFxMode() {
  // @@protoc_insertion_point(destructor:cmd.DayCamera.SetFxMode)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetFxMode::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetFxMode::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.DayCamera.SetFxMode)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mode_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetFxMode::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetFxMode::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetFxMode_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .ser.JonGuiDataFxModeDay mode = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetFxMode, _impl_.mode_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetFxMode, _impl_.mode_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .ser.JonGuiDataFxModeDay mode = 1;
    {PROTOBUF_FIELD_OFFSET(SetFxMode, _impl_.mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetFxMode::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.DayCamera.SetFxMode)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .ser.JonGuiDataFxModeDay mode = 1;
  if (this->_internal_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.DayCamera.SetFxMode)
  return target;
}

::size_t SetFxMode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.DayCamera.SetFxMode)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ser.JonGuiDataFxModeDay mode = 1;
  if (this->_internal_mode() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetFxMode::_class_data_ = {
    SetFxMode::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetFxMode::GetClassData() const {
  return &_class_data_;
}

void SetFxMode::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetFxMode*>(&to_msg);
  auto& from = static_cast<const SetFxMode&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.DayCamera.SetFxMode)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_mode() != 0) {
    _this->_internal_set_mode(from._internal_mode());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetFxMode::CopyFrom(const SetFxMode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.DayCamera.SetFxMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetFxMode::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetFxMode::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetFxMode::InternalSwap(SetFxMode* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.mode_, other->_impl_.mode_);
}

::google::protobuf::Metadata SetFxMode::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[11]);
}
// ===================================================================

class SetDigitalZoomLevel::_Internal {
 public:
};

SetDigitalZoomLevel::SetDigitalZoomLevel(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamera.SetDigitalZoomLevel)
}
SetDigitalZoomLevel::SetDigitalZoomLevel(
    ::google::protobuf::Arena* arena, const SetDigitalZoomLevel& from)
    : SetDigitalZoomLevel(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetDigitalZoomLevel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetDigitalZoomLevel::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
SetDigitalZoomLevel::~SetDigitalZoomLevel() {
  // @@protoc_insertion_point(destructor:cmd.DayCamera.SetDigitalZoomLevel)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetDigitalZoomLevel::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetDigitalZoomLevel::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.DayCamera.SetDigitalZoomLevel)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetDigitalZoomLevel::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetDigitalZoomLevel::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetDigitalZoomLevel_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float value = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(SetDigitalZoomLevel, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float value = 1;
    {PROTOBUF_FIELD_OFFSET(SetDigitalZoomLevel, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetDigitalZoomLevel::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.DayCamera.SetDigitalZoomLevel)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.DayCamera.SetDigitalZoomLevel)
  return target;
}

::size_t SetDigitalZoomLevel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.DayCamera.SetDigitalZoomLevel)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetDigitalZoomLevel::_class_data_ = {
    SetDigitalZoomLevel::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetDigitalZoomLevel::GetClassData() const {
  return &_class_data_;
}

void SetDigitalZoomLevel::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetDigitalZoomLevel*>(&to_msg);
  auto& from = static_cast<const SetDigitalZoomLevel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.DayCamera.SetDigitalZoomLevel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = from._internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetDigitalZoomLevel::CopyFrom(const SetDigitalZoomLevel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.DayCamera.SetDigitalZoomLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetDigitalZoomLevel::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetDigitalZoomLevel::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetDigitalZoomLevel::InternalSwap(SetDigitalZoomLevel* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata SetDigitalZoomLevel::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[12]);
}
// ===================================================================

class Focus::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::Focus, _impl_._oneof_case_);
  static const ::cmd::DayCamera::SetValue& set_value(const Focus* msg);
  static const ::cmd::DayCamera::Move& move(const Focus* msg);
  static const ::cmd::DayCamera::Halt& halt(const Focus* msg);
  static const ::cmd::DayCamera::Offset& offset(const Focus* msg);
  static const ::cmd::DayCamera::ResetFocus& reset_focus(const Focus* msg);
  static const ::cmd::DayCamera::SaveToTableFocus& save_to_table_focus(const Focus* msg);
};

const ::cmd::DayCamera::SetValue& Focus::_Internal::set_value(const Focus* msg) {
  return *msg->_impl_.cmd_.set_value_;
}
const ::cmd::DayCamera::Move& Focus::_Internal::move(const Focus* msg) {
  return *msg->_impl_.cmd_.move_;
}
const ::cmd::DayCamera::Halt& Focus::_Internal::halt(const Focus* msg) {
  return *msg->_impl_.cmd_.halt_;
}
const ::cmd::DayCamera::Offset& Focus::_Internal::offset(const Focus* msg) {
  return *msg->_impl_.cmd_.offset_;
}
const ::cmd::DayCamera::ResetFocus& Focus::_Internal::reset_focus(const Focus* msg) {
  return *msg->_impl_.cmd_.reset_focus_;
}
const ::cmd::DayCamera::SaveToTableFocus& Focus::_Internal::save_to_table_focus(const Focus* msg) {
  return *msg->_impl_.cmd_.save_to_table_focus_;
}
void Focus::set_allocated_set_value(::cmd::DayCamera::SetValue* set_value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (set_value) {
    ::google::protobuf::Arena* submessage_arena = set_value->GetArena();
    if (message_arena != submessage_arena) {
      set_value = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_value, submessage_arena);
    }
    set_has_set_value();
    _impl_.cmd_.set_value_ = set_value;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Focus.set_value)
}
void Focus::set_allocated_move(::cmd::DayCamera::Move* move) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (move) {
    ::google::protobuf::Arena* submessage_arena = move->GetArena();
    if (message_arena != submessage_arena) {
      move = ::google::protobuf::internal::GetOwnedMessage(message_arena, move, submessage_arena);
    }
    set_has_move();
    _impl_.cmd_.move_ = move;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Focus.move)
}
void Focus::set_allocated_halt(::cmd::DayCamera::Halt* halt) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (halt) {
    ::google::protobuf::Arena* submessage_arena = halt->GetArena();
    if (message_arena != submessage_arena) {
      halt = ::google::protobuf::internal::GetOwnedMessage(message_arena, halt, submessage_arena);
    }
    set_has_halt();
    _impl_.cmd_.halt_ = halt;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Focus.halt)
}
void Focus::set_allocated_offset(::cmd::DayCamera::Offset* offset) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (offset) {
    ::google::protobuf::Arena* submessage_arena = offset->GetArena();
    if (message_arena != submessage_arena) {
      offset = ::google::protobuf::internal::GetOwnedMessage(message_arena, offset, submessage_arena);
    }
    set_has_offset();
    _impl_.cmd_.offset_ = offset;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Focus.offset)
}
void Focus::set_allocated_reset_focus(::cmd::DayCamera::ResetFocus* reset_focus) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (reset_focus) {
    ::google::protobuf::Arena* submessage_arena = reset_focus->GetArena();
    if (message_arena != submessage_arena) {
      reset_focus = ::google::protobuf::internal::GetOwnedMessage(message_arena, reset_focus, submessage_arena);
    }
    set_has_reset_focus();
    _impl_.cmd_.reset_focus_ = reset_focus;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Focus.reset_focus)
}
void Focus::set_allocated_save_to_table_focus(::cmd::DayCamera::SaveToTableFocus* save_to_table_focus) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (save_to_table_focus) {
    ::google::protobuf::Arena* submessage_arena = save_to_table_focus->GetArena();
    if (message_arena != submessage_arena) {
      save_to_table_focus = ::google::protobuf::internal::GetOwnedMessage(message_arena, save_to_table_focus, submessage_arena);
    }
    set_has_save_to_table_focus();
    _impl_.cmd_.save_to_table_focus_ = save_to_table_focus;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Focus.save_to_table_focus)
}
Focus::Focus(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamera.Focus)
}
inline PROTOBUF_NDEBUG_INLINE Focus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Focus::Focus(
    ::google::protobuf::Arena* arena,
    const Focus& from)
    : ::google::protobuf::Message(arena) {
  Focus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (cmd_case()) {
    case CMD_NOT_SET:
      break;
      case kSetValue:
        _impl_.cmd_.set_value_ = CreateMaybeMessage<::cmd::DayCamera::SetValue>(arena, *from._impl_.cmd_.set_value_);
        break;
      case kMove:
        _impl_.cmd_.move_ = CreateMaybeMessage<::cmd::DayCamera::Move>(arena, *from._impl_.cmd_.move_);
        break;
      case kHalt:
        _impl_.cmd_.halt_ = CreateMaybeMessage<::cmd::DayCamera::Halt>(arena, *from._impl_.cmd_.halt_);
        break;
      case kOffset:
        _impl_.cmd_.offset_ = CreateMaybeMessage<::cmd::DayCamera::Offset>(arena, *from._impl_.cmd_.offset_);
        break;
      case kResetFocus:
        _impl_.cmd_.reset_focus_ = CreateMaybeMessage<::cmd::DayCamera::ResetFocus>(arena, *from._impl_.cmd_.reset_focus_);
        break;
      case kSaveToTableFocus:
        _impl_.cmd_.save_to_table_focus_ = CreateMaybeMessage<::cmd::DayCamera::SaveToTableFocus>(arena, *from._impl_.cmd_.save_to_table_focus_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:cmd.DayCamera.Focus)
}
inline PROTOBUF_NDEBUG_INLINE Focus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Focus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Focus::~Focus() {
  // @@protoc_insertion_point(destructor:cmd.DayCamera.Focus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Focus::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_cmd()) {
    clear_cmd();
  }
  _impl_.~Impl_();
}

void Focus::clear_cmd() {
// @@protoc_insertion_point(one_of_clear_start:cmd.DayCamera.Focus)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (cmd_case()) {
    case kSetValue: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.set_value_;
      }
      break;
    }
    case kMove: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.move_;
      }
      break;
    }
    case kHalt: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.halt_;
      }
      break;
    }
    case kOffset: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.offset_;
      }
      break;
    }
    case kResetFocus: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.reset_focus_;
      }
      break;
    }
    case kSaveToTableFocus: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.save_to_table_focus_;
      }
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CMD_NOT_SET;
}


PROTOBUF_NOINLINE void Focus::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.DayCamera.Focus)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_cmd();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Focus::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 6, 6, 0, 2> Focus::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Focus_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .cmd.DayCamera.SetValue set_value = 1;
    {PROTOBUF_FIELD_OFFSET(Focus, _impl_.cmd_.set_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.DayCamera.Move move = 2;
    {PROTOBUF_FIELD_OFFSET(Focus, _impl_.cmd_.move_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.DayCamera.Halt halt = 3;
    {PROTOBUF_FIELD_OFFSET(Focus, _impl_.cmd_.halt_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.DayCamera.Offset offset = 4;
    {PROTOBUF_FIELD_OFFSET(Focus, _impl_.cmd_.offset_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.DayCamera.ResetFocus reset_focus = 5;
    {PROTOBUF_FIELD_OFFSET(Focus, _impl_.cmd_.reset_focus_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.DayCamera.SaveToTableFocus save_to_table_focus = 6;
    {PROTOBUF_FIELD_OFFSET(Focus, _impl_.cmd_.save_to_table_focus_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cmd::DayCamera::SetValue>()},
    {::_pbi::TcParser::GetTable<::cmd::DayCamera::Move>()},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::DayCamera::_Halt_default_instance_},
    {::_pbi::TcParser::GetTable<::cmd::DayCamera::Offset>()},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::DayCamera::_ResetFocus_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::DayCamera::_SaveToTableFocus_default_instance_},
  }}, {{
  }},
};

::uint8_t* Focus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.DayCamera.Focus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (cmd_case()) {
    case kSetValue: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::set_value(this),
          _Internal::set_value(this).GetCachedSize(), target, stream);
      break;
    }
    case kMove: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::move(this),
          _Internal::move(this).GetCachedSize(), target, stream);
      break;
    }
    case kHalt: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::halt(this),
          _Internal::halt(this).GetCachedSize(), target, stream);
      break;
    }
    case kOffset: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, _Internal::offset(this),
          _Internal::offset(this).GetCachedSize(), target, stream);
      break;
    }
    case kResetFocus: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, _Internal::reset_focus(this),
          _Internal::reset_focus(this).GetCachedSize(), target, stream);
      break;
    }
    case kSaveToTableFocus: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, _Internal::save_to_table_focus(this),
          _Internal::save_to_table_focus(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.DayCamera.Focus)
  return target;
}

::size_t Focus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.DayCamera.Focus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (cmd_case()) {
    // .cmd.DayCamera.SetValue set_value = 1;
    case kSetValue: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.set_value_);
      break;
    }
    // .cmd.DayCamera.Move move = 2;
    case kMove: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.move_);
      break;
    }
    // .cmd.DayCamera.Halt halt = 3;
    case kHalt: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.halt_);
      break;
    }
    // .cmd.DayCamera.Offset offset = 4;
    case kOffset: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.offset_);
      break;
    }
    // .cmd.DayCamera.ResetFocus reset_focus = 5;
    case kResetFocus: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.reset_focus_);
      break;
    }
    // .cmd.DayCamera.SaveToTableFocus save_to_table_focus = 6;
    case kSaveToTableFocus: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.save_to_table_focus_);
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Focus::_class_data_ = {
    Focus::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Focus::GetClassData() const {
  return &_class_data_;
}

void Focus::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Focus*>(&to_msg);
  auto& from = static_cast<const Focus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.DayCamera.Focus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.cmd_case()) {
    case kSetValue: {
      _this->_internal_mutable_set_value()->::cmd::DayCamera::SetValue::MergeFrom(
          from._internal_set_value());
      break;
    }
    case kMove: {
      _this->_internal_mutable_move()->::cmd::DayCamera::Move::MergeFrom(
          from._internal_move());
      break;
    }
    case kHalt: {
      _this->_internal_mutable_halt()->::cmd::DayCamera::Halt::MergeFrom(
          from._internal_halt());
      break;
    }
    case kOffset: {
      _this->_internal_mutable_offset()->::cmd::DayCamera::Offset::MergeFrom(
          from._internal_offset());
      break;
    }
    case kResetFocus: {
      _this->_internal_mutable_reset_focus()->::cmd::DayCamera::ResetFocus::MergeFrom(
          from._internal_reset_focus());
      break;
    }
    case kSaveToTableFocus: {
      _this->_internal_mutable_save_to_table_focus()->::cmd::DayCamera::SaveToTableFocus::MergeFrom(
          from._internal_save_to_table_focus());
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Focus::CopyFrom(const Focus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.DayCamera.Focus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Focus::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Focus::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Focus::InternalSwap(Focus* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.cmd_, other->_impl_.cmd_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Focus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[13]);
}
// ===================================================================

class Zoom::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::cmd::DayCamera::Zoom, _impl_._oneof_case_);
  static const ::cmd::DayCamera::SetValue& set_value(const Zoom* msg);
  static const ::cmd::DayCamera::Move& move(const Zoom* msg);
  static const ::cmd::DayCamera::Halt& halt(const Zoom* msg);
  static const ::cmd::DayCamera::SetZoomTableValue& set_zoom_table_value(const Zoom* msg);
  static const ::cmd::DayCamera::NextZoomTablePos& next_zoom_table_pos(const Zoom* msg);
  static const ::cmd::DayCamera::PrevZoomTablePos& prev_zoom_table_pos(const Zoom* msg);
  static const ::cmd::DayCamera::Offset& offset(const Zoom* msg);
  static const ::cmd::DayCamera::ResetZoom& reset_zoom(const Zoom* msg);
  static const ::cmd::DayCamera::SaveToTable& save_to_table(const Zoom* msg);
};

const ::cmd::DayCamera::SetValue& Zoom::_Internal::set_value(const Zoom* msg) {
  return *msg->_impl_.cmd_.set_value_;
}
const ::cmd::DayCamera::Move& Zoom::_Internal::move(const Zoom* msg) {
  return *msg->_impl_.cmd_.move_;
}
const ::cmd::DayCamera::Halt& Zoom::_Internal::halt(const Zoom* msg) {
  return *msg->_impl_.cmd_.halt_;
}
const ::cmd::DayCamera::SetZoomTableValue& Zoom::_Internal::set_zoom_table_value(const Zoom* msg) {
  return *msg->_impl_.cmd_.set_zoom_table_value_;
}
const ::cmd::DayCamera::NextZoomTablePos& Zoom::_Internal::next_zoom_table_pos(const Zoom* msg) {
  return *msg->_impl_.cmd_.next_zoom_table_pos_;
}
const ::cmd::DayCamera::PrevZoomTablePos& Zoom::_Internal::prev_zoom_table_pos(const Zoom* msg) {
  return *msg->_impl_.cmd_.prev_zoom_table_pos_;
}
const ::cmd::DayCamera::Offset& Zoom::_Internal::offset(const Zoom* msg) {
  return *msg->_impl_.cmd_.offset_;
}
const ::cmd::DayCamera::ResetZoom& Zoom::_Internal::reset_zoom(const Zoom* msg) {
  return *msg->_impl_.cmd_.reset_zoom_;
}
const ::cmd::DayCamera::SaveToTable& Zoom::_Internal::save_to_table(const Zoom* msg) {
  return *msg->_impl_.cmd_.save_to_table_;
}
void Zoom::set_allocated_set_value(::cmd::DayCamera::SetValue* set_value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (set_value) {
    ::google::protobuf::Arena* submessage_arena = set_value->GetArena();
    if (message_arena != submessage_arena) {
      set_value = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_value, submessage_arena);
    }
    set_has_set_value();
    _impl_.cmd_.set_value_ = set_value;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Zoom.set_value)
}
void Zoom::set_allocated_move(::cmd::DayCamera::Move* move) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (move) {
    ::google::protobuf::Arena* submessage_arena = move->GetArena();
    if (message_arena != submessage_arena) {
      move = ::google::protobuf::internal::GetOwnedMessage(message_arena, move, submessage_arena);
    }
    set_has_move();
    _impl_.cmd_.move_ = move;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Zoom.move)
}
void Zoom::set_allocated_halt(::cmd::DayCamera::Halt* halt) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (halt) {
    ::google::protobuf::Arena* submessage_arena = halt->GetArena();
    if (message_arena != submessage_arena) {
      halt = ::google::protobuf::internal::GetOwnedMessage(message_arena, halt, submessage_arena);
    }
    set_has_halt();
    _impl_.cmd_.halt_ = halt;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Zoom.halt)
}
void Zoom::set_allocated_set_zoom_table_value(::cmd::DayCamera::SetZoomTableValue* set_zoom_table_value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (set_zoom_table_value) {
    ::google::protobuf::Arena* submessage_arena = set_zoom_table_value->GetArena();
    if (message_arena != submessage_arena) {
      set_zoom_table_value = ::google::protobuf::internal::GetOwnedMessage(message_arena, set_zoom_table_value, submessage_arena);
    }
    set_has_set_zoom_table_value();
    _impl_.cmd_.set_zoom_table_value_ = set_zoom_table_value;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Zoom.set_zoom_table_value)
}
void Zoom::set_allocated_next_zoom_table_pos(::cmd::DayCamera::NextZoomTablePos* next_zoom_table_pos) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (next_zoom_table_pos) {
    ::google::protobuf::Arena* submessage_arena = next_zoom_table_pos->GetArena();
    if (message_arena != submessage_arena) {
      next_zoom_table_pos = ::google::protobuf::internal::GetOwnedMessage(message_arena, next_zoom_table_pos, submessage_arena);
    }
    set_has_next_zoom_table_pos();
    _impl_.cmd_.next_zoom_table_pos_ = next_zoom_table_pos;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Zoom.next_zoom_table_pos)
}
void Zoom::set_allocated_prev_zoom_table_pos(::cmd::DayCamera::PrevZoomTablePos* prev_zoom_table_pos) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (prev_zoom_table_pos) {
    ::google::protobuf::Arena* submessage_arena = prev_zoom_table_pos->GetArena();
    if (message_arena != submessage_arena) {
      prev_zoom_table_pos = ::google::protobuf::internal::GetOwnedMessage(message_arena, prev_zoom_table_pos, submessage_arena);
    }
    set_has_prev_zoom_table_pos();
    _impl_.cmd_.prev_zoom_table_pos_ = prev_zoom_table_pos;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Zoom.prev_zoom_table_pos)
}
void Zoom::set_allocated_offset(::cmd::DayCamera::Offset* offset) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (offset) {
    ::google::protobuf::Arena* submessage_arena = offset->GetArena();
    if (message_arena != submessage_arena) {
      offset = ::google::protobuf::internal::GetOwnedMessage(message_arena, offset, submessage_arena);
    }
    set_has_offset();
    _impl_.cmd_.offset_ = offset;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Zoom.offset)
}
void Zoom::set_allocated_reset_zoom(::cmd::DayCamera::ResetZoom* reset_zoom) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (reset_zoom) {
    ::google::protobuf::Arena* submessage_arena = reset_zoom->GetArena();
    if (message_arena != submessage_arena) {
      reset_zoom = ::google::protobuf::internal::GetOwnedMessage(message_arena, reset_zoom, submessage_arena);
    }
    set_has_reset_zoom();
    _impl_.cmd_.reset_zoom_ = reset_zoom;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Zoom.reset_zoom)
}
void Zoom::set_allocated_save_to_table(::cmd::DayCamera::SaveToTable* save_to_table) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (save_to_table) {
    ::google::protobuf::Arena* submessage_arena = save_to_table->GetArena();
    if (message_arena != submessage_arena) {
      save_to_table = ::google::protobuf::internal::GetOwnedMessage(message_arena, save_to_table, submessage_arena);
    }
    set_has_save_to_table();
    _impl_.cmd_.save_to_table_ = save_to_table;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.DayCamera.Zoom.save_to_table)
}
Zoom::Zoom(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamera.Zoom)
}
inline PROTOBUF_NDEBUG_INLINE Zoom::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Zoom::Zoom(
    ::google::protobuf::Arena* arena,
    const Zoom& from)
    : ::google::protobuf::Message(arena) {
  Zoom* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (cmd_case()) {
    case CMD_NOT_SET:
      break;
      case kSetValue:
        _impl_.cmd_.set_value_ = CreateMaybeMessage<::cmd::DayCamera::SetValue>(arena, *from._impl_.cmd_.set_value_);
        break;
      case kMove:
        _impl_.cmd_.move_ = CreateMaybeMessage<::cmd::DayCamera::Move>(arena, *from._impl_.cmd_.move_);
        break;
      case kHalt:
        _impl_.cmd_.halt_ = CreateMaybeMessage<::cmd::DayCamera::Halt>(arena, *from._impl_.cmd_.halt_);
        break;
      case kSetZoomTableValue:
        _impl_.cmd_.set_zoom_table_value_ = CreateMaybeMessage<::cmd::DayCamera::SetZoomTableValue>(arena, *from._impl_.cmd_.set_zoom_table_value_);
        break;
      case kNextZoomTablePos:
        _impl_.cmd_.next_zoom_table_pos_ = CreateMaybeMessage<::cmd::DayCamera::NextZoomTablePos>(arena, *from._impl_.cmd_.next_zoom_table_pos_);
        break;
      case kPrevZoomTablePos:
        _impl_.cmd_.prev_zoom_table_pos_ = CreateMaybeMessage<::cmd::DayCamera::PrevZoomTablePos>(arena, *from._impl_.cmd_.prev_zoom_table_pos_);
        break;
      case kOffset:
        _impl_.cmd_.offset_ = CreateMaybeMessage<::cmd::DayCamera::Offset>(arena, *from._impl_.cmd_.offset_);
        break;
      case kResetZoom:
        _impl_.cmd_.reset_zoom_ = CreateMaybeMessage<::cmd::DayCamera::ResetZoom>(arena, *from._impl_.cmd_.reset_zoom_);
        break;
      case kSaveToTable:
        _impl_.cmd_.save_to_table_ = CreateMaybeMessage<::cmd::DayCamera::SaveToTable>(arena, *from._impl_.cmd_.save_to_table_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:cmd.DayCamera.Zoom)
}
inline PROTOBUF_NDEBUG_INLINE Zoom::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Zoom::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Zoom::~Zoom() {
  // @@protoc_insertion_point(destructor:cmd.DayCamera.Zoom)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Zoom::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_cmd()) {
    clear_cmd();
  }
  _impl_.~Impl_();
}

void Zoom::clear_cmd() {
// @@protoc_insertion_point(one_of_clear_start:cmd.DayCamera.Zoom)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (cmd_case()) {
    case kSetValue: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.set_value_;
      }
      break;
    }
    case kMove: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.move_;
      }
      break;
    }
    case kHalt: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.halt_;
      }
      break;
    }
    case kSetZoomTableValue: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.set_zoom_table_value_;
      }
      break;
    }
    case kNextZoomTablePos: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.next_zoom_table_pos_;
      }
      break;
    }
    case kPrevZoomTablePos: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.prev_zoom_table_pos_;
      }
      break;
    }
    case kOffset: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.offset_;
      }
      break;
    }
    case kResetZoom: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.reset_zoom_;
      }
      break;
    }
    case kSaveToTable: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.save_to_table_;
      }
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CMD_NOT_SET;
}


PROTOBUF_NOINLINE void Zoom::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.DayCamera.Zoom)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_cmd();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Zoom::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 9, 9, 0, 2> Zoom::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    9,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Zoom_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .cmd.DayCamera.SetValue set_value = 1;
    {PROTOBUF_FIELD_OFFSET(Zoom, _impl_.cmd_.set_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.DayCamera.Move move = 2;
    {PROTOBUF_FIELD_OFFSET(Zoom, _impl_.cmd_.move_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.DayCamera.Halt halt = 3;
    {PROTOBUF_FIELD_OFFSET(Zoom, _impl_.cmd_.halt_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.DayCamera.SetZoomTableValue set_zoom_table_value = 4;
    {PROTOBUF_FIELD_OFFSET(Zoom, _impl_.cmd_.set_zoom_table_value_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.DayCamera.NextZoomTablePos next_zoom_table_pos = 5;
    {PROTOBUF_FIELD_OFFSET(Zoom, _impl_.cmd_.next_zoom_table_pos_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.DayCamera.PrevZoomTablePos prev_zoom_table_pos = 6;
    {PROTOBUF_FIELD_OFFSET(Zoom, _impl_.cmd_.prev_zoom_table_pos_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.DayCamera.Offset offset = 7;
    {PROTOBUF_FIELD_OFFSET(Zoom, _impl_.cmd_.offset_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cmd.DayCamera.ResetZoom reset_zoom = 8;
    {PROTOBUF_FIELD_OFFSET(Zoom, _impl_.cmd_.reset_zoom_), _Internal::kOneofCaseOffset + 0, 7,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .cmd.DayCamera.SaveToTable save_to_table = 9;
    {PROTOBUF_FIELD_OFFSET(Zoom, _impl_.cmd_.save_to_table_), _Internal::kOneofCaseOffset + 0, 8,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cmd::DayCamera::SetValue>()},
    {::_pbi::TcParser::GetTable<::cmd::DayCamera::Move>()},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::DayCamera::_Halt_default_instance_},
    {::_pbi::TcParser::GetTable<::cmd::DayCamera::SetZoomTableValue>()},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::DayCamera::_NextZoomTablePos_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::DayCamera::_PrevZoomTablePos_default_instance_},
    {::_pbi::TcParser::GetTable<::cmd::DayCamera::Offset>()},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::DayCamera::_ResetZoom_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::cmd::DayCamera::_SaveToTable_default_instance_},
  }}, {{
  }},
};

::uint8_t* Zoom::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.DayCamera.Zoom)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (cmd_case()) {
    case kSetValue: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::set_value(this),
          _Internal::set_value(this).GetCachedSize(), target, stream);
      break;
    }
    case kMove: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::move(this),
          _Internal::move(this).GetCachedSize(), target, stream);
      break;
    }
    case kHalt: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::halt(this),
          _Internal::halt(this).GetCachedSize(), target, stream);
      break;
    }
    case kSetZoomTableValue: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, _Internal::set_zoom_table_value(this),
          _Internal::set_zoom_table_value(this).GetCachedSize(), target, stream);
      break;
    }
    case kNextZoomTablePos: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, _Internal::next_zoom_table_pos(this),
          _Internal::next_zoom_table_pos(this).GetCachedSize(), target, stream);
      break;
    }
    case kPrevZoomTablePos: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, _Internal::prev_zoom_table_pos(this),
          _Internal::prev_zoom_table_pos(this).GetCachedSize(), target, stream);
      break;
    }
    case kOffset: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, _Internal::offset(this),
          _Internal::offset(this).GetCachedSize(), target, stream);
      break;
    }
    case kResetZoom: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          8, _Internal::reset_zoom(this),
          _Internal::reset_zoom(this).GetCachedSize(), target, stream);
      break;
    }
    case kSaveToTable: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          9, _Internal::save_to_table(this),
          _Internal::save_to_table(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.DayCamera.Zoom)
  return target;
}

::size_t Zoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.DayCamera.Zoom)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (cmd_case()) {
    // .cmd.DayCamera.SetValue set_value = 1;
    case kSetValue: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.set_value_);
      break;
    }
    // .cmd.DayCamera.Move move = 2;
    case kMove: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.move_);
      break;
    }
    // .cmd.DayCamera.Halt halt = 3;
    case kHalt: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.halt_);
      break;
    }
    // .cmd.DayCamera.SetZoomTableValue set_zoom_table_value = 4;
    case kSetZoomTableValue: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.set_zoom_table_value_);
      break;
    }
    // .cmd.DayCamera.NextZoomTablePos next_zoom_table_pos = 5;
    case kNextZoomTablePos: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.next_zoom_table_pos_);
      break;
    }
    // .cmd.DayCamera.PrevZoomTablePos prev_zoom_table_pos = 6;
    case kPrevZoomTablePos: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.prev_zoom_table_pos_);
      break;
    }
    // .cmd.DayCamera.Offset offset = 7;
    case kOffset: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.offset_);
      break;
    }
    // .cmd.DayCamera.ResetZoom reset_zoom = 8;
    case kResetZoom: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.reset_zoom_);
      break;
    }
    // .cmd.DayCamera.SaveToTable save_to_table = 9;
    case kSaveToTable: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.save_to_table_);
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Zoom::_class_data_ = {
    Zoom::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Zoom::GetClassData() const {
  return &_class_data_;
}

void Zoom::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Zoom*>(&to_msg);
  auto& from = static_cast<const Zoom&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.DayCamera.Zoom)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.cmd_case()) {
    case kSetValue: {
      _this->_internal_mutable_set_value()->::cmd::DayCamera::SetValue::MergeFrom(
          from._internal_set_value());
      break;
    }
    case kMove: {
      _this->_internal_mutable_move()->::cmd::DayCamera::Move::MergeFrom(
          from._internal_move());
      break;
    }
    case kHalt: {
      _this->_internal_mutable_halt()->::cmd::DayCamera::Halt::MergeFrom(
          from._internal_halt());
      break;
    }
    case kSetZoomTableValue: {
      _this->_internal_mutable_set_zoom_table_value()->::cmd::DayCamera::SetZoomTableValue::MergeFrom(
          from._internal_set_zoom_table_value());
      break;
    }
    case kNextZoomTablePos: {
      _this->_internal_mutable_next_zoom_table_pos()->::cmd::DayCamera::NextZoomTablePos::MergeFrom(
          from._internal_next_zoom_table_pos());
      break;
    }
    case kPrevZoomTablePos: {
      _this->_internal_mutable_prev_zoom_table_pos()->::cmd::DayCamera::PrevZoomTablePos::MergeFrom(
          from._internal_prev_zoom_table_pos());
      break;
    }
    case kOffset: {
      _this->_internal_mutable_offset()->::cmd::DayCamera::Offset::MergeFrom(
          from._internal_offset());
      break;
    }
    case kResetZoom: {
      _this->_internal_mutable_reset_zoom()->::cmd::DayCamera::ResetZoom::MergeFrom(
          from._internal_reset_zoom());
      break;
    }
    case kSaveToTable: {
      _this->_internal_mutable_save_to_table()->::cmd::DayCamera::SaveToTable::MergeFrom(
          from._internal_save_to_table());
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Zoom::CopyFrom(const Zoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.DayCamera.Zoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Zoom::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Zoom::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Zoom::InternalSwap(Zoom* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.cmd_, other->_impl_.cmd_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Zoom::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[14]);
}
// ===================================================================

class NextZoomTablePos::_Internal {
 public:
};

NextZoomTablePos::NextZoomTablePos(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamera.NextZoomTablePos)
}
NextZoomTablePos::NextZoomTablePos(
    ::google::protobuf::Arena* arena,
    const NextZoomTablePos& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  NextZoomTablePos* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.DayCamera.NextZoomTablePos)
}









::google::protobuf::Metadata NextZoomTablePos::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[15]);
}
// ===================================================================

class PrevZoomTablePos::_Internal {
 public:
};

PrevZoomTablePos::PrevZoomTablePos(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamera.PrevZoomTablePos)
}
PrevZoomTablePos::PrevZoomTablePos(
    ::google::protobuf::Arena* arena,
    const PrevZoomTablePos& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  PrevZoomTablePos* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.DayCamera.PrevZoomTablePos)
}









::google::protobuf::Metadata PrevZoomTablePos::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[16]);
}
// ===================================================================

class SetIris::_Internal {
 public:
};

SetIris::SetIris(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamera.SetIris)
}
SetIris::SetIris(
    ::google::protobuf::Arena* arena, const SetIris& from)
    : SetIris(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetIris::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetIris::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
SetIris::~SetIris() {
  // @@protoc_insertion_point(destructor:cmd.DayCamera.SetIris)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetIris::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetIris::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.DayCamera.SetIris)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetIris::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetIris::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetIris_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float value = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(SetIris, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float value = 1;
    {PROTOBUF_FIELD_OFFSET(SetIris, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetIris::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.DayCamera.SetIris)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.DayCamera.SetIris)
  return target;
}

::size_t SetIris::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.DayCamera.SetIris)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float value = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetIris::_class_data_ = {
    SetIris::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetIris::GetClassData() const {
  return &_class_data_;
}

void SetIris::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetIris*>(&to_msg);
  auto& from = static_cast<const SetIris&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.DayCamera.SetIris)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_value = from._internal_value();
  ::uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetIris::CopyFrom(const SetIris& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.DayCamera.SetIris)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetIris::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetIris::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetIris::InternalSwap(SetIris* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata SetIris::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[17]);
}
// ===================================================================

class SetInfraRedFilter::_Internal {
 public:
};

SetInfraRedFilter::SetInfraRedFilter(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamera.SetInfraRedFilter)
}
SetInfraRedFilter::SetInfraRedFilter(
    ::google::protobuf::Arena* arena, const SetInfraRedFilter& from)
    : SetInfraRedFilter(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetInfraRedFilter::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetInfraRedFilter::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
SetInfraRedFilter::~SetInfraRedFilter() {
  // @@protoc_insertion_point(destructor:cmd.DayCamera.SetInfraRedFilter)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetInfraRedFilter::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetInfraRedFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.DayCamera.SetInfraRedFilter)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetInfraRedFilter::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetInfraRedFilter::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetInfraRedFilter_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool value = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SetInfraRedFilter, _impl_.value_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetInfraRedFilter, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool value = 1;
    {PROTOBUF_FIELD_OFFSET(SetInfraRedFilter, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetInfraRedFilter::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.DayCamera.SetInfraRedFilter)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool value = 1;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.DayCamera.SetInfraRedFilter)
  return target;
}

::size_t SetInfraRedFilter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.DayCamera.SetInfraRedFilter)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool value = 1;
  if (this->_internal_value() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetInfraRedFilter::_class_data_ = {
    SetInfraRedFilter::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetInfraRedFilter::GetClassData() const {
  return &_class_data_;
}

void SetInfraRedFilter::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetInfraRedFilter*>(&to_msg);
  auto& from = static_cast<const SetInfraRedFilter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.DayCamera.SetInfraRedFilter)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value() != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetInfraRedFilter::CopyFrom(const SetInfraRedFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.DayCamera.SetInfraRedFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetInfraRedFilter::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetInfraRedFilter::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetInfraRedFilter::InternalSwap(SetInfraRedFilter* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata SetInfraRedFilter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[18]);
}
// ===================================================================

class SetAutoIris::_Internal {
 public:
};

SetAutoIris::SetAutoIris(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamera.SetAutoIris)
}
SetAutoIris::SetAutoIris(
    ::google::protobuf::Arena* arena, const SetAutoIris& from)
    : SetAutoIris(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetAutoIris::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetAutoIris::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
SetAutoIris::~SetAutoIris() {
  // @@protoc_insertion_point(destructor:cmd.DayCamera.SetAutoIris)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetAutoIris::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetAutoIris::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.DayCamera.SetAutoIris)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetAutoIris::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetAutoIris::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetAutoIris_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool value = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SetAutoIris, _impl_.value_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetAutoIris, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool value = 1;
    {PROTOBUF_FIELD_OFFSET(SetAutoIris, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetAutoIris::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.DayCamera.SetAutoIris)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool value = 1;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.DayCamera.SetAutoIris)
  return target;
}

::size_t SetAutoIris::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.DayCamera.SetAutoIris)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool value = 1;
  if (this->_internal_value() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetAutoIris::_class_data_ = {
    SetAutoIris::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetAutoIris::GetClassData() const {
  return &_class_data_;
}

void SetAutoIris::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetAutoIris*>(&to_msg);
  auto& from = static_cast<const SetAutoIris&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.DayCamera.SetAutoIris)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value() != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetAutoIris::CopyFrom(const SetAutoIris& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.DayCamera.SetAutoIris)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetAutoIris::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetAutoIris::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetAutoIris::InternalSwap(SetAutoIris* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata SetAutoIris::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[19]);
}
// ===================================================================

class SetZoomTableValue::_Internal {
 public:
};

SetZoomTableValue::SetZoomTableValue(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamera.SetZoomTableValue)
}
SetZoomTableValue::SetZoomTableValue(
    ::google::protobuf::Arena* arena, const SetZoomTableValue& from)
    : SetZoomTableValue(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SetZoomTableValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SetZoomTableValue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
SetZoomTableValue::~SetZoomTableValue() {
  // @@protoc_insertion_point(destructor:cmd.DayCamera.SetZoomTableValue)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetZoomTableValue::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SetZoomTableValue::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.DayCamera.SetZoomTableValue)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetZoomTableValue::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetZoomTableValue::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetZoomTableValue_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 value = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetZoomTableValue, _impl_.value_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetZoomTableValue, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 value = 1;
    {PROTOBUF_FIELD_OFFSET(SetZoomTableValue, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetZoomTableValue::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.DayCamera.SetZoomTableValue)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 value = 1;
  if (this->_internal_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.DayCamera.SetZoomTableValue)
  return target;
}

::size_t SetZoomTableValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.DayCamera.SetZoomTableValue)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->_internal_value() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetZoomTableValue::_class_data_ = {
    SetZoomTableValue::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SetZoomTableValue::GetClassData() const {
  return &_class_data_;
}

void SetZoomTableValue::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetZoomTableValue*>(&to_msg);
  auto& from = static_cast<const SetZoomTableValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.DayCamera.SetZoomTableValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value() != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetZoomTableValue::CopyFrom(const SetZoomTableValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.DayCamera.SetZoomTableValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetZoomTableValue::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SetZoomTableValue::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SetZoomTableValue::InternalSwap(SetZoomTableValue* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata SetZoomTableValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[20]);
}
// ===================================================================

class Stop::_Internal {
 public:
};

Stop::Stop(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamera.Stop)
}
Stop::Stop(
    ::google::protobuf::Arena* arena,
    const Stop& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  Stop* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.DayCamera.Stop)
}









::google::protobuf::Metadata Stop::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[21]);
}
// ===================================================================

class Start::_Internal {
 public:
};

Start::Start(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamera.Start)
}
Start::Start(
    ::google::protobuf::Arena* arena,
    const Start& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  Start* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.DayCamera.Start)
}









::google::protobuf::Metadata Start::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[22]);
}
// ===================================================================

class Photo::_Internal {
 public:
};

Photo::Photo(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamera.Photo)
}
Photo::Photo(
    ::google::protobuf::Arena* arena,
    const Photo& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  Photo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.DayCamera.Photo)
}









::google::protobuf::Metadata Photo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[23]);
}
// ===================================================================

class Halt::_Internal {
 public:
};

Halt::Halt(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamera.Halt)
}
Halt::Halt(
    ::google::protobuf::Arena* arena,
    const Halt& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  Halt* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.DayCamera.Halt)
}









::google::protobuf::Metadata Halt::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[24]);
}
// ===================================================================

class GetMeteo::_Internal {
 public:
};

GetMeteo::GetMeteo(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamera.GetMeteo)
}
GetMeteo::GetMeteo(
    ::google::protobuf::Arena* arena,
    const GetMeteo& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  GetMeteo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.DayCamera.GetMeteo)
}









::google::protobuf::Metadata GetMeteo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[25]);
}
// ===================================================================

class ResetZoom::_Internal {
 public:
};

ResetZoom::ResetZoom(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamera.ResetZoom)
}
ResetZoom::ResetZoom(
    ::google::protobuf::Arena* arena,
    const ResetZoom& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  ResetZoom* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.DayCamera.ResetZoom)
}









::google::protobuf::Metadata ResetZoom::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[26]);
}
// ===================================================================

class ResetFocus::_Internal {
 public:
};

ResetFocus::ResetFocus(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamera.ResetFocus)
}
ResetFocus::ResetFocus(
    ::google::protobuf::Arena* arena,
    const ResetFocus& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  ResetFocus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.DayCamera.ResetFocus)
}









::google::protobuf::Metadata ResetFocus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[27]);
}
// ===================================================================

class SaveToTable::_Internal {
 public:
};

SaveToTable::SaveToTable(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamera.SaveToTable)
}
SaveToTable::SaveToTable(
    ::google::protobuf::Arena* arena,
    const SaveToTable& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SaveToTable* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.DayCamera.SaveToTable)
}









::google::protobuf::Metadata SaveToTable::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[28]);
}
// ===================================================================

class SaveToTableFocus::_Internal {
 public:
};

SaveToTableFocus::SaveToTableFocus(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:cmd.DayCamera.SaveToTableFocus)
}
SaveToTableFocus::SaveToTableFocus(
    ::google::protobuf::Arena* arena,
    const SaveToTableFocus& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SaveToTableFocus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cmd.DayCamera.SaveToTableFocus)
}









::google::protobuf::Metadata SaveToTableFocus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5fday_5fcamera_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5fday_5fcamera_2eproto[29]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace DayCamera
}  // namespace cmd
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
