// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jon_shared_cmd_lira.proto

#include "jon_shared_cmd_lira.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cmd {
namespace Lira {

inline constexpr JonGuiDataLiraTarget::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : timestamp_{::int64_t{0}},
        target_longitude_{0},
        target_latitude_{0},
        target_altitude_{0},
        target_azimuth_{0},
        target_elevation_{0},
        distance_{0},
        uuid_part1_{0},
        uuid_part2_{0},
        uuid_part3_{0},
        uuid_part4_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR JonGuiDataLiraTarget::JonGuiDataLiraTarget(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct JonGuiDataLiraTargetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JonGuiDataLiraTargetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JonGuiDataLiraTargetDefaultTypeInternal() {}
  union {
    JonGuiDataLiraTarget _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JonGuiDataLiraTargetDefaultTypeInternal _JonGuiDataLiraTarget_default_instance_;

inline constexpr Refine_target::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        target_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Refine_target::Refine_target(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Refine_targetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Refine_targetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Refine_targetDefaultTypeInternal() {}
  union {
    Refine_target _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Refine_targetDefaultTypeInternal _Refine_target_default_instance_;

inline constexpr Root::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Root::Root(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RootDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RootDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RootDefaultTypeInternal() {}
  union {
    Root _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RootDefaultTypeInternal _Root_default_instance_;
}  // namespace Lira
}  // namespace cmd
static ::_pb::Metadata file_level_metadata_jon_5fshared_5fcmd_5flira_2eproto[3];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_jon_5fshared_5fcmd_5flira_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_jon_5fshared_5fcmd_5flira_2eproto = nullptr;
const ::uint32_t TableStruct_jon_5fshared_5fcmd_5flira_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::Lira::Root, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::cmd::Lira::Root, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::cmd::Lira::Root, _impl_.cmd_),
    PROTOBUF_FIELD_OFFSET(::cmd::Lira::Refine_target, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::cmd::Lira::Refine_target, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::Lira::Refine_target, _impl_.target_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::cmd::Lira::JonGuiDataLiraTarget, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::cmd::Lira::JonGuiDataLiraTarget, _impl_.timestamp_),
    PROTOBUF_FIELD_OFFSET(::cmd::Lira::JonGuiDataLiraTarget, _impl_.target_longitude_),
    PROTOBUF_FIELD_OFFSET(::cmd::Lira::JonGuiDataLiraTarget, _impl_.target_latitude_),
    PROTOBUF_FIELD_OFFSET(::cmd::Lira::JonGuiDataLiraTarget, _impl_.target_altitude_),
    PROTOBUF_FIELD_OFFSET(::cmd::Lira::JonGuiDataLiraTarget, _impl_.target_azimuth_),
    PROTOBUF_FIELD_OFFSET(::cmd::Lira::JonGuiDataLiraTarget, _impl_.target_elevation_),
    PROTOBUF_FIELD_OFFSET(::cmd::Lira::JonGuiDataLiraTarget, _impl_.distance_),
    PROTOBUF_FIELD_OFFSET(::cmd::Lira::JonGuiDataLiraTarget, _impl_.uuid_part1_),
    PROTOBUF_FIELD_OFFSET(::cmd::Lira::JonGuiDataLiraTarget, _impl_.uuid_part2_),
    PROTOBUF_FIELD_OFFSET(::cmd::Lira::JonGuiDataLiraTarget, _impl_.uuid_part3_),
    PROTOBUF_FIELD_OFFSET(::cmd::Lira::JonGuiDataLiraTarget, _impl_.uuid_part4_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::cmd::Lira::Root)},
        {10, 19, -1, sizeof(::cmd::Lira::Refine_target)},
        {20, -1, -1, sizeof(::cmd::Lira::JonGuiDataLiraTarget)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::cmd::Lira::_Root_default_instance_._instance,
    &::cmd::Lira::_Refine_target_default_instance_._instance,
    &::cmd::Lira::_JonGuiDataLiraTarget_default_instance_._instance,
};
const char descriptor_table_protodef_jon_5fshared_5fcmd_5flira_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\031jon_shared_cmd_lira.proto\022\010cmd.Lira\"\?\n"
    "\004Root\0220\n\rrefine_target\030\001 \001(\0132\027.cmd.Lira."
    "Refine_targetH\000B\005\n\003cmd\"\?\n\rRefine_target\022"
    ".\n\006target\030\001 \001(\0132\036.cmd.Lira.JonGuiDataLir"
    "aTarget\"\211\002\n\024JonGuiDataLiraTarget\022\021\n\ttime"
    "stamp\030\001 \001(\003\022\030\n\020target_longitude\030\002 \001(\001\022\027\n"
    "\017target_latitude\030\003 \001(\001\022\027\n\017target_altitud"
    "e\030\004 \001(\001\022\026\n\016target_azimuth\030\005 \001(\001\022\030\n\020targe"
    "t_elevation\030\006 \001(\001\022\020\n\010distance\030\007 \001(\001\022\022\n\nu"
    "uid_part1\030\010 \001(\005\022\022\n\nuuid_part2\030\t \001(\005\022\022\n\nu"
    "uid_part3\030\n \001(\005\022\022\n\nuuid_part4\030\013 \001(\005BKZIg"
    "it-codecommit.eu-central-1.amazonaws.com"
    "/v1/repos/jettison/jonp/cmd/lirab\006proto3"
};
static ::absl::once_flag descriptor_table_jon_5fshared_5fcmd_5flira_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_jon_5fshared_5fcmd_5flira_2eproto = {
    false,
    false,
    520,
    descriptor_table_protodef_jon_5fshared_5fcmd_5flira_2eproto,
    "jon_shared_cmd_lira.proto",
    &descriptor_table_jon_5fshared_5fcmd_5flira_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_jon_5fshared_5fcmd_5flira_2eproto::offsets,
    file_level_metadata_jon_5fshared_5fcmd_5flira_2eproto,
    file_level_enum_descriptors_jon_5fshared_5fcmd_5flira_2eproto,
    file_level_service_descriptors_jon_5fshared_5fcmd_5flira_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_jon_5fshared_5fcmd_5flira_2eproto_getter() {
  return &descriptor_table_jon_5fshared_5fcmd_5flira_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_jon_5fshared_5fcmd_5flira_2eproto(&descriptor_table_jon_5fshared_5fcmd_5flira_2eproto);
namespace cmd {
namespace Lira {
// ===================================================================

class Root::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::cmd::Lira::Root, _impl_._oneof_case_);
  static const ::cmd::Lira::Refine_target& refine_target(const Root* msg);
};

const ::cmd::Lira::Refine_target& Root::_Internal::refine_target(const Root* msg) {
  return *msg->_impl_.cmd_.refine_target_;
}
void Root::set_allocated_refine_target(::cmd::Lira::Refine_target* refine_target) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (refine_target) {
    ::google::protobuf::Arena* submessage_arena = refine_target->GetArena();
    if (message_arena != submessage_arena) {
      refine_target = ::google::protobuf::internal::GetOwnedMessage(message_arena, refine_target, submessage_arena);
    }
    set_has_refine_target();
    _impl_.cmd_.refine_target_ = refine_target;
  }
  // @@protoc_insertion_point(field_set_allocated:cmd.Lira.Root.refine_target)
}
Root::Root(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.Lira.Root)
}
inline PROTOBUF_NDEBUG_INLINE Root::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Root::Root(
    ::google::protobuf::Arena* arena,
    const Root& from)
    : ::google::protobuf::Message(arena) {
  Root* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (cmd_case()) {
    case CMD_NOT_SET:
      break;
      case kRefineTarget:
        _impl_.cmd_.refine_target_ = CreateMaybeMessage<::cmd::Lira::Refine_target>(arena, *from._impl_.cmd_.refine_target_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:cmd.Lira.Root)
}
inline PROTOBUF_NDEBUG_INLINE Root::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Root::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Root::~Root() {
  // @@protoc_insertion_point(destructor:cmd.Lira.Root)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Root::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_cmd()) {
    clear_cmd();
  }
  _impl_.~Impl_();
}

void Root::clear_cmd() {
// @@protoc_insertion_point(one_of_clear_start:cmd.Lira.Root)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (cmd_case()) {
    case kRefineTarget: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.refine_target_;
      }
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CMD_NOT_SET;
}


PROTOBUF_NOINLINE void Root::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.Lira.Root)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_cmd();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Root::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Root::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Root_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .cmd.Lira.Refine_target refine_target = 1;
    {PROTOBUF_FIELD_OFFSET(Root, _impl_.cmd_.refine_target_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cmd::Lira::Refine_target>()},
  }}, {{
  }},
};

::uint8_t* Root::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.Lira.Root)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .cmd.Lira.Refine_target refine_target = 1;
  if (cmd_case() == kRefineTarget) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::refine_target(this),
        _Internal::refine_target(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.Lira.Root)
  return target;
}

::size_t Root::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.Lira.Root)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (cmd_case()) {
    // .cmd.Lira.Refine_target refine_target = 1;
    case kRefineTarget: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmd_.refine_target_);
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Root::_class_data_ = {
    Root::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Root::GetClassData() const {
  return &_class_data_;
}

void Root::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Root*>(&to_msg);
  auto& from = static_cast<const Root&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.Lira.Root)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.cmd_case()) {
    case kRefineTarget: {
      _this->_internal_mutable_refine_target()->::cmd::Lira::Refine_target::MergeFrom(
          from._internal_refine_target());
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Root::CopyFrom(const Root& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.Lira.Root)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Root::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Root::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Root::InternalSwap(Root* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.cmd_, other->_impl_.cmd_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Root::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5flira_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5flira_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5flira_2eproto[0]);
}
// ===================================================================

class Refine_target::_Internal {
 public:
  using HasBits = decltype(std::declval<Refine_target>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Refine_target, _impl_._has_bits_);
  static const ::cmd::Lira::JonGuiDataLiraTarget& target(const Refine_target* msg);
  static void set_has_target(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cmd::Lira::JonGuiDataLiraTarget& Refine_target::_Internal::target(const Refine_target* msg) {
  return *msg->_impl_.target_;
}
Refine_target::Refine_target(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.Lira.Refine_target)
}
inline PROTOBUF_NDEBUG_INLINE Refine_target::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Refine_target::Refine_target(
    ::google::protobuf::Arena* arena,
    const Refine_target& from)
    : ::google::protobuf::Message(arena) {
  Refine_target* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.target_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::cmd::Lira::JonGuiDataLiraTarget>(arena, *from._impl_.target_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:cmd.Lira.Refine_target)
}
inline PROTOBUF_NDEBUG_INLINE Refine_target::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Refine_target::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.target_ = {};
}
Refine_target::~Refine_target() {
  // @@protoc_insertion_point(destructor:cmd.Lira.Refine_target)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Refine_target::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.target_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Refine_target::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.Lira.Refine_target)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.target_ != nullptr);
    _impl_.target_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Refine_target::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Refine_target::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Refine_target, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Refine_target_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .cmd.Lira.JonGuiDataLiraTarget target = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Refine_target, _impl_.target_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cmd.Lira.JonGuiDataLiraTarget target = 1;
    {PROTOBUF_FIELD_OFFSET(Refine_target, _impl_.target_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cmd::Lira::JonGuiDataLiraTarget>()},
  }}, {{
  }},
};

::uint8_t* Refine_target::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.Lira.Refine_target)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cmd.Lira.JonGuiDataLiraTarget target = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::target(this),
        _Internal::target(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.Lira.Refine_target)
  return target;
}

::size_t Refine_target::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.Lira.Refine_target)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cmd.Lira.JonGuiDataLiraTarget target = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.target_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Refine_target::_class_data_ = {
    Refine_target::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Refine_target::GetClassData() const {
  return &_class_data_;
}

void Refine_target::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Refine_target*>(&to_msg);
  auto& from = static_cast<const Refine_target&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.Lira.Refine_target)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_target()->::cmd::Lira::JonGuiDataLiraTarget::MergeFrom(
        from._internal_target());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Refine_target::CopyFrom(const Refine_target& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.Lira.Refine_target)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Refine_target::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Refine_target::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Refine_target::InternalSwap(Refine_target* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.target_, other->_impl_.target_);
}

::google::protobuf::Metadata Refine_target::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5flira_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5flira_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5flira_2eproto[1]);
}
// ===================================================================

class JonGuiDataLiraTarget::_Internal {
 public:
};

JonGuiDataLiraTarget::JonGuiDataLiraTarget(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cmd.Lira.JonGuiDataLiraTarget)
}
JonGuiDataLiraTarget::JonGuiDataLiraTarget(
    ::google::protobuf::Arena* arena, const JonGuiDataLiraTarget& from)
    : JonGuiDataLiraTarget(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE JonGuiDataLiraTarget::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void JonGuiDataLiraTarget::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, uuid_part4_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::uuid_part4_));
}
JonGuiDataLiraTarget::~JonGuiDataLiraTarget() {
  // @@protoc_insertion_point(destructor:cmd.Lira.JonGuiDataLiraTarget)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void JonGuiDataLiraTarget::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void JonGuiDataLiraTarget::Clear() {
// @@protoc_insertion_point(message_clear_start:cmd.Lira.JonGuiDataLiraTarget)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.uuid_part4_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.uuid_part4_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* JonGuiDataLiraTarget::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 0, 0, 2> JonGuiDataLiraTarget::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_JonGuiDataLiraTarget_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(JonGuiDataLiraTarget, _impl_.timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(JonGuiDataLiraTarget, _impl_.timestamp_)}},
    // double target_longitude = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(JonGuiDataLiraTarget, _impl_.target_longitude_)}},
    // double target_latitude = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(JonGuiDataLiraTarget, _impl_.target_latitude_)}},
    // double target_altitude = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(JonGuiDataLiraTarget, _impl_.target_altitude_)}},
    // double target_azimuth = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(JonGuiDataLiraTarget, _impl_.target_azimuth_)}},
    // double target_elevation = 6;
    {::_pbi::TcParser::FastF64S1,
     {49, 63, 0, PROTOBUF_FIELD_OFFSET(JonGuiDataLiraTarget, _impl_.target_elevation_)}},
    // double distance = 7;
    {::_pbi::TcParser::FastF64S1,
     {57, 63, 0, PROTOBUF_FIELD_OFFSET(JonGuiDataLiraTarget, _impl_.distance_)}},
    // int32 uuid_part1 = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(JonGuiDataLiraTarget, _impl_.uuid_part1_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(JonGuiDataLiraTarget, _impl_.uuid_part1_)}},
    // int32 uuid_part2 = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(JonGuiDataLiraTarget, _impl_.uuid_part2_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(JonGuiDataLiraTarget, _impl_.uuid_part2_)}},
    // int32 uuid_part3 = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(JonGuiDataLiraTarget, _impl_.uuid_part3_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(JonGuiDataLiraTarget, _impl_.uuid_part3_)}},
    // int32 uuid_part4 = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(JonGuiDataLiraTarget, _impl_.uuid_part4_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(JonGuiDataLiraTarget, _impl_.uuid_part4_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(JonGuiDataLiraTarget, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // double target_longitude = 2;
    {PROTOBUF_FIELD_OFFSET(JonGuiDataLiraTarget, _impl_.target_longitude_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double target_latitude = 3;
    {PROTOBUF_FIELD_OFFSET(JonGuiDataLiraTarget, _impl_.target_latitude_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double target_altitude = 4;
    {PROTOBUF_FIELD_OFFSET(JonGuiDataLiraTarget, _impl_.target_altitude_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double target_azimuth = 5;
    {PROTOBUF_FIELD_OFFSET(JonGuiDataLiraTarget, _impl_.target_azimuth_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double target_elevation = 6;
    {PROTOBUF_FIELD_OFFSET(JonGuiDataLiraTarget, _impl_.target_elevation_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double distance = 7;
    {PROTOBUF_FIELD_OFFSET(JonGuiDataLiraTarget, _impl_.distance_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // int32 uuid_part1 = 8;
    {PROTOBUF_FIELD_OFFSET(JonGuiDataLiraTarget, _impl_.uuid_part1_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 uuid_part2 = 9;
    {PROTOBUF_FIELD_OFFSET(JonGuiDataLiraTarget, _impl_.uuid_part2_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 uuid_part3 = 10;
    {PROTOBUF_FIELD_OFFSET(JonGuiDataLiraTarget, _impl_.uuid_part3_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 uuid_part4 = 11;
    {PROTOBUF_FIELD_OFFSET(JonGuiDataLiraTarget, _impl_.uuid_part4_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* JonGuiDataLiraTarget::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cmd.Lira.JonGuiDataLiraTarget)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_timestamp(), target);
  }

  // double target_longitude = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_target_longitude = this->_internal_target_longitude();
  ::uint64_t raw_target_longitude;
  memcpy(&raw_target_longitude, &tmp_target_longitude, sizeof(tmp_target_longitude));
  if (raw_target_longitude != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_target_longitude(), target);
  }

  // double target_latitude = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_target_latitude = this->_internal_target_latitude();
  ::uint64_t raw_target_latitude;
  memcpy(&raw_target_latitude, &tmp_target_latitude, sizeof(tmp_target_latitude));
  if (raw_target_latitude != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_target_latitude(), target);
  }

  // double target_altitude = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_target_altitude = this->_internal_target_altitude();
  ::uint64_t raw_target_altitude;
  memcpy(&raw_target_altitude, &tmp_target_altitude, sizeof(tmp_target_altitude));
  if (raw_target_altitude != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_target_altitude(), target);
  }

  // double target_azimuth = 5;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_target_azimuth = this->_internal_target_azimuth();
  ::uint64_t raw_target_azimuth;
  memcpy(&raw_target_azimuth, &tmp_target_azimuth, sizeof(tmp_target_azimuth));
  if (raw_target_azimuth != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        5, this->_internal_target_azimuth(), target);
  }

  // double target_elevation = 6;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_target_elevation = this->_internal_target_elevation();
  ::uint64_t raw_target_elevation;
  memcpy(&raw_target_elevation, &tmp_target_elevation, sizeof(tmp_target_elevation));
  if (raw_target_elevation != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        6, this->_internal_target_elevation(), target);
  }

  // double distance = 7;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_distance = this->_internal_distance();
  ::uint64_t raw_distance;
  memcpy(&raw_distance, &tmp_distance, sizeof(tmp_distance));
  if (raw_distance != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        7, this->_internal_distance(), target);
  }

  // int32 uuid_part1 = 8;
  if (this->_internal_uuid_part1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<8>(
            stream, this->_internal_uuid_part1(), target);
  }

  // int32 uuid_part2 = 9;
  if (this->_internal_uuid_part2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<9>(
            stream, this->_internal_uuid_part2(), target);
  }

  // int32 uuid_part3 = 10;
  if (this->_internal_uuid_part3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<10>(
            stream, this->_internal_uuid_part3(), target);
  }

  // int32 uuid_part4 = 11;
  if (this->_internal_uuid_part4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<11>(
            stream, this->_internal_uuid_part4(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cmd.Lira.JonGuiDataLiraTarget)
  return target;
}

::size_t JonGuiDataLiraTarget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cmd.Lira.JonGuiDataLiraTarget)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_timestamp());
  }

  // double target_longitude = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_target_longitude = this->_internal_target_longitude();
  ::uint64_t raw_target_longitude;
  memcpy(&raw_target_longitude, &tmp_target_longitude, sizeof(tmp_target_longitude));
  if (raw_target_longitude != 0) {
    total_size += 9;
  }

  // double target_latitude = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_target_latitude = this->_internal_target_latitude();
  ::uint64_t raw_target_latitude;
  memcpy(&raw_target_latitude, &tmp_target_latitude, sizeof(tmp_target_latitude));
  if (raw_target_latitude != 0) {
    total_size += 9;
  }

  // double target_altitude = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_target_altitude = this->_internal_target_altitude();
  ::uint64_t raw_target_altitude;
  memcpy(&raw_target_altitude, &tmp_target_altitude, sizeof(tmp_target_altitude));
  if (raw_target_altitude != 0) {
    total_size += 9;
  }

  // double target_azimuth = 5;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_target_azimuth = this->_internal_target_azimuth();
  ::uint64_t raw_target_azimuth;
  memcpy(&raw_target_azimuth, &tmp_target_azimuth, sizeof(tmp_target_azimuth));
  if (raw_target_azimuth != 0) {
    total_size += 9;
  }

  // double target_elevation = 6;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_target_elevation = this->_internal_target_elevation();
  ::uint64_t raw_target_elevation;
  memcpy(&raw_target_elevation, &tmp_target_elevation, sizeof(tmp_target_elevation));
  if (raw_target_elevation != 0) {
    total_size += 9;
  }

  // double distance = 7;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_distance = this->_internal_distance();
  ::uint64_t raw_distance;
  memcpy(&raw_distance, &tmp_distance, sizeof(tmp_distance));
  if (raw_distance != 0) {
    total_size += 9;
  }

  // int32 uuid_part1 = 8;
  if (this->_internal_uuid_part1() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_uuid_part1());
  }

  // int32 uuid_part2 = 9;
  if (this->_internal_uuid_part2() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_uuid_part2());
  }

  // int32 uuid_part3 = 10;
  if (this->_internal_uuid_part3() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_uuid_part3());
  }

  // int32 uuid_part4 = 11;
  if (this->_internal_uuid_part4() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_uuid_part4());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData JonGuiDataLiraTarget::_class_data_ = {
    JonGuiDataLiraTarget::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* JonGuiDataLiraTarget::GetClassData() const {
  return &_class_data_;
}

void JonGuiDataLiraTarget::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<JonGuiDataLiraTarget*>(&to_msg);
  auto& from = static_cast<const JonGuiDataLiraTarget&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cmd.Lira.JonGuiDataLiraTarget)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_target_longitude = from._internal_target_longitude();
  ::uint64_t raw_target_longitude;
  memcpy(&raw_target_longitude, &tmp_target_longitude, sizeof(tmp_target_longitude));
  if (raw_target_longitude != 0) {
    _this->_internal_set_target_longitude(from._internal_target_longitude());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_target_latitude = from._internal_target_latitude();
  ::uint64_t raw_target_latitude;
  memcpy(&raw_target_latitude, &tmp_target_latitude, sizeof(tmp_target_latitude));
  if (raw_target_latitude != 0) {
    _this->_internal_set_target_latitude(from._internal_target_latitude());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_target_altitude = from._internal_target_altitude();
  ::uint64_t raw_target_altitude;
  memcpy(&raw_target_altitude, &tmp_target_altitude, sizeof(tmp_target_altitude));
  if (raw_target_altitude != 0) {
    _this->_internal_set_target_altitude(from._internal_target_altitude());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_target_azimuth = from._internal_target_azimuth();
  ::uint64_t raw_target_azimuth;
  memcpy(&raw_target_azimuth, &tmp_target_azimuth, sizeof(tmp_target_azimuth));
  if (raw_target_azimuth != 0) {
    _this->_internal_set_target_azimuth(from._internal_target_azimuth());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_target_elevation = from._internal_target_elevation();
  ::uint64_t raw_target_elevation;
  memcpy(&raw_target_elevation, &tmp_target_elevation, sizeof(tmp_target_elevation));
  if (raw_target_elevation != 0) {
    _this->_internal_set_target_elevation(from._internal_target_elevation());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_distance = from._internal_distance();
  ::uint64_t raw_distance;
  memcpy(&raw_distance, &tmp_distance, sizeof(tmp_distance));
  if (raw_distance != 0) {
    _this->_internal_set_distance(from._internal_distance());
  }
  if (from._internal_uuid_part1() != 0) {
    _this->_internal_set_uuid_part1(from._internal_uuid_part1());
  }
  if (from._internal_uuid_part2() != 0) {
    _this->_internal_set_uuid_part2(from._internal_uuid_part2());
  }
  if (from._internal_uuid_part3() != 0) {
    _this->_internal_set_uuid_part3(from._internal_uuid_part3());
  }
  if (from._internal_uuid_part4() != 0) {
    _this->_internal_set_uuid_part4(from._internal_uuid_part4());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void JonGuiDataLiraTarget::CopyFrom(const JonGuiDataLiraTarget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cmd.Lira.JonGuiDataLiraTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool JonGuiDataLiraTarget::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* JonGuiDataLiraTarget::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void JonGuiDataLiraTarget::InternalSwap(JonGuiDataLiraTarget* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JonGuiDataLiraTarget, _impl_.uuid_part4_)
      + sizeof(JonGuiDataLiraTarget::_impl_.uuid_part4_)
      - PROTOBUF_FIELD_OFFSET(JonGuiDataLiraTarget, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata JonGuiDataLiraTarget::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_jon_5fshared_5fcmd_5flira_2eproto_getter, &descriptor_table_jon_5fshared_5fcmd_5flira_2eproto_once,
      file_level_metadata_jon_5fshared_5fcmd_5flira_2eproto[2]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Lira
}  // namespace cmd
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
