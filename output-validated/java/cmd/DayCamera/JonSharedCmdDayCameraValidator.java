// Code generated by protoc-gen-validate. DO NOT EDIT.
// source: jon_shared_cmd_day_camera.proto

package cmd.DayCamera;


@SuppressWarnings("all")
public class JonSharedCmdDayCameraValidator {
	public static io.envoyproxy.pgv.ValidatorImpl validatorFor(Class clazz) {
		
		if (clazz.equals(cmd.DayCamera.JonSharedCmdDayCamera.SetValue.class)) return new SetValueValidator();
		if (clazz.equals(cmd.DayCamera.JonSharedCmdDayCamera.Move.class)) return new MoveValidator();
		if (clazz.equals(cmd.DayCamera.JonSharedCmdDayCamera.Offset.class)) return new OffsetValidator();
		if (clazz.equals(cmd.DayCamera.JonSharedCmdDayCamera.SetClaheLevel.class)) return new SetClaheLevelValidator();
		if (clazz.equals(cmd.DayCamera.JonSharedCmdDayCamera.ShiftClaheLevel.class)) return new ShiftClaheLevelValidator();
		if (clazz.equals(cmd.DayCamera.JonSharedCmdDayCamera.Root.class)) return new RootValidator();
		if (clazz.equals(cmd.DayCamera.JonSharedCmdDayCamera.GetPos.class)) return new GetPosValidator();
		if (clazz.equals(cmd.DayCamera.JonSharedCmdDayCamera.NextFxMode.class)) return new NextFxModeValidator();
		if (clazz.equals(cmd.DayCamera.JonSharedCmdDayCamera.PrevFxMode.class)) return new PrevFxModeValidator();
		if (clazz.equals(cmd.DayCamera.JonSharedCmdDayCamera.RefreshFxMode.class)) return new RefreshFxModeValidator();
		if (clazz.equals(cmd.DayCamera.JonSharedCmdDayCamera.HaltAll.class)) return new HaltAllValidator();
		if (clazz.equals(cmd.DayCamera.JonSharedCmdDayCamera.SetFxMode.class)) return new SetFxModeValidator();
		if (clazz.equals(cmd.DayCamera.JonSharedCmdDayCamera.SetDigitalZoomLevel.class)) return new SetDigitalZoomLevelValidator();
		if (clazz.equals(cmd.DayCamera.JonSharedCmdDayCamera.Focus.class)) return new FocusValidator();
		if (clazz.equals(cmd.DayCamera.JonSharedCmdDayCamera.Zoom.class)) return new ZoomValidator();
		if (clazz.equals(cmd.DayCamera.JonSharedCmdDayCamera.NextZoomTablePos.class)) return new NextZoomTablePosValidator();
		if (clazz.equals(cmd.DayCamera.JonSharedCmdDayCamera.PrevZoomTablePos.class)) return new PrevZoomTablePosValidator();
		if (clazz.equals(cmd.DayCamera.JonSharedCmdDayCamera.SetIris.class)) return new SetIrisValidator();
		if (clazz.equals(cmd.DayCamera.JonSharedCmdDayCamera.SetInfraRedFilter.class)) return new SetInfraRedFilterValidator();
		if (clazz.equals(cmd.DayCamera.JonSharedCmdDayCamera.SetAutoIris.class)) return new SetAutoIrisValidator();
		if (clazz.equals(cmd.DayCamera.JonSharedCmdDayCamera.SetZoomTableValue.class)) return new SetZoomTableValueValidator();
		if (clazz.equals(cmd.DayCamera.JonSharedCmdDayCamera.Stop.class)) return new StopValidator();
		if (clazz.equals(cmd.DayCamera.JonSharedCmdDayCamera.Start.class)) return new StartValidator();
		if (clazz.equals(cmd.DayCamera.JonSharedCmdDayCamera.Photo.class)) return new PhotoValidator();
		if (clazz.equals(cmd.DayCamera.JonSharedCmdDayCamera.Halt.class)) return new HaltValidator();
		if (clazz.equals(cmd.DayCamera.JonSharedCmdDayCamera.GetMeteo.class)) return new GetMeteoValidator();
		if (clazz.equals(cmd.DayCamera.JonSharedCmdDayCamera.ResetZoom.class)) return new ResetZoomValidator();
		if (clazz.equals(cmd.DayCamera.JonSharedCmdDayCamera.ResetFocus.class)) return new ResetFocusValidator();
		if (clazz.equals(cmd.DayCamera.JonSharedCmdDayCamera.SaveToTable.class)) return new SaveToTableValidator();
		if (clazz.equals(cmd.DayCamera.JonSharedCmdDayCamera.SaveToTableFocus.class)) return new SaveToTableFocusValidator();
		return null;
	}


/**
	 * Validates {@code SetValue} protobuf objects.
	 */
	public static class SetValueValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.DayCamera.JonSharedCmdDayCamera.SetValue> {
		
	
	
	

	public void assertValid(cmd.DayCamera.JonSharedCmdDayCamera.SetValue proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	// no validation rules for Value

	
	
	}
}
/**
	 * Validates {@code Move} protobuf objects.
	 */
	public static class MoveValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.DayCamera.JonSharedCmdDayCamera.Move> {
		
	
		
	
	
	

	public void assertValid(cmd.DayCamera.JonSharedCmdDayCamera.Move proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	// no validation rules for TargetValue

	// no validation rules for Speed

	
	
	}
}
/**
	 * Validates {@code Offset} protobuf objects.
	 */
	public static class OffsetValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.DayCamera.JonSharedCmdDayCamera.Offset> {
		
	
	
	

	public void assertValid(cmd.DayCamera.JonSharedCmdDayCamera.Offset proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	// no validation rules for OffsetValue

	
	
	}
}
/**
	 * Validates {@code SetClaheLevel} protobuf objects.
	 */
	public static class SetClaheLevelValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.DayCamera.JonSharedCmdDayCamera.SetClaheLevel> {
		
	
	
	

	public void assertValid(cmd.DayCamera.JonSharedCmdDayCamera.SetClaheLevel proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	// no validation rules for Value

	
	
	}
}
/**
	 * Validates {@code ShiftClaheLevel} protobuf objects.
	 */
	public static class ShiftClaheLevelValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.DayCamera.JonSharedCmdDayCamera.ShiftClaheLevel> {
		
	
	
	

	public void assertValid(cmd.DayCamera.JonSharedCmdDayCamera.ShiftClaheLevel proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	// no validation rules for Value

	
	
	}
}
/**
	 * Validates {@code Root} protobuf objects.
	 */
	public static class RootValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.DayCamera.JonSharedCmdDayCamera.Root> {
	
	
		


	

	public void assertValid(cmd.DayCamera.JonSharedCmdDayCamera.Root proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
	
		
			switch (proto.getCmdCase()) {
				case FOCUS:
					
			// Validate focus
			if (proto.hasFocus()) index.validatorFor(proto.getFocus()).assertValid(proto.getFocus());
					break;
				case ZOOM:
					
			// Validate zoom
			if (proto.hasZoom()) index.validatorFor(proto.getZoom()).assertValid(proto.getZoom());
					break;
				case SET_IRIS:
					
			// Validate set_iris
			if (proto.hasSetIris()) index.validatorFor(proto.getSetIris()).assertValid(proto.getSetIris());
					break;
				case SET_INFRA_RED_FILTER:
					
			// Validate set_infra_red_filter
			if (proto.hasSetInfraRedFilter()) index.validatorFor(proto.getSetInfraRedFilter()).assertValid(proto.getSetInfraRedFilter());
					break;
				case START:
					
			// Validate start
			if (proto.hasStart()) index.validatorFor(proto.getStart()).assertValid(proto.getStart());
					break;
				case STOP:
					
			// Validate stop
			if (proto.hasStop()) index.validatorFor(proto.getStop()).assertValid(proto.getStop());
					break;
				case PHOTO:
					
			// Validate photo
			if (proto.hasPhoto()) index.validatorFor(proto.getPhoto()).assertValid(proto.getPhoto());
					break;
				case SET_AUTO_IRIS:
					
			// Validate set_auto_iris
			if (proto.hasSetAutoIris()) index.validatorFor(proto.getSetAutoIris()).assertValid(proto.getSetAutoIris());
					break;
				case HALT_ALL:
					
			// Validate halt_all
			if (proto.hasHaltAll()) index.validatorFor(proto.getHaltAll()).assertValid(proto.getHaltAll());
					break;
				case SET_FX_MODE:
					
			// Validate set_fx_mode
			if (proto.hasSetFxMode()) index.validatorFor(proto.getSetFxMode()).assertValid(proto.getSetFxMode());
					break;
				case NEXT_FX_MODE:
					
			// Validate next_fx_mode
			if (proto.hasNextFxMode()) index.validatorFor(proto.getNextFxMode()).assertValid(proto.getNextFxMode());
					break;
				case PREV_FX_MODE:
					
			// Validate prev_fx_mode
			if (proto.hasPrevFxMode()) index.validatorFor(proto.getPrevFxMode()).assertValid(proto.getPrevFxMode());
					break;
				case GET_METEO:
					
			// Validate get_meteo
			if (proto.hasGetMeteo()) index.validatorFor(proto.getGetMeteo()).assertValid(proto.getGetMeteo());
					break;
				case REFRESH_FX_MODE:
					
			// Validate refresh_fx_mode
			if (proto.hasRefreshFxMode()) index.validatorFor(proto.getRefreshFxMode()).assertValid(proto.getRefreshFxMode());
					break;
				case SET_DIGITAL_ZOOM_LEVEL:
					
			// Validate set_digital_zoom_level
			if (proto.hasSetDigitalZoomLevel()) index.validatorFor(proto.getSetDigitalZoomLevel()).assertValid(proto.getSetDigitalZoomLevel());
					break;
				case SET_CLAHE_LEVEL:
					
			// Validate set_clahe_level
			if (proto.hasSetClaheLevel()) index.validatorFor(proto.getSetClaheLevel()).assertValid(proto.getSetClaheLevel());
					break;
				case SHIFT_CLAHE_LEVEL:
					
			// Validate shift_clahe_level
			if (proto.hasShiftClaheLevel()) index.validatorFor(proto.getShiftClaheLevel()).assertValid(proto.getShiftClaheLevel());
					break;
				
			}

	}
}
/**
	 * Validates {@code GetPos} protobuf objects.
	 */
	public static class GetPosValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.DayCamera.JonSharedCmdDayCamera.GetPos> {
	
	

	public void assertValid(cmd.DayCamera.JonSharedCmdDayCamera.GetPos proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
	
	}
}
/**
	 * Validates {@code NextFxMode} protobuf objects.
	 */
	public static class NextFxModeValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.DayCamera.JonSharedCmdDayCamera.NextFxMode> {
	
	

	public void assertValid(cmd.DayCamera.JonSharedCmdDayCamera.NextFxMode proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
	
	}
}
/**
	 * Validates {@code PrevFxMode} protobuf objects.
	 */
	public static class PrevFxModeValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.DayCamera.JonSharedCmdDayCamera.PrevFxMode> {
	
	

	public void assertValid(cmd.DayCamera.JonSharedCmdDayCamera.PrevFxMode proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
	
	}
}
/**
	 * Validates {@code RefreshFxMode} protobuf objects.
	 */
	public static class RefreshFxModeValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.DayCamera.JonSharedCmdDayCamera.RefreshFxMode> {
	
	

	public void assertValid(cmd.DayCamera.JonSharedCmdDayCamera.RefreshFxMode proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
	
	}
}
/**
	 * Validates {@code HaltAll} protobuf objects.
	 */
	public static class HaltAllValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.DayCamera.JonSharedCmdDayCamera.HaltAll> {
	
	

	public void assertValid(cmd.DayCamera.JonSharedCmdDayCamera.HaltAll proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
	
	}
}
/**
	 * Validates {@code SetFxMode} protobuf objects.
	 */
	public static class SetFxModeValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.DayCamera.JonSharedCmdDayCamera.SetFxMode> {
		
	
	
	

	public void assertValid(cmd.DayCamera.JonSharedCmdDayCamera.SetFxMode proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	// no validation rules for Mode

	
	
	}
}
/**
	 * Validates {@code SetDigitalZoomLevel} protobuf objects.
	 */
	public static class SetDigitalZoomLevelValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.DayCamera.JonSharedCmdDayCamera.SetDigitalZoomLevel> {
		
	
	
	

	public void assertValid(cmd.DayCamera.JonSharedCmdDayCamera.SetDigitalZoomLevel proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	// no validation rules for Value

	
	
	}
}
/**
	 * Validates {@code Focus} protobuf objects.
	 */
	public static class FocusValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.DayCamera.JonSharedCmdDayCamera.Focus> {
	
	
		


	

	public void assertValid(cmd.DayCamera.JonSharedCmdDayCamera.Focus proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
	
		
			switch (proto.getCmdCase()) {
				case SET_VALUE:
					
			// Validate set_value
			if (proto.hasSetValue()) index.validatorFor(proto.getSetValue()).assertValid(proto.getSetValue());
					break;
				case MOVE:
					
			// Validate move
			if (proto.hasMove()) index.validatorFor(proto.getMove()).assertValid(proto.getMove());
					break;
				case HALT:
					
			// Validate halt
			if (proto.hasHalt()) index.validatorFor(proto.getHalt()).assertValid(proto.getHalt());
					break;
				case OFFSET:
					
			// Validate offset
			if (proto.hasOffset()) index.validatorFor(proto.getOffset()).assertValid(proto.getOffset());
					break;
				case RESET_FOCUS:
					
			// Validate reset_focus
			if (proto.hasResetFocus()) index.validatorFor(proto.getResetFocus()).assertValid(proto.getResetFocus());
					break;
				case SAVE_TO_TABLE_FOCUS:
					
			// Validate save_to_table_focus
			if (proto.hasSaveToTableFocus()) index.validatorFor(proto.getSaveToTableFocus()).assertValid(proto.getSaveToTableFocus());
					break;
				
			}

	}
}
/**
	 * Validates {@code Zoom} protobuf objects.
	 */
	public static class ZoomValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.DayCamera.JonSharedCmdDayCamera.Zoom> {
	
	
		


	

	public void assertValid(cmd.DayCamera.JonSharedCmdDayCamera.Zoom proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
	
		
			switch (proto.getCmdCase()) {
				case SET_VALUE:
					
			// Validate set_value
			if (proto.hasSetValue()) index.validatorFor(proto.getSetValue()).assertValid(proto.getSetValue());
					break;
				case MOVE:
					
			// Validate move
			if (proto.hasMove()) index.validatorFor(proto.getMove()).assertValid(proto.getMove());
					break;
				case HALT:
					
			// Validate halt
			if (proto.hasHalt()) index.validatorFor(proto.getHalt()).assertValid(proto.getHalt());
					break;
				case SET_ZOOM_TABLE_VALUE:
					
			// Validate set_zoom_table_value
			if (proto.hasSetZoomTableValue()) index.validatorFor(proto.getSetZoomTableValue()).assertValid(proto.getSetZoomTableValue());
					break;
				case NEXT_ZOOM_TABLE_POS:
					
			// Validate next_zoom_table_pos
			if (proto.hasNextZoomTablePos()) index.validatorFor(proto.getNextZoomTablePos()).assertValid(proto.getNextZoomTablePos());
					break;
				case PREV_ZOOM_TABLE_POS:
					
			// Validate prev_zoom_table_pos
			if (proto.hasPrevZoomTablePos()) index.validatorFor(proto.getPrevZoomTablePos()).assertValid(proto.getPrevZoomTablePos());
					break;
				case OFFSET:
					
			// Validate offset
			if (proto.hasOffset()) index.validatorFor(proto.getOffset()).assertValid(proto.getOffset());
					break;
				case RESET_ZOOM:
					
			// Validate reset_zoom
			if (proto.hasResetZoom()) index.validatorFor(proto.getResetZoom()).assertValid(proto.getResetZoom());
					break;
				case SAVE_TO_TABLE:
					
			// Validate save_to_table
			if (proto.hasSaveToTable()) index.validatorFor(proto.getSaveToTable()).assertValid(proto.getSaveToTable());
					break;
				
			}

	}
}
/**
	 * Validates {@code NextZoomTablePos} protobuf objects.
	 */
	public static class NextZoomTablePosValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.DayCamera.JonSharedCmdDayCamera.NextZoomTablePos> {
	
	

	public void assertValid(cmd.DayCamera.JonSharedCmdDayCamera.NextZoomTablePos proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
	
	}
}
/**
	 * Validates {@code PrevZoomTablePos} protobuf objects.
	 */
	public static class PrevZoomTablePosValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.DayCamera.JonSharedCmdDayCamera.PrevZoomTablePos> {
	
	

	public void assertValid(cmd.DayCamera.JonSharedCmdDayCamera.PrevZoomTablePos proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
	
	}
}
/**
	 * Validates {@code SetIris} protobuf objects.
	 */
	public static class SetIrisValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.DayCamera.JonSharedCmdDayCamera.SetIris> {
		
	
	
	

	public void assertValid(cmd.DayCamera.JonSharedCmdDayCamera.SetIris proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	// no validation rules for Value

	
	
	}
}
/**
	 * Validates {@code SetInfraRedFilter} protobuf objects.
	 */
	public static class SetInfraRedFilterValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.DayCamera.JonSharedCmdDayCamera.SetInfraRedFilter> {
		
	
	
	

	public void assertValid(cmd.DayCamera.JonSharedCmdDayCamera.SetInfraRedFilter proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	// no validation rules for Value

	
	
	}
}
/**
	 * Validates {@code SetAutoIris} protobuf objects.
	 */
	public static class SetAutoIrisValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.DayCamera.JonSharedCmdDayCamera.SetAutoIris> {
		
	
	
	

	public void assertValid(cmd.DayCamera.JonSharedCmdDayCamera.SetAutoIris proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	// no validation rules for Value

	
	
	}
}
/**
	 * Validates {@code SetZoomTableValue} protobuf objects.
	 */
	public static class SetZoomTableValueValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.DayCamera.JonSharedCmdDayCamera.SetZoomTableValue> {
		
	
	
	

	public void assertValid(cmd.DayCamera.JonSharedCmdDayCamera.SetZoomTableValue proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	// no validation rules for Value

	
	
	}
}
/**
	 * Validates {@code Stop} protobuf objects.
	 */
	public static class StopValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.DayCamera.JonSharedCmdDayCamera.Stop> {
	
	

	public void assertValid(cmd.DayCamera.JonSharedCmdDayCamera.Stop proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
	
	}
}
/**
	 * Validates {@code Start} protobuf objects.
	 */
	public static class StartValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.DayCamera.JonSharedCmdDayCamera.Start> {
	
	

	public void assertValid(cmd.DayCamera.JonSharedCmdDayCamera.Start proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
	
	}
}
/**
	 * Validates {@code Photo} protobuf objects.
	 */
	public static class PhotoValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.DayCamera.JonSharedCmdDayCamera.Photo> {
	
	

	public void assertValid(cmd.DayCamera.JonSharedCmdDayCamera.Photo proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
	
	}
}
/**
	 * Validates {@code Halt} protobuf objects.
	 */
	public static class HaltValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.DayCamera.JonSharedCmdDayCamera.Halt> {
	
	

	public void assertValid(cmd.DayCamera.JonSharedCmdDayCamera.Halt proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
	
	}
}
/**
	 * Validates {@code GetMeteo} protobuf objects.
	 */
	public static class GetMeteoValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.DayCamera.JonSharedCmdDayCamera.GetMeteo> {
	
	

	public void assertValid(cmd.DayCamera.JonSharedCmdDayCamera.GetMeteo proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
	
	}
}
/**
	 * Validates {@code ResetZoom} protobuf objects.
	 */
	public static class ResetZoomValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.DayCamera.JonSharedCmdDayCamera.ResetZoom> {
	
	

	public void assertValid(cmd.DayCamera.JonSharedCmdDayCamera.ResetZoom proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
	
	}
}
/**
	 * Validates {@code ResetFocus} protobuf objects.
	 */
	public static class ResetFocusValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.DayCamera.JonSharedCmdDayCamera.ResetFocus> {
	
	

	public void assertValid(cmd.DayCamera.JonSharedCmdDayCamera.ResetFocus proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
	
	}
}
/**
	 * Validates {@code SaveToTable} protobuf objects.
	 */
	public static class SaveToTableValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.DayCamera.JonSharedCmdDayCamera.SaveToTable> {
	
	

	public void assertValid(cmd.DayCamera.JonSharedCmdDayCamera.SaveToTable proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
	
	}
}
/**
	 * Validates {@code SaveToTableFocus} protobuf objects.
	 */
	public static class SaveToTableFocusValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.DayCamera.JonSharedCmdDayCamera.SaveToTableFocus> {
	
	

	public void assertValid(cmd.DayCamera.JonSharedCmdDayCamera.SaveToTableFocus proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
	
	}
}
}

