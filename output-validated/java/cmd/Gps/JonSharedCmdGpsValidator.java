// Code generated by protoc-gen-validate. DO NOT EDIT.
// source: jon_shared_cmd_gps.proto

package cmd.Gps;


@SuppressWarnings("all")
public class JonSharedCmdGpsValidator {
	public static io.envoyproxy.pgv.ValidatorImpl validatorFor(Class clazz) {
		
		if (clazz.equals(cmd.Gps.JonSharedCmdGps.Root.class)) return new RootValidator();
		if (clazz.equals(cmd.Gps.JonSharedCmdGps.Start.class)) return new StartValidator();
		if (clazz.equals(cmd.Gps.JonSharedCmdGps.Stop.class)) return new StopValidator();
		if (clazz.equals(cmd.Gps.JonSharedCmdGps.GetMeteo.class)) return new GetMeteoValidator();
		if (clazz.equals(cmd.Gps.JonSharedCmdGps.SetUseManualPosition.class)) return new SetUseManualPositionValidator();
		if (clazz.equals(cmd.Gps.JonSharedCmdGps.SetManualPosition.class)) return new SetManualPositionValidator();
		return null;
	}


/**
	 * Validates {@code Root} protobuf objects.
	 */
	public static class RootValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.Gps.JonSharedCmdGps.Root> {
	
	
		


	

	public void assertValid(cmd.Gps.JonSharedCmdGps.Root proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
	
		
			switch (proto.getCmdCase()) {
				case START:
					
			// Validate start
			if (proto.hasStart()) index.validatorFor(proto.getStart()).assertValid(proto.getStart());
					break;
				case STOP:
					
			// Validate stop
			if (proto.hasStop()) index.validatorFor(proto.getStop()).assertValid(proto.getStop());
					break;
				case SET_MANUAL_POSITION:
					
			// Validate set_manual_position
			if (proto.hasSetManualPosition()) index.validatorFor(proto.getSetManualPosition()).assertValid(proto.getSetManualPosition());
					break;
				case SET_USE_MANUAL_POSITION:
					
			// Validate set_use_manual_position
			if (proto.hasSetUseManualPosition()) index.validatorFor(proto.getSetUseManualPosition()).assertValid(proto.getSetUseManualPosition());
					break;
				case GET_METEO:
					
			// Validate get_meteo
			if (proto.hasGetMeteo()) index.validatorFor(proto.getGetMeteo()).assertValid(proto.getGetMeteo());
					break;
				
			}

	}
}
/**
	 * Validates {@code Start} protobuf objects.
	 */
	public static class StartValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.Gps.JonSharedCmdGps.Start> {
	
	

	public void assertValid(cmd.Gps.JonSharedCmdGps.Start proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
	
	}
}
/**
	 * Validates {@code Stop} protobuf objects.
	 */
	public static class StopValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.Gps.JonSharedCmdGps.Stop> {
	
	

	public void assertValid(cmd.Gps.JonSharedCmdGps.Stop proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
	
	}
}
/**
	 * Validates {@code GetMeteo} protobuf objects.
	 */
	public static class GetMeteoValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.Gps.JonSharedCmdGps.GetMeteo> {
	
	

	public void assertValid(cmd.Gps.JonSharedCmdGps.GetMeteo proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
	
	}
}
/**
	 * Validates {@code SetUseManualPosition} protobuf objects.
	 */
	public static class SetUseManualPositionValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.Gps.JonSharedCmdGps.SetUseManualPosition> {
		
	
	
	

	public void assertValid(cmd.Gps.JonSharedCmdGps.SetUseManualPosition proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	// no validation rules for Flag

	
	
	}
}
/**
	 * Validates {@code SetManualPosition} protobuf objects.
	 */
	public static class SetManualPositionValidator implements io.envoyproxy.pgv.ValidatorImpl<cmd.Gps.JonSharedCmdGps.SetManualPosition> {
		
	
		
	
		
	
	
	

	public void assertValid(cmd.Gps.JonSharedCmdGps.SetManualPosition proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	// no validation rules for Latitude

	// no validation rules for Longitude

	// no validation rules for Altitude

	
	
	}
}
}

