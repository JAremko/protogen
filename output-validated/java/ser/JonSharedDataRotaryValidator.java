// Code generated by protoc-gen-validate. DO NOT EDIT.
// source: jon_shared_data_rotary.proto

package ser;


@SuppressWarnings("all")
public class JonSharedDataRotaryValidator {
	public static io.envoyproxy.pgv.ValidatorImpl validatorFor(Class clazz) {
		
		if (clazz.equals(ser.JonSharedDataRotary.JonGuiDataRotary.class)) return new JonGuiDataRotaryValidator();
		if (clazz.equals(ser.JonSharedDataRotary.ScanNode.class)) return new ScanNodeValidator();
		return null;
	}


/**
	 * Validates {@code JonGuiDataRotary} protobuf objects.
	 */
	public static class JonGuiDataRotaryValidator implements io.envoyproxy.pgv.ValidatorImpl<ser.JonSharedDataRotary.JonGuiDataRotary> {
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
	
	

	public void assertValid(ser.JonSharedDataRotary.JonGuiDataRotary proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	// no validation rules for Azimuth

	// no validation rules for AzimuthSpeed

	// no validation rules for Elevation

	// no validation rules for ElevationSpeed

	// no validation rules for PlatformAzimuth

	// no validation rules for PlatformElevation

	// no validation rules for PlatformBank

	// no validation rules for IsMoving

	// no validation rules for Mode

	// no validation rules for IsScanning

	// no validation rules for IsScanningPaused

	// no validation rules for UseRotaryAsCompass

	// no validation rules for ScanTarget

	// no validation rules for ScanTargetMax

	// no validation rules for SunAzimuth

	// no validation rules for SunElevation

	
			// Validate current_scan_node
			if (proto.hasCurrentScanNode()) index.validatorFor(proto.getCurrentScanNode()).assertValid(proto.getCurrentScanNode());
	
	
	}
}
/**
	 * Validates {@code ScanNode} protobuf objects.
	 */
	public static class ScanNodeValidator implements io.envoyproxy.pgv.ValidatorImpl<ser.JonSharedDataRotary.ScanNode> {
		
	
		
	
		
	
		
	
		
	
		
	
		
	
	
	

	public void assertValid(ser.JonSharedDataRotary.ScanNode proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	// no validation rules for Index

	// no validation rules for DayZoomTableValue

	// no validation rules for HeatZoomTableValue

	// no validation rules for Azimuth

	// no validation rules for Elevation

	// no validation rules for Linger

	// no validation rules for Speed

	
	
	}
}
}

