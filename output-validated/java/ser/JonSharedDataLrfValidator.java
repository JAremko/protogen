// Code generated by protoc-gen-validate. DO NOT EDIT.
// source: jon_shared_data_lrf.proto

package ser;


@SuppressWarnings("all")
public class JonSharedDataLrfValidator {
	public static io.envoyproxy.pgv.ValidatorImpl validatorFor(Class clazz) {
		
		if (clazz.equals(ser.JonSharedDataLrf.JonGuiDataLrf.class)) return new JonGuiDataLrfValidator();
		if (clazz.equals(ser.JonSharedDataLrf.JonGuiDataTarget.class)) return new JonGuiDataTargetValidator();
		if (clazz.equals(ser.JonSharedDataLrf.RgbColor.class)) return new RgbColorValidator();
		return null;
	}


/**
	 * Validates {@code JonGuiDataLrf} protobuf objects.
	 */
	public static class JonGuiDataLrfValidator implements io.envoyproxy.pgv.ValidatorImpl<ser.JonSharedDataLrf.JonGuiDataLrf> {
		
	
		
	
		
	
		
	
		
	
		
	
		
	
	
	

	public void assertValid(ser.JonSharedDataLrf.JonGuiDataLrf proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	// no validation rules for IsScanning

	// no validation rules for IsMeasuring

	// no validation rules for MeasureId

	
			// Validate target
			if (proto.hasTarget()) index.validatorFor(proto.getTarget()).assertValid(proto.getTarget());
	// no validation rules for PointerMode

	// no validation rules for FogModeEnabled

	// no validation rules for IsRefining

	
	
	}
}
/**
	 * Validates {@code JonGuiDataTarget} protobuf objects.
	 */
	public static class JonGuiDataTargetValidator implements io.envoyproxy.pgv.ValidatorImpl<ser.JonSharedDataLrf.JonGuiDataTarget> {
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
		
	
	
	

	public void assertValid(ser.JonSharedDataLrf.JonGuiDataTarget proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	// no validation rules for Timestamp

	// no validation rules for TargetLongitude

	// no validation rules for TargetLatitude

	// no validation rules for TargetAltitude

	// no validation rules for ObserverLongitude

	// no validation rules for ObserverLatitude

	// no validation rules for ObserverAltitude

	// no validation rules for ObserverAzimuth

	// no validation rules for ObserverElevation

	// no validation rules for ObserverBank

	// no validation rules for Distance_2D

	// no validation rules for Distance_3B

	// no validation rules for ObserverFixType

	// no validation rules for SessionId

	// no validation rules for TargetId

	
			// Validate target_color
			if (proto.hasTargetColor()) index.validatorFor(proto.getTargetColor()).assertValid(proto.getTargetColor());
	// no validation rules for Type

	// no validation rules for UuidPart1

	// no validation rules for UuidPart2

	// no validation rules for UuidPart3

	// no validation rules for UuidPart4

	
	
	}
}
/**
	 * Validates {@code RgbColor} protobuf objects.
	 */
	public static class RgbColorValidator implements io.envoyproxy.pgv.ValidatorImpl<ser.JonSharedDataLrf.RgbColor> {
		
	
		
	
		
	
	
	

	public void assertValid(ser.JonSharedDataLrf.RgbColor proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	// no validation rules for Red

	// no validation rules for Green

	// no validation rules for Blue

	
	
	}
}
}

